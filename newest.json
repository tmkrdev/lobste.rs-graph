[{"short_id":"uxfzzv","created_at":"2025-10-12T05:20:52.000-05:00","title":"The reason GCC is not a library (2000)","url":"https://gcc.gnu.org/legacy-ml/gcc/2000-01/msg00572.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"RaphGL","user_is_author":false,"tags":["compilers"],"short_id_url":"https://lobste.rs/s/uxfzzv","comments_url":"https://lobste.rs/s/uxfzzv/reason_gcc_is_not_library_2000"},{"short_id":"jd4tj8","created_at":"2025-10-12T04:53:29.000-05:00","title":"My Django On The Med 2025","url":"https://www.paulox.net/2025/10/12/my-django-on-the-med-2025/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"pauloxnet","user_is_author":true,"tags":["python","web"],"short_id_url":"https://lobste.rs/s/jd4tj8","comments_url":"https://lobste.rs/s/jd4tj8/my_django_on_med_2025"},{"short_id":"gocddb","created_at":"2025-10-12T03:33:21.000-05:00","title":"Switch to Jujutsu already: a tutorial","url":"https://www.stavros.io/posts/switch-to-jujutsu-already-a-tutorial/","score":11,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"keybits","user_is_author":false,"tags":["vcs"],"short_id_url":"https://lobste.rs/s/gocddb","comments_url":"https://lobste.rs/s/gocddb/switch_jujutsu_already_tutorial"},{"short_id":"op8abx","created_at":"2025-10-12T02:10:44.000-05:00","title":"Sharp Bilinear Filters: Big Clean Pixels for Pixel Art","url":"https://bumbershootsoft.wordpress.com/2025/10/11/sharp-bilinear-filters-big-clean-pixels-for-pixel-art/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"asb","user_is_author":false,"tags":["graphics"],"short_id_url":"https://lobste.rs/s/op8abx","comments_url":"https://lobste.rs/s/op8abx/sharp_bilinear_filters_big_clean_pixels"},{"short_id":"saj9h2","created_at":"2025-10-12T01:15:21.000-05:00","title":"Three ways \"formally verified\" can go wrong","url":"https://buttondown.com/hillelwayne/archive/three-ways-formally-verified-code-can-go-wrong-in/","score":7,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"rbr","user_is_author":false,"tags":["formalmethods"],"short_id_url":"https://lobste.rs/s/saj9h2","comments_url":"https://lobste.rs/s/saj9h2/three_ways_formally_verified_can_go_wrong"},{"short_id":"3t8fuz","created_at":"2025-10-12T01:00:47.000-05:00","title":"ksmbd - Exploiting CVE-2025-37947","url":"https://blog.doyensec.com/2025/10/08/ksmbd-3.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"fro","user_is_author":false,"tags":["linux","security"],"short_id_url":"https://lobste.rs/s/3t8fuz","comments_url":"https://lobste.rs/s/3t8fuz/ksmbd_exploiting_cve_2025_37947"},{"short_id":"iktkkz","created_at":"2025-10-11T18:54:00.000-05:00","title":"LineageOS 23 released","url":"https://lineageos.org/Changelog-30/","score":17,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"timschumi","user_is_author":false,"tags":["android"],"short_id_url":"https://lobste.rs/s/iktkkz","comments_url":"https://lobste.rs/s/iktkkz/lineageos_23_released"},{"short_id":"juxp61","created_at":"2025-10-11T17:45:23.000-05:00","title":"Testing two 18 TB white label SATA hard drives from datablocks.dev","url":"https://ounapuu.ee/posts/2025/10/06/datablocks-white-label-drives/","score":17,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"lproven","user_is_author":false,"tags":["hardware"],"short_id_url":"https://lobste.rs/s/juxp61","comments_url":"https://lobste.rs/s/juxp61/testing_two_18_tb_white_label_sata_hard"},{"short_id":"qh6frl","created_at":"2025-10-11T17:05:46.000-05:00","title":"Tinymist is an integrated language service for Typst","url":"https://myriad-dreamin.github.io/tinymist/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"jado","user_is_author":false,"tags":["programming"],"short_id_url":"https://lobste.rs/s/qh6frl","comments_url":"https://lobste.rs/s/qh6frl/tinymist_is_integrated_language_service"},{"short_id":"qar3sx","created_at":"2025-10-11T16:10:55.000-05:00","title":"Burrows-Wheeler Transform (BWT)","url":"https://sandbox.bio/concepts/bwt","score":20,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"cgc373","user_is_author":false,"tags":["math","science"],"short_id_url":"https://lobste.rs/s/qar3sx","comments_url":"https://lobste.rs/s/qar3sx/burrows_wheeler_transform_bwt"},{"short_id":"nhbkr0","created_at":"2025-10-11T12:23:46.000-05:00","title":"Less is More: Recursive Reasoning with Tiny Networks","url":"https://alexiajm.github.io/2025/09/29/tiny_recursive_models.html","score":12,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"lacker","user_is_author":false,"tags":["ai"],"short_id_url":"https://lobste.rs/s/nhbkr0","comments_url":"https://lobste.rs/s/nhbkr0/less_is_more_recursive_reasoning_with"},{"short_id":"favaj0","created_at":"2025-10-11T11:16:43.000-05:00","title":"WSL-For-FreeBSD: Experimental project to FreeBSD in WSL2","url":"https://github.com/BalajeS/WSL-For-FreeBSD","score":16,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"linkdd","user_is_author":false,"tags":["freebsd","virtualization","windows"],"short_id_url":"https://lobste.rs/s/favaj0","comments_url":"https://lobste.rs/s/favaj0/wsl_for_freebsd_experimental_project"},{"short_id":"ksrmbf","created_at":"2025-10-11T10:42:10.000-05:00","title":"Let's Take Esoteric Programming Languages Seriously","url":"https://arxiv.org/abs/2505.15327v2","score":6,"flags":0,"comment_count":1,"description":"\u003cblockquote\u003e\n\u003cp\u003eEsoteric programming languages are challenging to learn, but their unusual features and constraints may serve to improve programming ability. From languages designed to be intentionally obtuse (e.g. INTERCAL) to others targeting artistic expression (e.g. Piet) or exploring the nature of computation (e.g. Fractan), there is rich variety in the realm of esoteric programming languages. This essay examines the counterintuitive appeal of esoteric languages and seeks to analyse reasons for this popularity. We will explore why people are attracted to esoteric languages in terms of (a) program comprehension and construction, as well as (b) language design and implementation. Our assertion is that esoteric languages can improve general PL awareness, at the same time as enabling the esoteric programmer to impress their peers with obscure knowledge. We will also consider pedagogic principles and the use of AI, in relation to esoteric languages. Emerging from the specific discussion, we identify a general set of 'good' reasons for designing new programming languages. It may not be possible to be exhaustive on this topic, and it is certain we have not achieved that goal here. However we believe our most important contribution is to draw attention to the varied and often implicit motivations involved in programming language design.\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"\u003e Esoteric programming languages are challenging to learn, but their unusual features and constraints may serve to improve programming ability. From languages designed to be intentionally obtuse (e.g. INTERCAL) to others targeting artistic expression (e.g. Piet) or exploring the nature of computation (e.g. Fractan), there is rich variety in the realm of esoteric programming languages. This essay examines the counterintuitive appeal of esoteric languages and seeks to analyse reasons for this popularity. We will explore why people are attracted to esoteric languages in terms of (a) program comprehension and construction, as well as (b) language design and implementation. Our assertion is that esoteric languages can improve general PL awareness, at the same time as enabling the esoteric programmer to impress their peers with obscure knowledge. We will also consider pedagogic principles and the use of AI, in relation to esoteric languages. Emerging from the specific discussion, we identify a general set of 'good' reasons for designing new programming languages. It may not be possible to be exhaustive on this topic, and it is certain we have not achieved that goal here. However we believe our most important contribution is to draw attention to the varied and often implicit motivations involved in programming language design.","submitter_user":"veqq","user_is_author":false,"tags":["culture","plt"],"short_id_url":"https://lobste.rs/s/ksrmbf","comments_url":"https://lobste.rs/s/ksrmbf/let_s_take_esoteric_programming"},{"short_id":"kmx1md","created_at":"2025-10-11T10:09:47.000-05:00","title":"Monument Engine: Jx","url":"https://www.monument.ai/m/parallel","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"veqq","user_is_author":false,"tags":["apl"],"short_id_url":"https://lobste.rs/s/kmx1md","comments_url":"https://lobste.rs/s/kmx1md/monument_engine_jx"},{"short_id":"pkqgq6","created_at":"2025-10-11T10:02:50.000-05:00","title":"Vibing a Non-Trivial Ghostty Feature","url":"https://mitchellh.com/writing/non-trivial-vibing","score":41,"flags":0,"comment_count":23,"description":"","description_plain":"","submitter_user":"gmem","user_is_author":false,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/pkqgq6","comments_url":"https://lobste.rs/s/pkqgq6/vibing_non_trivial_ghostty_feature"},{"short_id":"amyxjx","created_at":"2025-10-11T09:13:07.000-05:00","title":"Async Rust with Tokio I/O Streams: Backpressure, Concurrency, and Ergonomics","url":"https://biriukov.dev/docs/async-rust-tokio-io/1-async-rust-with-tokio-io-streams-backpressure-concurrency-and-ergonomics/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"robinhundt","user_is_author":false,"tags":["rust"],"short_id_url":"https://lobste.rs/s/amyxjx","comments_url":"https://lobste.rs/s/amyxjx/async_rust_with_tokio_i_o_streams"},{"short_id":"tvxihj","created_at":"2025-10-11T09:01:35.000-05:00","title":"The European Accessibility Act will make the Web Better for Everyone","url":"https://denodell.com/blog/a-better-web-for-everyone-everywhere","score":14,"flags":0,"comment_count":14,"description":"","description_plain":"","submitter_user":"rbr","user_is_author":false,"tags":["a11y","law","web"],"short_id_url":"https://lobste.rs/s/tvxihj","comments_url":"https://lobste.rs/s/tvxihj/european_accessibility_act_will_make_web"},{"short_id":"w4hbzk","created_at":"2025-10-11T08:43:20.000-05:00","title":"Synthetic aperture radar autofocus and calibration","url":"https://hforsten.com/synthetic-aperture-radar-autofocus-and-calibration.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"fanf","user_is_author":false,"tags":["hardware","math","science"],"short_id_url":"https://lobste.rs/s/w4hbzk","comments_url":"https://lobste.rs/s/w4hbzk/synthetic_aperture_radar_autofocus"},{"short_id":"lcfs1n","created_at":"2025-10-11T07:03:46.000-05:00","title":"Dijkstra on the foolishness of natural language programming (1978)","url":"https://www.cs.utexas.edu/~EWD/transcriptions/EWD06xx/EWD667.html","score":34,"flags":0,"comment_count":10,"description":"","description_plain":"","submitter_user":"facundoolano","user_is_author":false,"tags":["historical","plt"],"short_id_url":"https://lobste.rs/s/lcfs1n","comments_url":"https://lobste.rs/s/lcfs1n/dijkstra_on_foolishness_natural"},{"short_id":"vulmn4","created_at":"2025-10-11T06:44:57.000-05:00","title":"Liquid Glass Is Cracked, and Usability Suffers in iOS 26","url":"https://www.nngroup.com/articles/liquid-glass/","score":85,"flags":0,"comment_count":28,"description":"","description_plain":"","submitter_user":"knl","user_is_author":false,"tags":["design","mac"],"short_id_url":"https://lobste.rs/s/vulmn4","comments_url":"https://lobste.rs/s/vulmn4/liquid_glass_is_cracked_usability"},{"short_id":"jlbbjo","created_at":"2025-10-11T05:51:44.000-05:00","title":"On the Health Effects of Electromagnetic Radiation","url":"https://huijzer.xyz/posts/98/printing-a-book-at-home-with-minimal-equipment","score":1,"flags":7,"comment_count":2,"description":"","description_plain":"","submitter_user":"rikhuijzer","user_is_author":true,"tags":["science"],"short_id_url":"https://lobste.rs/s/jlbbjo","comments_url":"https://lobste.rs/s/jlbbjo/on_health_effects_electromagnetic"},{"short_id":"9xnt9k","created_at":"2025-10-11T05:00:51.000-05:00","title":"Eon -  an Effects-based OCaml Nameserver","url":"https://ryan.freumh.org/eon.html","score":20,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"op","user_is_author":false,"tags":["ml","web"],"short_id_url":"https://lobste.rs/s/9xnt9k","comments_url":"https://lobste.rs/s/9xnt9k/eon_effects_based_ocaml_nameserver"},{"short_id":"t6z6om","created_at":"2025-10-11T04:20:05.000-05:00","title":"Matrix Multiplication on Blackwell: Part 4 - Breaking SOTA","url":"https://www.modular.com/blog/matrix-multiplication-on-blackwell-part-4---breaking-sota","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"mikejsavage","user_is_author":false,"tags":["performance"],"short_id_url":"https://lobste.rs/s/t6z6om","comments_url":"https://lobste.rs/s/t6z6om/matrix_multiplication_on_blackwell_part"},{"short_id":"eakigd","created_at":"2025-10-11T03:25:20.000-05:00","title":"HTML’s Best Kept Secret: The output Tag","url":"https://denodell.com/blog/html-best-kept-secret-output-tag","score":68,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"oger","user_is_author":false,"tags":["a11y","web"],"short_id_url":"https://lobste.rs/s/eakigd","comments_url":"https://lobste.rs/s/eakigd/html_s_best_kept_secret_output_tag"},{"short_id":"uljytl","created_at":"2025-10-11T03:05:45.000-05:00","title":"DebDroid - Debian on Android (v1.1)","url":"https://github.com/NICUP14/DebDroid","score":10,"flags":0,"comment_count":1,"description":"\u003cp\u003eHello guys! I'm happy to share \u003cstrong\u003eDebDroid\u003c/strong\u003e, a free and open-source project that aims to bring a real Debian environment to Android devices. It is not Termux-based, nor a simple proot-based wrapper, but a real, near-native chroot environment running on top of the Android kernel.\u003c/p\u003e\n\u003cp\u003eThe project is built around a heavily modified version of the Kali Nethunter's script I've developed 3 years ago. This new version (DebDroid) brings greatly improved security, isolation and additional compatibility patches. It's a project meant for tinkerers, hobbyists and power users.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhy not Termux?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eUnlike Termux or Proot, which run Linux tools via Android-compiled binaries or user-space emulation, DebDroid runs a real Debian chroot directly on Android. It ships its own programs, libraries, patches and links key Android filesystems into the Debian environment, providing near-native Linux functionality and the ability to run almost any Debian-compatible program.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhat for?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWith DebDroid, you can repurpose an older Android device into an raspberry pi-style lightweight Debian server with near-native performance:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRun a network-level NAT/adblocker\u003c/li\u003e\n\u003cli\u003eRun web servers like \u003ccode\u003enginx\u003c/code\u003e or \u003ccode\u003elighttpd\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eHost a small \u003ccode\u003essh\u003c/code\u003e or \u003ccode\u003esftp\u003c/code\u003e service\u003c/li\u003e\n\u003cli\u003eUse it for automation with \u003ccode\u003ecron\u003c/code\u003e or shell scripts\u003c/li\u003e\n\u003cli\u003eExperiment with Debian packages in a isolated environment\u003c/li\u003e\n\u003cli\u003eRun a X11 vnc server (WIP!)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eFeatures:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eglibc-based.\u003c/li\u003e\n\u003cli\u003eSmall and portable.\u003c/li\u003e\n\u003cli\u003eNo external dependencies.\u003c/li\u003e\n\u003cli\u003eRuns a minimal Debian Linux userland in a isolated chroot environment.\u003c/li\u003e\n\u003cli\u003eMounts key Android system paths to provide near-native Linux functionality.\u003c/li\u003e\n\u003cli\u003eEmploys \u003ccode\u003eunshare\u003c/code\u003e to isolate Android mountpoints from the chroot environment.\u003c/li\u003e\n\u003cli\u003eSupports \u003ccode\u003e/dev\u003c/code\u003e overlayfs, creating a writable layer over device files without modifying the real \u003ccode\u003e/dev\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eNotes:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWorks best on older Android versions (6–12).\u003c/li\u003e\n\u003cli\u003eDebDroid is still experimental and intended for exploration, learning, and hobby use.\u003c/li\u003e\n\u003cli\u003eGPU acceleration is currently not supported. (and might not even be possible)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eDo not run DebDroid on your main (daily driver) phone!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eContributors and testers are always welcome!\u003c/strong\u003e\u003c/p\u003e\n","description_plain":"Hello guys! I'm happy to share **DebDroid**, a free and open-source project that aims to bring a real Debian environment to Android devices. It is not Termux-based, nor a simple proot-based wrapper, but a real, near-native chroot environment running on top of the Android kernel.\r\n\r\nThe project is built around a heavily modified version of the Kali Nethunter's script I've developed 3 years ago. This new version (DebDroid) brings greatly improved security, isolation and additional compatibility patches. It's a project meant for tinkerers, hobbyists and power users.\r\n\r\n**Why not Termux?**\r\n\r\nUnlike Termux or Proot, which run Linux tools via Android-compiled binaries or user-space emulation, DebDroid runs a real Debian chroot directly on Android. It ships its own programs, libraries, patches and links key Android filesystems into the Debian environment, providing near-native Linux functionality and the ability to run almost any Debian-compatible program.\r\n\r\n**What for?**\r\n\r\nWith DebDroid, you can repurpose an older Android device into an raspberry pi-style lightweight Debian server with near-native performance:\r\n\r\n* Run a network-level NAT/adblocker\r\n* Run web servers like `nginx` or `lighttpd`\r\n* Host a small `ssh` or `sftp` service\r\n* Use it for automation with `cron` or shell scripts\r\n* Experiment with Debian packages in a isolated environment\r\n* Run a X11 vnc server (WIP!)\r\n\r\n**Features:**\r\n\r\n* glibc-based.\r\n* Small and portable.\r\n* No external dependencies.\r\n* Runs a minimal Debian Linux userland in a isolated chroot environment.\r\n* Mounts key Android system paths to provide near-native Linux functionality.\r\n* Employs `unshare` to isolate Android mountpoints from the chroot environment.\r\n* Supports `/dev` overlayfs, creating a writable layer over device files without modifying the real `/dev`.\r\n\r\n**Notes:**\r\n\r\n* Works best on older Android versions (6–12).\r\n* DebDroid is still experimental and intended for exploration, learning, and hobby use.\r\n* GPU acceleration is currently not supported. (and might not even be possible)\r\n\r\n**Do not run DebDroid on your main (daily driver) phone!**\r\n\r\n**Contributors and testers are always welcome!**","submitter_user":"NICUP14","user_is_author":true,"tags":["android","linux","release","unix"],"short_id_url":"https://lobste.rs/s/uljytl","comments_url":"https://lobste.rs/s/uljytl/debdroid_debian_on_android_v1_1"}]