[{"short_id":"krs8sm","created_at":"2025-08-23T09:23:14.000-05:00","title":"SXO :: Optimized Server-Side JSX. Build Simple. Build Fast","url":"https://github.com/gc-victor/sxo","score":2,"flags":0,"comment_count":2,"description":"\u003cp\u003eA \u003cstrong\u003efast\u003c/strong\u003e, minimal architecture convention and CLI for building websites with server‑side JSX. \u003cstrong\u003eNo React, no client framework\u003c/strong\u003e, just composable \u003cstrong\u003eJSX optimized for the server\u003c/strong\u003e, a clean \u003cstrong\u003edirectory-based router\u003c/strong\u003e, \u003cstrong\u003ehot replace\u003c/strong\u003e, and powered by esbuild plus a Rust JSX precompiler.\u003c/p\u003e\n","description_plain":"A **fast**, minimal architecture convention and CLI for building websites with server‑side JSX. **No React, no client framework**, just composable **JSX optimized for the server**, a clean **directory-based router**, **hot replace**, and powered by esbuild plus a Rust JSX precompiler.","submitter_user":"gcv","user_is_author":true,"tags":["javascript","nodejs","rust"],"short_id_url":"https://lobste.rs/s/krs8sm","comments_url":"https://lobste.rs/s/krs8sm/sxo_optimized_server_side_jsx_build"},{"short_id":"7yj16h","created_at":"2025-08-23T09:22:12.000-05:00","title":"Big O","url":"https://samwho.dev/big-o/","score":18,"flags":0,"comment_count":7,"description":"","description_plain":"","submitter_user":"cgrinds","user_is_author":false,"tags":["compsci"],"short_id_url":"https://lobste.rs/s/7yj16h","comments_url":"https://lobste.rs/s/7yj16h/big_o"},{"short_id":"gtooez","created_at":"2025-08-23T08:59:40.000-05:00","title":"Retry Loop Retry","url":"https://matklad.github.io/2025/08/23/retry-loop-retry.html","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"sinclairtarget","user_is_author":false,"tags":["zig"],"short_id_url":"https://lobste.rs/s/gtooez","comments_url":"https://lobste.rs/s/gtooez/retry_loop_retry"},{"short_id":"j0uqee","created_at":"2025-08-23T08:37:04.000-05:00","title":"io_uring, kTLS and Rust for zero syscall HTTPS server","url":"https://blog.habets.se/2025/04/io-uring-ktls-and-rust-for-zero-syscall-https-server.html","score":2,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"the-mikedavis","user_is_author":false,"tags":["linux","rust"],"short_id_url":"https://lobste.rs/s/j0uqee","comments_url":"https://lobste.rs/s/j0uqee/io_uring_ktls_rust_for_zero_syscall_https"},{"short_id":"57w3yx","created_at":"2025-08-23T08:08:38.000-05:00","title":"AI Chatbots Undermining the Enlightenment","url":"https://maggieappleton.com/ai-enlightenment","score":3,"flags":1,"comment_count":0,"description":"","description_plain":"","submitter_user":"facundoolano","user_is_author":false,"tags":["science","vibecoding"],"short_id_url":"https://lobste.rs/s/57w3yx","comments_url":"https://lobste.rs/s/57w3yx/ai_chatbots_undermining_enlightenment"},{"short_id":"loaaja","created_at":"2025-08-23T08:08:29.000-05:00","title":"AnyBlox: A Framework for Self-Decoding Datasets","url":"https://gienieczko.com/anyblox-paper","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eResearch advancements in storage formats continuously produce more efficient encodings and better compression rates. Despite this, new formats are not adopted due to high implementation cost and existing formats cannot evolve because they need to maintain compatibility across systems. Can this problem be solved by introducing a new abstraction? We answer affirmatively with AnyBlox, a framework for reading arbitrary datasets using lightweight WebAssembly decoders bundled with the data. By decoupling decoders from both systems and file format specifications, AnyBlox allows transparent format evolution, instance-optimized encodings, and enables\nmainstream adoption of research advancements. It integrates seamlessly with modern systems like DuckDB, Spark, and Umbra, while delivering solid performance and security guarantees.\u003c/p\u003e\n","description_plain":"Research advancements in storage formats continuously produce more efficient encodings and better compression rates. Despite this, new formats are not adopted due to high implementation cost and existing formats cannot evolve because they need to maintain compatibility across systems. Can this problem be solved by introducing a new abstraction? We answer affirmatively with AnyBlox, a framework for reading arbitrary datasets using lightweight WebAssembly decoders bundled with the data. By decoupling decoders from both systems and file format specifications, AnyBlox allows transparent format evolution, instance-optimized encodings, and enables\r\nmainstream adoption of research advancements. It integrates seamlessly with modern systems like DuckDB, Spark, and Umbra, while delivering solid performance and security guarantees.","submitter_user":"knl","user_is_author":false,"tags":["databases","pdf"],"short_id_url":"https://lobste.rs/s/loaaja","comments_url":"https://lobste.rs/s/loaaja/anyblox_framework_for_self_decoding"},{"short_id":"grwfgz","created_at":"2025-08-23T08:07:33.000-05:00","title":"rue: A programming language that is a minimal subset of Rust","url":"https://github.com/steveklabnik/rue","score":14,"flags":0,"comment_count":6,"description":"","description_plain":"","submitter_user":"robinhundt","user_is_author":false,"tags":["compilers","rust"],"short_id_url":"https://lobste.rs/s/grwfgz","comments_url":"https://lobste.rs/s/grwfgz/rue_programming_language_is_minimal"},{"short_id":"qrs9w8","created_at":"2025-08-23T07:53:15.000-05:00","title":"RFC 9839 and Bad Unicode","url":"https://www.tbray.org/ongoing/When/202x/2025/08/14/RFC9839","score":18,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["programming"],"short_id_url":"https://lobste.rs/s/qrs9w8","comments_url":"https://lobste.rs/s/qrs9w8/rfc_9839_bad_unicode"},{"short_id":"fs6bkk","created_at":"2025-08-23T06:38:46.000-05:00","title":"Rethinking the Linux cloud stack for confidential VMs","url":"https://lwn.net/Articles/1030818/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"soni","user_is_author":false,"tags":["linux","security"],"short_id_url":"https://lobste.rs/s/fs6bkk","comments_url":"https://lobste.rs/s/fs6bkk/rethinking_linux_cloud_stack_for"},{"short_id":"fqw11d","created_at":"2025-08-23T04:17:30.000-05:00","title":"Developer's block","url":"https://underlap.org/developers-block/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"abhin4v","user_is_author":false,"tags":["practices"],"short_id_url":"https://lobste.rs/s/fqw11d","comments_url":"https://lobste.rs/s/fqw11d/developer_s_block"},{"short_id":"aqw2si","created_at":"2025-08-23T02:26:40.000-05:00","title":"Understanding Jujutsu bookmarks","url":"https://neugierig.org/software/blog/2025/08/jj-bookmarks.html","score":29,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"matklad","user_is_author":false,"tags":["vcs"],"short_id_url":"https://lobste.rs/s/aqw2si","comments_url":"https://lobste.rs/s/aqw2si/understanding_jujutsu_bookmarks"},{"short_id":"tbo1nr","created_at":"2025-08-22T22:08:06.000-05:00","title":"Materialized views are obviously useful","url":"https://sophiebits.com/2025/08/22/materialized-views-are-obviously-useful","score":30,"flags":0,"comment_count":10,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["databases"],"short_id_url":"https://lobste.rs/s/tbo1nr","comments_url":"https://lobste.rs/s/tbo1nr/materialized_views_are_obviously_useful"},{"short_id":"nun8rm","created_at":"2025-08-22T21:49:52.000-05:00","title":"An Introduction to Trellis-Owl (1986)","url":"https://dl.acm.org/doi/pdf/10.1145/960112.28699","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"lorddimwit","user_is_author":false,"tags":["plt"],"short_id_url":"https://lobste.rs/s/nun8rm","comments_url":"https://lobste.rs/s/nun8rm/introduction_trellis_owl_1986"},{"short_id":"sxk1le","created_at":"2025-08-22T20:14:05.000-05:00","title":"The 9 Go test assertions I use (and why)","url":"https://www.alexedwards.net/blog/the-9-go-test-assertions-i-use","score":7,"flags":0,"comment_count":6,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["go","testing"],"short_id_url":"https://lobste.rs/s/sxk1le","comments_url":"https://lobste.rs/s/sxk1le/9_go_test_assertions_i_use_why"},{"short_id":"8bnfjy","created_at":"2025-08-22T17:59:56.000-05:00","title":"On the use of LLM assistants for kernel development","url":"https://lwn.net/Articles/1032612/","score":10,"flags":0,"comment_count":13,"description":"","description_plain":"","submitter_user":"gnyeki","user_is_author":false,"tags":["linux","vibecoding"],"short_id_url":"https://lobste.rs/s/8bnfjy","comments_url":"https://lobste.rs/s/8bnfjy/on_use_llm_assistants_for_kernel"},{"short_id":"roq4rt","created_at":"2025-08-22T17:44:16.000-05:00","title":"Adventures in State Space","url":"https://www.youtube.com/watch?v=YGLNyHd2w10","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"linkdd","user_is_author":false,"tags":["math","video"],"short_id_url":"https://lobste.rs/s/roq4rt","comments_url":"https://lobste.rs/s/roq4rt/adventures_state_space"},{"short_id":"kpcjmr","created_at":"2025-08-22T16:58:07.000-05:00","title":"Teletype code cards","url":"https://www.rtty.com/CODECARD/codecrd1.htm","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"classichasclass","user_is_author":false,"tags":["historical"],"short_id_url":"https://lobste.rs/s/kpcjmr","comments_url":"https://lobste.rs/s/kpcjmr/teletype_code_cards"},{"short_id":"ysmsfu","created_at":"2025-08-22T15:03:05.000-05:00","title":"No, Google Did Not Unilaterally Decide to Kill XSLT","url":"https://meyerweb.com/eric/thoughts/2025/08/22/no-google-did-not-unilaterally-decide-to-kill-xslt/","score":46,"flags":1,"comment_count":49,"description":"","description_plain":"","submitter_user":"simonw","user_is_author":false,"tags":["web"],"short_id_url":"https://lobste.rs/s/ysmsfu","comments_url":"https://lobste.rs/s/ysmsfu/no_google_did_not_unilaterally_decide"},{"short_id":"0ktx6s","created_at":"2025-08-22T14:52:41.000-05:00","title":"A string formatting library in 65 lines of C++","url":"https://riki.house/fmt","score":12,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"riki","user_is_author":true,"tags":["c++","programming"],"short_id_url":"https://lobste.rs/s/0ktx6s","comments_url":"https://lobste.rs/s/0ktx6s/string_formatting_library_65_lines_c"},{"short_id":"pc87c0","created_at":"2025-08-22T14:30:58.000-05:00","title":"Why Was Apache Kafka Created?","url":"https://bigdatastream.substack.com/p/why-was-apache-kafka-created","score":16,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"topicpartition","user_is_author":true,"tags":["distributed"],"short_id_url":"https://lobste.rs/s/pc87c0","comments_url":"https://lobste.rs/s/pc87c0/why_was_apache_kafka_created"},{"short_id":"xltjpn","created_at":"2025-08-22T14:04:51.000-05:00","title":"nitro: a tiny but flexible init system and process supervisor","url":"https://git.vuxu.org/nitro/about/","score":22,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"sstephenson","user_is_author":false,"tags":["unix"],"short_id_url":"https://lobste.rs/s/xltjpn","comments_url":"https://lobste.rs/s/xltjpn/nitro_tiny_flexible_init_system_process"},{"short_id":"kl2nwa","created_at":"2025-08-22T13:51:57.000-05:00","title":"The First MoQ CDN: Cloudflare","url":"https://moq.dev/blog/first-cdn/","score":26,"flags":2,"comment_count":1,"description":"","description_plain":"","submitter_user":"kixelated","user_is_author":true,"tags":["javascript","networking","rust","web"],"short_id_url":"https://lobste.rs/s/kl2nwa","comments_url":"https://lobste.rs/s/kl2nwa/first_moq_cdn_cloudflare"},{"short_id":"lsxzfy","created_at":"2025-08-22T12:26:27.000-05:00","title":"Optimizing our way through Metroid","url":"https://antithesis.com/blog/2025/metroid/","score":18,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"hwayne","user_is_author":false,"tags":["games","testing"],"short_id_url":"https://lobste.rs/s/lsxzfy","comments_url":"https://lobste.rs/s/lsxzfy/optimizing_our_way_through_metroid"},{"short_id":"snhdea","created_at":"2025-08-22T12:16:03.000-05:00","title":"w65c832: W65C832 (32 bit 6502) in an FPGA","url":"https://github.com/mikeakohn/w65c832","score":8,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"lproven","user_is_author":false,"tags":["hardware","retrocomputing"],"short_id_url":"https://lobste.rs/s/snhdea","comments_url":"https://lobste.rs/s/snhdea/w65c832_w65c832_32_bit_6502_fpga"},{"short_id":"rmga0q","created_at":"2025-08-22T12:02:20.000-05:00","title":"bubbletea-rs: A rust implementation of Bubbletea","url":"https://github.com/whit3rabbit/bubbletea-rs","score":26,"flags":0,"comment_count":10,"description":"","description_plain":"","submitter_user":"jasonjmcghee","user_is_author":false,"tags":["rust"],"short_id_url":"https://lobste.rs/s/rmga0q","comments_url":"https://lobste.rs/s/rmga0q/bubbletea_rs_rust_implementation"}]