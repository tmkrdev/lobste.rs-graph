[{"short_id":"actm9b","short_id_url":"https://lobste.rs/s/actm9b","created_at":"2025-02-12T12:04:05.000-06:00","title":"Your Network, Your Rules: Take Charge With Own DNS","url":"https://dzone.com/articles/private-dns-nameserver","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/actm9b/your_network_your_rules_take_charge_with","submitter_user":"maara","user_is_author":true,"tags":["networking","privacy"]},{"short_id":"quhtak","short_id_url":"https://lobste.rs/s/quhtak","created_at":"2025-02-12T12:01:50.000-06:00","title":"Do you use a debugger?","url":"https://www.sandordargo.com/blog/2025/02/12/do-you-use-a-debugger","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/quhtak/do_you_use_debugger","submitter_user":"raymii","user_is_author":false,"tags":["c++"]},{"short_id":"rqptfo","short_id_url":"https://lobste.rs/s/rqptfo","created_at":"2025-02-12T11:15:03.000-06:00","title":"Skip: A reactive framework to code declaratively and compute continuously","url":"https://skiplabs.io/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rqptfo/skip_reactive_framework_code","submitter_user":"azhenley","user_is_author":false,"tags":["programming"]},{"short_id":"j0hcla","short_id_url":"https://lobste.rs/s/j0hcla","created_at":"2025-02-12T11:05:22.000-06:00","title":"Rails async queries by example","url":"https://www.honeybadger.io/blog/rails-async-queries/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j0hcla/rails_async_queries_by_example","submitter_user":"joshuawood","user_is_author":false,"tags":["ruby"]},{"short_id":"ofqfci","short_id_url":"https://lobste.rs/s/ofqfci","created_at":"2025-02-12T10:57:36.000-06:00","title":"Bad Smart Watch Auth","url":"https://sprocketfox.io/xssfox/2025/02/09/ido/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ofqfci/bad_smart_watch_auth","submitter_user":"raymii","user_is_author":false,"tags":["hardware","reversing"]},{"short_id":"gvss5p","short_id_url":"https://lobste.rs/s/gvss5p","created_at":"2025-02-12T10:51:11.000-06:00","title":"Syd: An Introduction to Secure Application Sandboxing for Linux","url":"https://fosdem.org/2025/schedule/event/fosdem-2025-4176-syd-an-introduction-to-secure-application-sandboxing-for-linux/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gvss5p/syd_introduction_secure_application","submitter_user":"acatton","user_is_author":false,"tags":["linux","security","video"]},{"short_id":"cuakjw","short_id_url":"https://lobste.rs/s/cuakjw","created_at":"2025-02-12T08:58:34.000-06:00","title":"A survey of every iterator variant","url":"https://blog.yoshuawuyts.com/a-survey-of-every-iterator-variant","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cuakjw/survey_every_iterator_variant","submitter_user":"emschwartz","user_is_author":false,"tags":["rust"]},{"short_id":"9ubmfl","short_id_url":"https://lobste.rs/s/9ubmfl","created_at":"2025-02-12T08:38:16.000-06:00","title":"Delivering Malware Through Abandoned Amazon S3 Buckets","url":"https://www.schneier.com/blog/archives/2025/02/delivering-malware-through-abandoned-amazon-s3-buckets.html","score":5,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9ubmfl/delivering_malware_through_abandoned","submitter_user":"crazyloglad","user_is_author":false,"tags":["security"]},{"short_id":"qtudg1","short_id_url":"https://lobste.rs/s/qtudg1","created_at":"2025-02-12T08:04:38.000-06:00","title":"ouch: Painless compression and decompression in the terminal","url":"https://github.com/ouch-org/ouch","score":15,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qtudg1/ouch_painless_compression","submitter_user":"yonkeltron","user_is_author":false,"tags":["rust"]},{"short_id":"umevag","short_id_url":"https://lobste.rs/s/umevag","created_at":"2025-02-12T05:11:22.000-06:00","title":"Data scraping and reverse engineering League of Legends replays","url":"https://maknee.github.io/blog/2025/League-Data-Scraping/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/umevag/data_scraping_reverse_engineering","submitter_user":"maknee","user_is_author":true,"tags":["reversing"]},{"short_id":"563zjp","short_id_url":"https://lobste.rs/s/563zjp","created_at":"2025-02-12T04:33:54.000-06:00","title":"How does a Linux machine connect to the internet, really?","url":"https://pjg1.site/linux-internet-from-scratch","score":11,"flags":0,"comment_count":16,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/563zjp/how_does_linux_machine_connect_internet","submitter_user":"pjg1","user_is_author":true,"tags":["linux","networking"]},{"short_id":"mkquvs","short_id_url":"https://lobste.rs/s/mkquvs","created_at":"2025-02-12T03:45:28.000-06:00","title":"Text CRDTs from scratch, in code","url":"https://www.youtube.com/watch?v=_lQ2Q4Kzi1I","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mkquvs/text_crdts_from_scratch_code","submitter_user":"blinry","user_is_author":false,"tags":["distributed","video"]},{"short_id":"mdxg2p","short_id_url":"https://lobste.rs/s/mdxg2p","created_at":"2025-02-12T03:36:39.000-06:00","title":"Security, devops, and testing in Go with Jakub Jarosz","url":"https://gopodcast.dev/episodes/050-security-devops-testing-in-go-with-jakub-jarosz","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mdxg2p/security_devops_testing_go_with_jakub","submitter_user":"bitfield","user_is_author":false,"tags":["audio","devops","go","security","testing","transcript"]},{"short_id":"pyjpo3","short_id_url":"https://lobste.rs/s/pyjpo3","created_at":"2025-02-12T03:21:14.000-06:00","title":"Systems Correctness Practices at AWS: Leveraging Formal and Semi-formal Methods","url":"https://dl.acm.org/doi/pdf/10.1145/3712057","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pyjpo3/systems_correctness_practices_at_aws","submitter_user":"mjref","user_is_author":false,"tags":["formalmethods"]},{"short_id":"ionubt","short_id_url":"https://lobste.rs/s/ionubt","created_at":"2025-02-12T03:09:45.000-06:00","title":"Clean room tests with JavaScript's `using` keyword","url":"https://blog.disintegrator.dev/posts/clean-room-testing-using/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ionubt/clean_room_tests_with_javascript_s_using","submitter_user":"pubkey","user_is_author":false,"tags":["javascript"]},{"short_id":"coao0j","short_id_url":"https://lobste.rs/s/coao0j","created_at":"2025-02-12T02:39:16.000-06:00","title":"Rust for Linux","url":"https://fosdem.org/2025/schedule/event/fosdem-2025-6507-rust-for-linux/","score":11,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/coao0j/rust_for_linux","submitter_user":"laktak","user_is_author":false,"tags":["linux","rust"]},{"short_id":"ddqzya","short_id_url":"https://lobste.rs/s/ddqzya","created_at":"2025-02-12T02:21:37.000-06:00","title":"A simple terminal helper to save keystrokes","url":"https://github.com/antonmedv/howto","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eI’m very lazy. Sometimes I’m lazy even to switch window from terminal to chatgpt. Yet alone copy and paste command from gpt to terminal, and back. So I create a very simple helper, which uses TIOCSTI to insert gpt response as input in terminal, so I can modify it right away and run.\u003c/p\u003e\n\u003cp\u003eHer is my workflow:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStart typing command I want to run \u003ccode\u003elsof -\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eFigure out, what I forgot the name flags, \u003ccode\u003elsof -tcp 8089\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ePress, \u003ccode\u003ectrl+g\u003c/code\u003e and allow my helper to query GPT with my command as prompt.\u003c/li\u003e\n\u003cli\u003eVerify and edit returned command from GPT\u003c/li\u003e\n\u003cli\u003eRun it (press \u003ccode\u003eup\u003c/code\u003e to retrieve \u003ccode\u003ehowto\u003c/code\u003e command from history to adjust prompt).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNotes:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWorks on macOS and Linux\u003c/li\u003e\n\u003cli\u003eDoes NOT work on Windows (just prints to stdout), i don’t know how to “fake input” on windows\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"I'm very lazy. Sometimes I'm lazy even to switch window from terminal to chatgpt. Yet alone copy and paste command from gpt to terminal, and back. So I create a very simple helper, which uses TIOCSTI to insert gpt response as input in terminal, so I can modify it right away and run. \r\n\r\nHer is my workflow:\r\n- Start typing command I want to run `lsof -`\r\n- Figure out, what I forgot the name flags, `lsof -tcp 8089`\r\n- Press, `ctrl+g` and allow my helper to query GPT with my command as prompt.\r\n- Verify and edit returned command from GPT\r\n- Run it (press `up` to retrieve `howto` command from history to adjust prompt). \r\n\r\nNotes:\r\n- Works on macOS and Linux\r\n- Does NOT work on Windows (just prints to stdout), i don't know how to \"fake input\" on windows","comments_url":"https://lobste.rs/s/ddqzya/simple_terminal_helper_save_keystrokes","submitter_user":"antonmedv","user_is_author":true,"tags":["ai"]},{"short_id":"qrd1bp","short_id_url":"https://lobste.rs/s/qrd1bp","created_at":"2025-02-12T02:11:51.000-06:00","title":"Thomson Reuters wins an early court battle over AI, copyright, and fair use","url":"https://www.theverge.com/news/610721/thomson-reuters-ross-intelligence-ai-copyright-infringement","score":6,"flags":1,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qrd1bp/thomson_reuters_wins_early_court_battle","submitter_user":"laktak","user_is_author":false,"tags":["law"]},{"short_id":"2rkupg","short_id_url":"https://lobste.rs/s/2rkupg","created_at":"2025-02-12T00:17:06.000-06:00","title":"Intensional Joy (a concatenative account of internal structure)","url":"https://pithlessly.github.io/intensionaljoy.html","score":8,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2rkupg/intensional_joy_concatenative_account","submitter_user":"christine","user_is_author":true,"tags":["plt"]},{"short_id":"ltepas","short_id_url":"https://lobste.rs/s/ltepas","created_at":"2025-02-12T00:16:12.000-06:00","title":"ELEET: Efficient Learned Query Execution over Text and Tables","url":"https://www.vldb.org/pvldb/vol17/p4867-urban.pdf","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eAbstract:\nIn this paper, we present ELEET, a novel execution engine that al-\nlows one to seamlessly query and process text as a first-class citizen\nalong with tables. To enable such a seamless integration of text and\ntables, ELEET leverages learned multi-modal operators (MMOps)\nsuch as joins and unions that seamlessly combine structured with\nunstructured textual data. While large language models (LLM) such\nas GPT-4 are interesting candidates to enable such learned multi-\nmodal operations, we deliberately do not follow this trend to enable\nMMOps, since it would result in high overhead at query runtime.\nInstead, to enable MMOps, ELEET comes with a more efficient small\nlanguage model (SLM) that is targeted to extract structured data\nfrom text. Thanks to our novel architecture and pre-training proce-\ndure, the ELEET-model enables high-accuracy extraction with low\noverheads. In our evaluation, we compare query execution based\non ELEET to baselines leveraging LLMs such as GPT-4 and show\nthat ELEET can speed up multi-modal queries over tables and text\nby up to 575× without sacrificing accuracy.\u003c/p\u003e\n","description_plain":"Abstract:\r\nIn this paper, we present ELEET, a novel execution engine that al-\r\nlows one to seamlessly query and process text as a first-class citizen\r\nalong with tables. To enable such a seamless integration of text and\r\ntables, ELEET leverages learned multi-modal operators (MMOps)\r\nsuch as joins and unions that seamlessly combine structured with\r\nunstructured textual data. While large language models (LLM) such\r\nas GPT-4 are interesting candidates to enable such learned multi-\r\nmodal operations, we deliberately do not follow this trend to enable\r\nMMOps, since it would result in high overhead at query runtime.\r\nInstead, to enable MMOps, ELEET comes with a more efficient small\r\nlanguage model (SLM) that is targeted to extract structured data\r\nfrom text. Thanks to our novel architecture and pre-training proce-\r\ndure, the ELEET-model enables high-accuracy extraction with low\r\noverheads. In our evaluation, we compare query execution based\r\non ELEET to baselines leveraging LLMs such as GPT-4 and show\r\nthat ELEET can speed up multi-modal queries over tables and text\r\nby up to 575× without sacrificing accuracy.","comments_url":"https://lobste.rs/s/ltepas/eleet_efficient_learned_query_execution","submitter_user":"asb","user_is_author":false,"tags":["ai","databases","pdf"]},{"short_id":"pk8rmi","short_id_url":"https://lobste.rs/s/pk8rmi","created_at":"2025-02-11T22:27:47.000-06:00","title":"HOTDOG: X11 Window Manager with Windows 3.1 Hot Dog Stand, Mac Classic and Aqua UI","url":"https://github.com/arthurchoung/HOTDOG","score":19,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pk8rmi/hotdog_x11_window_manager_with_windows_3_1","submitter_user":"janus","user_is_author":false,"tags":["graphics","mac","retrocomputing"]},{"short_id":"g95qvp","short_id_url":"https://lobste.rs/s/g95qvp","created_at":"2025-02-11T21:34:19.000-06:00","title":"JJ cheat sheet","url":"https://justinpombrio.net/2025/02/11/jj-cheat-sheet.html","score":18,"flags":1,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g95qvp/jj_cheat_sheet","submitter_user":"fanf","user_is_author":false,"tags":["vcs"]},{"short_id":"stumtq","short_id_url":"https://lobste.rs/s/stumtq","created_at":"2025-02-11T17:58:35.000-06:00","title":"AI forecasting retrospective: you're (probably) over-confident","url":"https://nicholas.carlini.com/writing/2025/forecasting-ai-2025-update.html","score":0,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/stumtq/ai_forecasting_retrospective_you_re","submitter_user":"adamcstephens","user_is_author":false,"tags":["ai"]},{"short_id":"ttfywn","short_id_url":"https://lobste.rs/s/ttfywn","created_at":"2025-02-11T16:48:53.000-06:00","title":"42links: A bookmarking server, written in Lisp","url":"https://code.rosaelefanten.org/42links","score":28,"flags":0,"comment_count":19,"description":"\u003cp\u003eThis has a few rough edges yet, for which I’m sorry. I’m proud enough to release it though. Please don’t consider this to be “finished software” yet. :-)\u003c/p\u003e\n","description_plain":"This has a few rough edges yet, for which I'm sorry. I'm proud enough to release it though. Please don't consider this to be \"finished software\" yet. :-)","comments_url":"https://lobste.rs/s/ttfywn/42links_bookmarking_server_written_lisp","submitter_user":"tux0r","user_is_author":true,"tags":["lisp","show","web"]},{"short_id":"epirgi","short_id_url":"https://lobste.rs/s/epirgi","created_at":"2025-02-11T16:35:43.000-06:00","title":"Go 1.24 Release Notes","url":"https://go.dev/doc/go1.24","score":4,"flags":1,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/epirgi/go_1_24_release_notes","submitter_user":"reezer","user_is_author":false,"tags":["go","release"]}]