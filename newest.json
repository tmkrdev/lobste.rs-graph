[{"short_id":"ch64l3","short_id_url":"https://lobste.rs/s/ch64l3","created_at":"2025-02-17T16:11:33.000-06:00","title":"New Junior Developers Can’t Actually Code","url":"https://nmn.gl/blog/ai-and-learning","score":4,"flags":1,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ch64l3/new_junior_developers_can_t_actually_code","submitter_user":"spc476","user_is_author":false,"tags":["a11y","ai","philosophy"]},{"short_id":"hv9gxk","short_id_url":"https://lobste.rs/s/hv9gxk","created_at":"2025-02-17T15:57:07.000-06:00","title":"What's in a ring buffer? And using them in Rust","url":"https://ntietz.com/blog/whats-in-a-ring-buffer/#ring","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hv9gxk/what_s_ring_buffer_using_them_rust","submitter_user":"hwayne","user_is_author":false,"tags":["compsci","rust"]},{"short_id":"gsyz6c","short_id_url":"https://lobste.rs/s/gsyz6c","created_at":"2025-02-17T15:22:38.000-06:00","title":"Swift Evolution Proposal:  InlineArray, a fixed-size array","url":"https://github.com/swiftlang/swift-evolution/blob/main/proposals/0453-vector.md","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gsyz6c/swift_evolution_proposal_inlinearray","submitter_user":"mpweiher","user_is_author":false,"tags":["swift"]},{"short_id":"dfhwq1","short_id_url":"https://lobste.rs/s/dfhwq1","created_at":"2025-02-17T14:43:08.000-06:00","title":"nes86: x86 emulation on the NES","url":"https://github.com/decrazyo/nes86","score":6,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dfhwq1/nes86_x86_emulation_on_nes","submitter_user":"JordiGH","user_is_author":false,"tags":["retrocomputing"]},{"short_id":"zm1g8r","short_id_url":"https://lobste.rs/s/zm1g8r","created_at":"2025-02-17T14:29:53.000-06:00","title":"Why I'm Writing a Scheme Implementation in 2025 (The Answer is Async Rust)","url":"https://maplant.com/2025-02-17-Why-I'm-Writing-a-Scheme-Implementation-in-2025-(The-Answer-is-Async-Rust).html","score":25,"flags":1,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zm1g8r/why_i_m_writing_scheme_implementation","submitter_user":"mplant","user_is_author":true,"tags":["compilers","lisp","plt","rust"]},{"short_id":"ckjevs","short_id_url":"https://lobste.rs/s/ckjevs","created_at":"2025-02-17T13:56:23.000-06:00","title":"Choosing a browser","url":"https://eligrey.com/blog/choosing-a-browser/","score":3,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ckjevs/choosing_browser","submitter_user":"eligrey","user_is_author":true,"tags":["browsers","philosophy","privacy","security"]},{"short_id":"1xykzf","short_id_url":"https://lobste.rs/s/1xykzf","created_at":"2025-02-17T13:12:48.000-06:00","title":"Debugging An Undebuggable App","url":"https://bryce.co/undebuggable/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1xykzf/debugging_undebuggable_app","submitter_user":"mtlynch","user_is_author":false,"tags":["ios","security"]},{"short_id":"5damlp","short_id_url":"https://lobste.rs/s/5damlp","created_at":"2025-02-17T12:03:01.000-06:00","title":"How browsers really load Web pages","url":"https://fosdem.org/2025/schedule/event/fosdem-2025-4852-how-browsers-really-load-web-pages/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5damlp/how_browsers_really_load_web_pages","submitter_user":"jrgtt","user_is_author":false,"tags":["browsers","performance","video"]},{"short_id":"c6rk0l","short_id_url":"https://lobste.rs/s/c6rk0l","created_at":"2025-02-17T11:49:24.000-06:00","title":"14 years of systemd","url":"https://lwn.net/SubscriberLink/1008721/7c31808d76480012/","score":18,"flags":0,"comment_count":18,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/c6rk0l/14_years_systemd","submitter_user":"calvin","user_is_author":false,"tags":["historical","linux","systemd"]},{"short_id":"8zd1tm","short_id_url":"https://lobste.rs/s/8zd1tm","created_at":"2025-02-17T11:28:48.000-06:00","title":"The Mac Menubar and SwiftUI","url":"https://troz.net/post/2025/mac_menu_data/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8zd1tm/mac_menubar_swiftui","submitter_user":"raymii","user_is_author":false,"tags":["mac","swift"]},{"short_id":"y713xl","short_id_url":"https://lobste.rs/s/y713xl","created_at":"2025-02-17T09:36:24.000-06:00","title":"Accessible color palette tester","url":"https://palette-tester.9elements.com/","score":7,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/y713xl/accessible_color_palette_tester","submitter_user":"sphinxc0re","user_is_author":false,"tags":["a11y","css","web"]},{"short_id":"yipk5r","short_id_url":"https://lobste.rs/s/yipk5r","created_at":"2025-02-17T09:29:07.000-06:00","title":"Can I ethically use LLMs?","url":"https://ntietz.com/blog/can-i-ethically-use-llms/","score":17,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yipk5r/can_i_ethically_use_llms","submitter_user":"carlana","user_is_author":false,"tags":["ai","philosophy"]},{"short_id":"evay67","short_id_url":"https://lobste.rs/s/evay67","created_at":"2025-02-17T07:27:34.000-06:00","title":"Design/build of some elegant, fully parametric speaker cabinets","url":"https://calbryant.uk/blog/speakers/","score":10,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/evay67/design_build_some_elegant_fully","submitter_user":"naggie","user_is_author":true,"tags":["hardware"]},{"short_id":"b5dnjh","short_id_url":"https://lobste.rs/s/b5dnjh","created_at":"2025-02-17T07:11:35.000-06:00","title":"0+0 \u003e 0: C++ thread-local storage performance","url":"https://yosefk.com/blog/cxx-thread-local-storage-performance.html","score":8,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/b5dnjh/0_0_0_c_thread_local_storage_performance","submitter_user":"fanf","user_is_author":false,"tags":["c","c++","performance"]},{"short_id":"5hmdqi","short_id_url":"https://lobste.rs/s/5hmdqi","created_at":"2025-02-17T06:42:07.000-06:00","title":"searchcode.com’s SQLite database is probably 6 terabytes bigger than yours","url":"https://boyter.org/posts/searchcode-bigger-sqlite-than-you/","score":13,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5hmdqi/searchcode_com_s_sqlite_database_is","submitter_user":"xoranth","user_is_author":false,"tags":["databases"]},{"short_id":"ynjqhp","short_id_url":"https://lobste.rs/s/ynjqhp","created_at":"2025-02-17T05:58:04.000-06:00","title":"SharingGRDB: A SwiftData Alternative","url":"https://www.pointfree.co/blog/posts/168-sharinggrdb-a-swiftdata-alternative","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ynjqhp/sharinggrdb_swiftdata_alternative","submitter_user":"napkindrawing","user_is_author":false,"tags":["swift"]},{"short_id":"y2xa9n","short_id_url":"https://lobste.rs/s/y2xa9n","created_at":"2025-02-17T05:29:06.000-06:00","title":"UX Design Rework #1 - reworking my university hoarding","url":"https://bhoot.dev/2025/ux-design-rework-1-i-love-vnsgu/","score":1,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/y2xa9n/ux_design_rework_1_reworking_my","submitter_user":"bhoot","user_is_author":true,"tags":["design"]},{"short_id":"ffceax","short_id_url":"https://lobste.rs/s/ffceax","created_at":"2025-02-17T05:20:29.000-06:00","title":"Why Test-First Development Is So Damn Hard","url":"https://jarosz.dev/atomicessay/why-test-first-development-is-so-damn-hard/","score":4,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ffceax/why_test_first_development_is_so_damn_hard","submitter_user":"bitfield","user_is_author":false,"tags":["practices","testing"]},{"short_id":"mlly3p","short_id_url":"https://lobste.rs/s/mlly3p","created_at":"2025-02-17T04:46:45.000-06:00","title":"What are you doing this week?","url":"","score":1,"flags":0,"comment_count":3,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/mlly3p/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"mfmvmj","short_id_url":"https://lobste.rs/s/mfmvmj","created_at":"2025-02-17T04:21:54.000-06:00","title":"A Tutorial Introduction to the Lambda Calculus (2015)","url":"https://arxiv.org/pdf/1503.09060","score":5,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mfmvmj/tutorial_introduction_lambda_calculus","submitter_user":"susam","user_is_author":false,"tags":["programming"]},{"short_id":"qpjxpb","short_id_url":"https://lobste.rs/s/qpjxpb","created_at":"2025-02-17T02:00:25.000-06:00","title":"f8 - an 8 bit architecture designed for C and memory efficiency","url":"https://fosdem.org/2025/schedule/event/fosdem-2025-4902-f8-an-8-bit-architecture-designed-for-c-and-memory-efficiency/","score":12,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qpjxpb/f8_8_bit_architecture_designed_for_c","submitter_user":"joed","user_is_author":false,"tags":["c","compilers","hardware","video"]},{"short_id":"j9uxe8","short_id_url":"https://lobste.rs/s/j9uxe8","created_at":"2025-02-16T23:00:59.000-06:00","title":"On word embeddings - Part 3: The secret ingredients of word2vec","url":"https://www.ruder.io/secret-word2vec/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j9uxe8/on_word_embeddings_part_3_secret","submitter_user":"MiraWelner","user_is_author":false,"tags":["ai"]},{"short_id":"sag0p3","short_id_url":"https://lobste.rs/s/sag0p3","created_at":"2025-02-16T20:05:28.000-06:00","title":"Making the Web More Readable With Stylus","url":"https://www.wezm.net/v2/posts/2025/stylus/","score":39,"flags":0,"comment_count":27,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sag0p3/making_web_more_readable_with_stylus","submitter_user":"wezm","user_is_author":true,"tags":["css"]},{"short_id":"itjuhu","short_id_url":"https://lobste.rs/s/itjuhu","created_at":"2025-02-16T20:03:52.000-06:00","title":"Gitingest: Prompt-friendly codebase","url":"https://gitingest.com","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/itjuhu/gitingest_prompt_friendly_codebase","submitter_user":"telemachus","user_is_author":false,"tags":["ai"]},{"short_id":"yyju3z","short_id_url":"https://lobste.rs/s/yyju3z","created_at":"2025-02-16T18:14:47.000-06:00","title":"When is OOP a More Useful Modelling Approach than Other Paradigms?","url":"","score":15,"flags":0,"comment_count":39,"description":"\u003cp\u003eThrowing out all of OOP’s baggage, without the boiler plate and corporate bureaucratizing, done right, what does it have to offer?\u003c/p\u003e\n\u003cp\u003eI’d like to give OOP a fair shake. I began coding exposed to anti-big4-pattern narrative from the beginning: “Patterns are just missing language features” etc. Go’s community also opposes this Java/late 90s style OOP, offering a rather distinct primitive set (lacking inheritance and classes, offering closures… (some argue whether its object-oriented or not.)\u003c/p\u003e\n\u003cp\u003eI’ve mostly written in Lisps, then Go, Elixir, SQL, Factor and APL, exploring all paradigms besides OOP. But Common Lisp’s CLOS, Racket’s GUI or SICP showing object and functional equivalence imply that modeling with objects can be better in such cases (or why else would e.g. Racket’s designers not offer a functional GUI?) Dabbling with Pharo didn’t help.\u003c/p\u003e\n\u003cp\u003eWhat domains or situations lend themselves to organizing code via objects? When is storing functions as methods (i.e. in object namespaces instead of e.g. files) a better approach (to polymorphism?) (worth losing referential transparency)? What are the pros and cons of Go OOP vs. Rust vs. Java vs. Ruby vs. ObjectPascal OOP?\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eOn page 5 of this PDF, we can see Van Roy’s programming language paradigms: \u003ca href=\"http://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf\" rel=\"ugc\"\u003ehttp://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf\u003c/a\u003e of different modelling approaches.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOOP to me means only messaging, local retention and protection and hiding of state-process, and extreme late-binding of all things. – Alan Kay\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eHow do these tools/concepts help us model our domains and problem spaces? When are they more suitable than other approaches?\u003c/p\u003e\n","description_plain":"Throwing out all of OOP's baggage, without the boiler plate and corporate bureaucratizing, done right, what does it have to offer?\r\n\r\nI’d like to give OOP a fair shake. I began coding exposed to anti-big4-pattern narrative from the beginning: \"Patterns are just missing language features\" etc. Go's community also opposes this Java/late 90s style OOP, offering a rather distinct primitive set (lacking inheritance and classes, offering closures... (some argue whether its object-oriented or not.)\r\n\r\nI've mostly written in Lisps, then Go, Elixir, SQL, Factor and APL, exploring all paradigms besides OOP. But Common Lisp's CLOS, Racket's GUI or SICP showing object and functional equivalence imply that modeling with objects can be better in such cases (or why else would e.g. Racket's designers not offer a functional GUI?) Dabbling with Pharo didn't help.\r\n\r\n\r\nWhat domains or situations lend themselves to organizing code via objects? When is storing functions as methods (i.e. in object namespaces instead of e.g. files) a better approach (to polymorphism?) (worth losing referential transparency)? What are the pros and cons of Go OOP vs. Rust vs. Java vs. Ruby vs. ObjectPascal OOP?\r\n\r\n---\r\n\r\nOn page 5 of this PDF, we can see Van Roy's programming language paradigms: http://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf of different modelling approaches.\r\n\r\n\u003e OOP to me means only messaging, local retention and protection and hiding of state-process, and extreme late-binding of all things. -- Alan Kay\r\n\r\nHow do these tools/concepts help us model our domains and problem spaces? When are they more suitable than other approaches?","comments_url":"https://lobste.rs/s/yyju3z/when_is_oop_more_useful_modelling","submitter_user":"veqq","user_is_author":true,"tags":["ask","programming"]}]