[{"short_id":"bwpn8i","created_at":"2025-07-28T05:13:07.000-05:00","title":"SIMD Within a Register: How I Doubled Hash Table Lookup Performance","url":"https://maltsev.space/blog/012-simd-within-a-register-how-i-doubled-hash-table-lookup-performance","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"fanf","user_is_author":false,"tags":["performance"],"short_id_url":"https://lobste.rs/s/bwpn8i","comments_url":"https://lobste.rs/s/bwpn8i/simd_within_register_how_i_doubled_hash"},{"short_id":"2ftfd1","created_at":"2025-07-28T05:10:41.000-05:00","title":"What are you doing this week?","url":"","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"],"short_id_url":"https://lobste.rs/s/2ftfd1","comments_url":"https://lobste.rs/s/2ftfd1/what_are_you_doing_this_week"},{"short_id":"gzsg8m","created_at":"2025-07-28T05:02:36.000-05:00","title":"How to Make Websites That Will Require Lots of Your Time and Energy","url":"https://blog.jim-nielsen.com/2025/how-to-make-websites-that-require-lots-of-time-and-energy/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"LAC-Tech","user_is_author":false,"tags":["web"],"short_id_url":"https://lobste.rs/s/gzsg8m","comments_url":"https://lobste.rs/s/gzsg8m/how_make_websites_will_require_lots_your"},{"short_id":"i4hxlc","created_at":"2025-07-28T05:02:14.000-05:00","title":"Approve merge requests with your eyes closed","url":"https://blog.jse.li/posts/approval/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["satire","vibecoding"],"short_id_url":"https://lobste.rs/s/i4hxlc","comments_url":"https://lobste.rs/s/i4hxlc/approve_merge_requests_with_your_eyes"},{"short_id":"xnsza0","created_at":"2025-07-28T03:40:07.000-05:00","title":"Dynamic Phase Alignment in Audio","url":"https://www.youtube.com/watch?v=JNCVj_RtdZw","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"gingerBill","user_is_author":false,"tags":["audio","programming","video"],"short_id_url":"https://lobste.rs/s/xnsza0","comments_url":"https://lobste.rs/s/xnsza0/dynamic_phase_alignment_audio"},{"short_id":"8reksn","created_at":"2025-07-28T03:22:10.000-05:00","title":"The Bard and The Shell","url":"https://journal.bsd.cafe/2025/07/28/the-bard-and-the-shell/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"draga79","user_is_author":false,"tags":["unix"],"short_id_url":"https://lobste.rs/s/8reksn","comments_url":"https://lobste.rs/s/8reksn/bard_shell"},{"short_id":"roq3jq","created_at":"2025-07-28T03:06:01.000-05:00","title":"Bringing together Clazy and Clang-Tidy","url":"https://alex1701c.github.io/2025/07/27/clazy-clangtidy.html","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"Aks","user_is_author":false,"tags":["c++"],"short_id_url":"https://lobste.rs/s/roq3jq","comments_url":"https://lobste.rs/s/roq3jq/bringing_together_clazy_clang_tidy"},{"short_id":"zs2xhp","created_at":"2025-07-28T02:41:11.000-05:00","title":"EU age verification app to ban any Android system not licensed by Google","url":"https://www.reddit.com/r/degoogle/comments/1mau7yl/eu_age_verification_app_to_ban_any_android_system/","score":23,"flags":1,"comment_count":12,"description":"","description_plain":"","submitter_user":"BenjaminRi","user_is_author":false,"tags":["android","security"],"short_id_url":"https://lobste.rs/s/zs2xhp","comments_url":"https://lobste.rs/s/zs2xhp/eu_age_verification_app_ban_any_android"},{"short_id":"jfixfr","created_at":"2025-07-28T02:25:58.000-05:00","title":"The ultimate meeting culture","url":"https://abitmighty.com/posts/the-ultimate-meeting-culture","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"krig","user_is_author":false,"tags":["practices"],"short_id_url":"https://lobste.rs/s/jfixfr","comments_url":"https://lobste.rs/s/jfixfr/ultimate_meeting_culture"},{"short_id":"yornw7","created_at":"2025-07-28T01:39:26.000-05:00","title":"The many JavaScript runtimes of the last decade","url":"https://buttondown.com/whatever_jamie/archive/the-many-many-many-javascript-runtimes-of-the-last-decade/","score":4,"flags":0,"comment_count":0,"description":"\u003cp\u003eA comprehensive look into what has happened in JavaScript engines over the last roughly 10-15 years; it’s not just the major 3 out there! This was an interesting read and really gives perspective to how important of a language JavaScript is, despite all of its warts.\u003c/p\u003e\n","description_plain":"A comprehensive look into what has happened in JavaScript engines over the last roughly 10-15 years; it's not just the major 3 out there! This was an interesting read and really gives perspective to how important of a language JavaScript is, despite all of its warts.","submitter_user":"aapoalas","user_is_author":false,"tags":["historical","javascript"],"short_id_url":"https://lobste.rs/s/yornw7","comments_url":"https://lobste.rs/s/yornw7/many_javascript_runtimes_last_decade"},{"short_id":"4clcyb","created_at":"2025-07-28T01:28:23.000-05:00","title":"Yalep - Micro language based on Lean for teaching mathematical high-school proofs","url":"https://gricad-gitlab.univ-grenoble-alpes.fr/yalep/Yalep","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"jeanthomas","user_is_author":false,"tags":["education","formalmethods"],"short_id_url":"https://lobste.rs/s/4clcyb","comments_url":"https://lobste.rs/s/4clcyb/yalep_micro_language_based_on_lean_for"},{"short_id":"p4ufsf","created_at":"2025-07-28T01:21:15.000-05:00","title":"LLVM integrated assembler: Engineering better fragments","url":"https://maskray.me/blog/2025-07-27-llvm-integrated-assembler-engineering-better-fragments","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"jmillikin","user_is_author":false,"tags":["assembly","compilers"],"short_id_url":"https://lobste.rs/s/p4ufsf","comments_url":"https://lobste.rs/s/p4ufsf/llvm_integrated_assembler_engineering"},{"short_id":"eqmttb","created_at":"2025-07-28T00:40:42.000-05:00","title":"[trane]","url":"https://lisp.trane.studio/?tutor","score":10,"flags":1,"comment_count":1,"description":"\u003cp\u003eHere’s an example end product: \u003ca href=\"https://x.com/greg_ash/status/1824218993118388708\" rel=\"ugc\"\u003ehttps://x.com/greg_ash/status/1824218993118388708\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThere’s an academic paper on this DSL and its implementation: \u003ca href=\"https://dl.acm.org/doi/abs/10.1145/3677996.3678285\" rel=\"ugc\"\u003ehttps://dl.acm.org/doi/abs/10.1145/3677996.3678285\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Here's an example end product: https://x.com/greg_ash/status/1824218993118388708\r\n\r\nThere's an academic paper on this DSL and its implementation: https://dl.acm.org/doi/abs/10.1145/3677996.3678285","submitter_user":"veqq","user_is_author":false,"tags":["art","lisp"],"short_id_url":"https://lobste.rs/s/eqmttb","comments_url":"https://lobste.rs/s/eqmttb/trane"},{"short_id":"r6rbyk","created_at":"2025-07-28T00:16:26.000-05:00","title":"multiplex: Command-line process mutliplexer","url":"https://github.com/sebastien/multiplex","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"sebastien","user_is_author":true,"tags":["devops","python"],"short_id_url":"https://lobste.rs/s/r6rbyk","comments_url":"https://lobste.rs/s/r6rbyk/multiplex_command_line_process"},{"short_id":"zqinhx","created_at":"2025-07-27T22:27:34.000-05:00","title":"Programming Languages: Application and Interpretation (3rd edition)","url":"https://www.plai.org","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"nextos","user_is_author":false,"tags":["book","lisp","pdf","plt"],"short_id_url":"https://lobste.rs/s/zqinhx","comments_url":"https://lobste.rs/s/zqinhx/programming_languages_application"},{"short_id":"hua8nl","created_at":"2025-07-27T19:18:58.000-05:00","title":"Enough AI copilots! We need AI HUDs","url":"https://www.geoffreylitt.com/2025/07/27/enough-ai-copilots-we-need-ai-huds","score":14,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"ucirello","user_is_author":false,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/hua8nl","comments_url":"https://lobste.rs/s/hua8nl/enough_ai_copilots_we_need_ai_huds"},{"short_id":"obwtbz","created_at":"2025-07-27T17:07:07.000-05:00","title":"Designing a flatpack bed","url":"https://kevinlynagh.com/newsletter/2025_07_flatpack/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"mtlynch","user_is_author":false,"tags":["hardware"],"short_id_url":"https://lobste.rs/s/obwtbz","comments_url":"https://lobste.rs/s/obwtbz/designing_flatpack_bed"},{"short_id":"0hadx0","created_at":"2025-07-27T16:02:28.000-05:00","title":"How I hacked my washing machine","url":"https://nexy.blog/2025/07/27/how-i-hacked-my-washing-machine/","score":20,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"veqq","user_is_author":false,"tags":["reversing"],"short_id_url":"https://lobste.rs/s/0hadx0","comments_url":"https://lobste.rs/s/0hadx0/how_i_hacked_my_washing_machine"},{"short_id":"kwgrnv","created_at":"2025-07-27T15:33:06.000-05:00","title":"Certificate Transparency - Part 1","url":"https://ipng.ch/s/articles/2025/07/26/certificate-transparency-part-1/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"raymii","user_is_author":false,"tags":["security"],"short_id_url":"https://lobste.rs/s/kwgrnv","comments_url":"https://lobste.rs/s/kwgrnv/certificate_transparency_part_1"},{"short_id":"spfpn6","created_at":"2025-07-27T15:12:16.000-05:00","title":"Formal specs as sets of behaviors","url":"https://surfingcomplexity.blog/2025/07/26/formal-specs-as-sets-of-behaviors/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"amw-zero","user_is_author":false,"tags":["formalmethods"],"short_id_url":"https://lobste.rs/s/spfpn6","comments_url":"https://lobste.rs/s/spfpn6/formal_specs_as_sets_behaviors"},{"short_id":"ehq72u","created_at":"2025-07-27T14:13:03.000-05:00","title":"Revontuli Colorscheme Collection","url":"https://codeberg.org/akselmo/Revontuli","score":12,"flags":0,"comment_count":7,"description":"","description_plain":"","submitter_user":"Aks","user_is_author":true,"tags":["design"],"short_id_url":"https://lobste.rs/s/ehq72u","comments_url":"https://lobste.rs/s/ehq72u/revontuli_colorscheme_collection"},{"short_id":"jqm47i","created_at":"2025-07-27T14:01:16.000-05:00","title":"TIL: Exception.add_note","url":"https://daniel.feldroy.com/posts/til-2025-05-exception-add_note","score":64,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"spookylukey","user_is_author":false,"tags":["python"],"short_id_url":"https://lobste.rs/s/jqm47i","comments_url":"https://lobste.rs/s/jqm47i/til_exception_add_note"},{"short_id":"zqlhys","created_at":"2025-07-27T13:15:00.000-05:00","title":"printSim: a command-line python program that turns gcode into realistic 3d printer sound","url":"https://github.com/dannyboy1996/printSim","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"scruss","user_is_author":false,"tags":["python"],"short_id_url":"https://lobste.rs/s/zqlhys","comments_url":"https://lobste.rs/s/zqlhys/printsim_command_line_python_program"},{"short_id":"uajkl0","created_at":"2025-07-27T07:22:35.000-05:00","title":"OverHAuL: Harnessing Automation for C Libraries with Large Language Models","url":"https://kchousos.github.io/BSc-Thesis/","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003e\u003cstrong\u003eAbstract:\u003c/strong\u003e\nSoftware vulnerabilities remain pervasive and challenging to detect, making robust testing approaches imperative. Fuzzing is an established software testing method for uncovering such vulnerabilities, through random input execution. Recent research has leveraged Large Language Models (LLMs) to enhance fuzz driver generation. However, most contemporary tools rely on additional resources beyond the target code, such as client programs or preexisting harnesses, limiting their scalability and applicability. In this thesis, we present OverHAuL, a neurosymbolic AI system that employs LLM agents to automatically generate fuzzing harnesses directly from library code, eliminating the need for auxiliary artifacts. To comprehensively evaluate OverHAuL, we construct a benchmark suite consisting of ten open-source C libraries. Our empirical analysis demonstrates that OverHAuL achieves an 81.25% success rate in harness generation across the evaluated projects, underscoring its effectiveness and potential to facilitate more efficient vulnerability discovery.\u003c/p\u003e\n","description_plain":"**Abstract:**\r\nSoftware vulnerabilities remain pervasive and challenging to detect, making robust testing approaches imperative. Fuzzing is an established software testing method for uncovering such vulnerabilities, through random input execution. Recent research has leveraged Large Language Models (LLMs) to enhance fuzz driver generation. However, most contemporary tools rely on additional resources beyond the target code, such as client programs or preexisting harnesses, limiting their scalability and applicability. In this thesis, we present OverHAuL, a neurosymbolic AI system that employs LLM agents to automatically generate fuzzing harnesses directly from library code, eliminating the need for auxiliary artifacts. To comprehensively evaluate OverHAuL, we construct a benchmark suite consisting of ten open-source C libraries. Our empirical analysis demonstrates that OverHAuL achieves an 81.25% success rate in harness generation across the evaluated projects, underscoring its effectiveness and potential to facilitate more efficient vulnerability discovery.","submitter_user":"Kchousos","user_is_author":true,"tags":["ai","security","testing"],"short_id_url":"https://lobste.rs/s/uajkl0","comments_url":"https://lobste.rs/s/uajkl0/overhaul_harnessing_automation_for_c"},{"short_id":"m8ytbz","created_at":"2025-07-27T07:22:19.000-05:00","title":"The JJ VCS Workshop: A Zero-to-Hero Speedrun","url":"https://github.com/jkoppel/jj-workshop","score":40,"flags":0,"comment_count":20,"description":"","description_plain":"","submitter_user":"jkoppel","user_is_author":true,"tags":["vcs"],"short_id_url":"https://lobste.rs/s/m8ytbz","comments_url":"https://lobste.rs/s/m8ytbz/jj_vcs_workshop_zero_hero_speedrun"}]