[{"short_id":"gisler","short_id_url":"https://lobste.rs/s/gisler","created_at":"2025-02-02T14:29:11.000-06:00","title":"Everyone knows your location: tracking myself down through in-app ads","url":"https://timsh.org/tracking-myself-down-through-in-app-ads/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gisler/everyone_knows_your_location_tracking","submitter_user":"asymmetric","user_is_author":false,"tags":["privacy"]},{"short_id":"u4mgvq","short_id_url":"https://lobste.rs/s/u4mgvq","created_at":"2025-02-02T12:39:35.000-06:00","title":"par: experimental concurrent language with an interactive playground","url":"https://github.com/faiface/par-lang","score":2,"flags":0,"comment_count":0,"description":"\u003cblockquote\u003e\n\u003cp\u003ePar is a direct implementation of linear logic. Every operation corresponds to a proof-rule in its sequent calculus formulation. A future type system will have direct correspondence with propositions in linear logic.\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"\u003e Par is a direct implementation of linear logic. Every operation corresponds to a proof-rule in its sequent calculus formulation. A future type system will have direct correspondence with propositions in linear logic.","comments_url":"https://lobste.rs/s/u4mgvq/par_experimental_concurrent_language","submitter_user":"4ad","user_is_author":false,"tags":["plt"]},{"short_id":"rpf1rn","short_id_url":"https://lobste.rs/s/rpf1rn","created_at":"2025-02-02T12:26:27.000-06:00","title":"Committees Paper","url":"https://www.melconway.com/Home/Committees_Paper.html","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe origin of Conway’s Law\u003c/p\u003e\n","description_plain":"The origin of Conway's Law","comments_url":"https://lobste.rs/s/rpf1rn/committees_paper","submitter_user":"quad","user_is_author":false,"tags":["philosophy"]},{"short_id":"nsnkts","short_id_url":"https://lobste.rs/s/nsnkts","created_at":"2025-02-02T10:36:41.000-06:00","title":"5 Python Details and their Consequences","url":"https://youtu.be/t863QfAOmlY","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nsnkts/5_python_details_their_consequences","submitter_user":"Arya","user_is_author":false,"tags":["python","video"]},{"short_id":"btjtkr","short_id_url":"https://lobste.rs/s/btjtkr","created_at":"2025-02-02T09:19:56.000-06:00","title":"What software do you dream about, but do not have time to code yourself?","url":"","score":24,"flags":0,"comment_count":65,"description":"\u003cp\u003ePreviously: \u003ca href=\"https://lobste.rs/s/a3zlgq/what_software_do_you_dream_about_do_not\" rel=\"ugc\"\u003ehttps://lobste.rs/s/a3zlgq/what_software_do_you_dream_about_do_not\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Previously: https://lobste.rs/s/a3zlgq/what_software_do_you_dream_about_do_not","comments_url":"https://lobste.rs/s/btjtkr/what_software_do_you_dream_about_do_not","submitter_user":"amirouche","user_is_author":true,"tags":["ask","programming"]},{"short_id":"jhweis","short_id_url":"https://lobste.rs/s/jhweis","created_at":"2025-02-02T07:39:59.000-06:00","title":"For Sale: Binaries Compiled From Hand-Crafted Artisanal Code","url":"https://jasonbrownlee.me/blog/posts/hand-crafted-code/","score":7,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jhweis/for_sale_binaries_compiled_from_hand","submitter_user":"baobabkoodaa","user_is_author":false,"tags":["ai"]},{"short_id":"yhixpo","short_id_url":"https://lobste.rs/s/yhixpo","created_at":"2025-02-02T06:15:50.000-06:00","title":"How to Train an AI Image Model on Yourself","url":"https://www.coryzue.com/writing/make-ai-pictures-of-yourself/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yhixpo/how_train_ai_image_model_on_yourself","submitter_user":"mtlynch","user_is_author":false,"tags":["ai"]},{"short_id":"3nmvvr","short_id_url":"https://lobste.rs/s/3nmvvr","created_at":"2025-02-02T04:47:11.000-06:00","title":"Eat your greens - A philosophy for language design","url":"https://www.youtube.com/watch?v=bzUXK5VBbXc","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3nmvvr/eat_your_greens_philosophy_for_language","submitter_user":"crowdhailer","user_is_author":true,"tags":["programming","video"]},{"short_id":"ockgcp","short_id_url":"https://lobste.rs/s/ockgcp","created_at":"2025-02-02T04:38:07.000-06:00","title":"Unexpected Benefits of Building Your Own Tools","url":"https://tiniuc.com/make-more-tools/","score":14,"flags":0,"comment_count":17,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ockgcp/unexpected_benefits_building_your_own","submitter_user":"tiniuclx","user_is_author":true,"tags":["practices","programming"]},{"short_id":"4verux","short_id_url":"https://lobste.rs/s/4verux","created_at":"2025-02-02T04:08:43.000-06:00","title":"proposal: sync/v2","url":"https://github.com/golang/go/issues/71076","score":12,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4verux/proposal_sync_v2","submitter_user":"bitfield","user_is_author":false,"tags":["go"]},{"short_id":"cl8ldl","short_id_url":"https://lobste.rs/s/cl8ldl","created_at":"2025-02-02T04:02:54.000-06:00","title":"Building and Running MariaDB on mac","url":"https://hp77-creator.github.io/blogs/building-understanding-mariaDB","score":3,"flags":1,"comment_count":0,"description":"\u003cp\u003eThis blog is culmination of efforts leading to building and running MariaDB on MacOS.\u003c/p\u003e\n","description_plain":"This blog is culmination of efforts leading to building and running MariaDB on MacOS.","comments_url":"https://lobste.rs/s/cl8ldl/building_running_mariadb_on_mac","submitter_user":"hp77","user_is_author":true,"tags":["databases","mac"]},{"short_id":"su4otl","short_id_url":"https://lobste.rs/s/su4otl","created_at":"2025-02-02T03:44:08.000-06:00","title":"Safety in Programming Languages is a Means to an End","url":"https://lewiscampbell.tech/blog/250202.html","score":9,"flags":1,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/su4otl/safety_programming_languages_is_means","submitter_user":"LAC-Tech","user_is_author":true,"tags":["plt","programming","testing"]},{"short_id":"burhgj","short_id_url":"https://lobste.rs/s/burhgj","created_at":"2025-02-01T23:35:16.000-06:00","title":"You’re missing your near misses","url":"https://surfingcomplexity.blog/2025/02/01/youre-missing-your-near-misses/","score":13,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/burhgj/you_re_missing_your_near_misses","submitter_user":"typesanitizer","user_is_author":false,"tags":["practices"]},{"short_id":"xflmye","short_id_url":"https://lobste.rs/s/xflmye","created_at":"2025-02-01T22:13:16.000-06:00","title":"LLMs: harmful to technical innovation?","url":"https://evanhahn.com/llms-and-technical-innovation/","score":33,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xflmye/llms_harmful_technical_innovation","submitter_user":"EvanHahn","user_is_author":true,"tags":["ai"]},{"short_id":"xjxdr2","short_id_url":"https://lobste.rs/s/xjxdr2","created_at":"2025-02-01T22:01:50.000-06:00","title":"TAI64 in the wild is (sometimes) not TAI","url":"https://blog.dave.tf/post/tai64-is-not-tai/","score":8,"flags":0,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xjxdr2/tai64_wild_is_sometimes_not_tai","submitter_user":"jtdowney","user_is_author":false,"tags":["programming","unix"]},{"short_id":"un0fut","short_id_url":"https://lobste.rs/s/un0fut","created_at":"2025-02-01T21:11:56.000-06:00","title":"FreeBSD Alongside Windows","url":"https://vermaden.wordpress.com/2025/02/02/freebsd-alongside-windows/","score":7,"flags":2,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/un0fut/freebsd_alongside_windows","submitter_user":"vermaden","user_is_author":true,"tags":["freebsd","windows"]},{"short_id":"mxouhv","short_id_url":"https://lobste.rs/s/mxouhv","created_at":"2025-02-01T20:10:34.000-06:00","title":"3 Tools for 2025","url":"http://yosemitesam.ch/3-tools-for-2025/","score":38,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mxouhv/3_tools_for_2025","submitter_user":"Melkor333","user_is_author":true,"tags":["email","unix","vcs"]},{"short_id":"rfcmwu","short_id_url":"https://lobste.rs/s/rfcmwu","created_at":"2025-02-01T20:08:16.000-06:00","title":"Waydroid - Android in a Linux container","url":"https://waydro.id/","score":13,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rfcmwu/waydroid_android_linux_container","submitter_user":"strugee","user_is_author":false,"tags":["android","linux"]},{"short_id":"utupyb","short_id_url":"https://lobste.rs/s/utupyb","created_at":"2025-02-01T14:55:32.000-06:00","title":"Allow Necromancy: To Avoid Reposts, Enable Comments on Old Posts","url":"","score":8,"flags":0,"comment_count":4,"description":"\u003cp\u003eLately, I’ve been searching through site history a lot. This works well generally, but I e.g. just read a history of APL and wanted to supply a review comment. Unfortunately, it was posted some months ago and received no discussion. We could obviate the need for reposts (and e.g. the repost checker) by allowing further dated responses.\u003c/p\u003e\n\u003cp\u003eThis could effectively change the site data model, where a post collects all opinions/discussions about a particular piece/URL. I’m not sure of the overall consequences, but they initially seem rather interesting (and positive). In IRC, some people said they don’t think this is the place for canonical discussions though, in which case: When can we repost?\u003c/p\u003e\n\u003cp\u003ePositives:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eobviate reposts\u003c/li\u003e\n\u003cli\u003echange data model, now post is complete collection of discussion on a piece\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNegatives:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003emakes archives dynamic, requiring technical/moderation changes\u003c/li\u003e\n\u003cli\u003ecould notify original thread poster (if they chose), a minor form of why people historically hated necros (but fixable)\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"Lately, I've been searching through site history a lot. This works well generally, but I e.g. just read a history of APL and wanted to supply a review comment. Unfortunately, it was posted some months ago and received no discussion. We could obviate the need for reposts (and e.g. the repost checker) by allowing further dated responses.\r\n\r\nThis could effectively change the site data model, where a post collects all opinions/discussions about a particular piece/URL. I'm not sure of the overall consequences, but they initially seem rather interesting (and positive). In IRC, some people said they don't think this is the place for canonical discussions though, in which case: When can we repost?\r\n\r\nPositives:\r\n- obviate reposts\r\n- change data model, now post is complete collection of discussion on a piece\r\n\r\nNegatives:\r\n- makes archives dynamic, requiring technical/moderation changes\r\n- could notify original thread poster (if they chose), a minor form of why people historically hated necros (but fixable)","comments_url":"https://lobste.rs/s/utupyb/allow_necromancy_avoid_reposts_enable","submitter_user":"veqq","user_is_author":true,"tags":["meta"]},{"short_id":"u292ym","short_id_url":"https://lobste.rs/s/u292ym","created_at":"2025-02-01T13:54:59.000-06:00","title":"Python 3, Pygame, and Debian Bookworm on the Miyoo A30","url":"https://www.jtolio.com/2025/02/py3-pygame-miyoo-a30/","score":10,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/u292ym/python_3_pygame_debian_bookworm_on_miyoo","submitter_user":"jtolio","user_is_author":true,"tags":["games","hardware","python"]},{"short_id":"nbmpqe","short_id_url":"https://lobste.rs/s/nbmpqe","created_at":"2025-02-01T13:10:06.000-06:00","title":"The origin and unexpected evolution of the word \"mainframe\"","url":"https://www.righto.com/2025/02/origin-of-mainframe-term.html","score":12,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nbmpqe/origin_unexpected_evolution_word","submitter_user":"mjn","user_is_author":false,"tags":["historical"]},{"short_id":"wcjraq","short_id_url":"https://lobste.rs/s/wcjraq","created_at":"2025-02-01T11:17:17.000-06:00","title":"Ruby \"Thread Contention\" is simply GVL Queuing | Island94.org","url":"https://island94.org/2025/01/ruby-thread-contention-simply-gvl-queuing","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wcjraq/ruby_thread_contention_is_simply_gvl","submitter_user":"amw-zero","user_is_author":false,"tags":["distributed","performance","ruby"]},{"short_id":"mob1j1","short_id_url":"https://lobste.rs/s/mob1j1","created_at":"2025-02-01T10:02:27.000-06:00","title":"Extending the Coreutils project - Rewriting base tools in Rust","url":"https://uutils.github.io/blog/2025-02-extending/","score":20,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mob1j1/extending_coreutils_project_rewriting","submitter_user":"evilpie","user_is_author":false,"tags":["rust","unix"]},{"short_id":"eazsn7","short_id_url":"https://lobste.rs/s/eazsn7","created_at":"2025-02-01T09:59:17.000-06:00","title":"The Next Chapter in Swift Build Technologies","url":"https://swift.org/blog/the-next-chapter-in-swift-build-technologies/","score":14,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eazsn7/next_chapter_swift_build_technologies","submitter_user":"snej","user_is_author":false,"tags":["release","swift"]},{"short_id":"si9lwe","short_id_url":"https://lobste.rs/s/si9lwe","created_at":"2025-02-01T09:06:18.000-06:00","title":"Using serde, quote, syn and proc_macro2 to implement the Kafka protocol sans-io in Rust","url":"https://blog.tansu.io/articles/serde-kafka-protocol","score":9,"flags":1,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/si9lwe/using_serde_quote_syn_proc_macro2","submitter_user":"shortishly","user_is_author":true,"tags":["api","programming","rust"]}]