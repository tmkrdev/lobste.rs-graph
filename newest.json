[{"short_id":"mwxrye","created_at":"2025-10-30T00:02:14.000-05:00","title":"word2vec-style vector arithmetic on docs embeddings","url":"https://technicalwriting.dev/embeddings/arithmetic/index.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"kaycebasques","user_is_author":true,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/mwxrye","comments_url":"https://lobste.rs/s/mwxrye/word2vec_style_vector_arithmetic_on_docs"},{"short_id":"gs3atp","created_at":"2025-10-29T22:49:23.000-05:00","title":"Interview with the creator of ZSNES","url":"https://www.youtube.com/watch?v=iG-oqvj4Tqk","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"jmillikin","user_is_author":false,"tags":["games","historical","retrocomputing","video"],"short_id_url":"https://lobste.rs/s/gs3atp","comments_url":"https://lobste.rs/s/gs3atp/interview_with_creator_zsnes"},{"short_id":"aro9mz","created_at":"2025-10-29T21:57:53.000-05:00","title":"How to Set Up Guile Load Path","url":"https://trop.in/blog/how-to-set-up-guile-load-path","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"breatheoutbreathein","user_is_author":false,"tags":["lisp"],"short_id_url":"https://lobste.rs/s/aro9mz","comments_url":"https://lobste.rs/s/aro9mz/how_set_up_guile_load_path"},{"short_id":"bjf98u","created_at":"2025-10-29T21:19:36.000-05:00","title":"Stacking Threads","url":"https://www.netmeister.org/blog/thread-stacks.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"fanf","user_is_author":false,"tags":["unix"],"short_id_url":"https://lobste.rs/s/bjf98u","comments_url":"https://lobste.rs/s/bjf98u/stacking_threads"},{"short_id":"4hza7h","created_at":"2025-10-29T19:55:42.000-05:00","title":"Jujutsu at Google","url":"https://www.youtube.com/watch?v=v9Ob5yPpC0A\u0026list=PLOU2XLYxmsILM5cRwAK6yKdtKnCK6Y4Oh\u0026index=6","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"steveklabnik","user_is_author":false,"tags":["vcs","video"],"short_id_url":"https://lobste.rs/s/4hza7h","comments_url":"https://lobste.rs/s/4hza7h/jujutsu_at_google"},{"short_id":"z6qhuj","created_at":"2025-10-29T18:30:32.000-05:00","title":"Traveling Salesman Game","url":"https://prolog.univie.ac.at/tspGame/game.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"hwayne","user_is_author":false,"tags":["games","math"],"short_id_url":"https://lobste.rs/s/z6qhuj","comments_url":"https://lobste.rs/s/z6qhuj/traveling_salesman_game"},{"short_id":"ztcvsd","created_at":"2025-10-29T18:18:41.000-05:00","title":"Launching XTDB v2 — time-travel SQL database to simplify compliance ·","url":"https://xtdb.com/blog/launching-xtdb-v2","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"janus","user_is_author":false,"tags":["databases","release"],"short_id_url":"https://lobste.rs/s/ztcvsd","comments_url":"https://lobste.rs/s/ztcvsd/launching_xtdb_v2_time_travel_sql"},{"short_id":"x45mtq","created_at":"2025-10-29T18:12:17.000-05:00","title":"Eidetic Systems (2014)","url":"https://www.usenix.org/system/files/conference/osdi14/osdi14-paper-devecsery.pdf","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"calvin","user_is_author":false,"tags":["compsci","osdev","pdf"],"short_id_url":"https://lobste.rs/s/x45mtq","comments_url":"https://lobste.rs/s/x45mtq/eidetic_systems_2014"},{"short_id":"hrum0f","created_at":"2025-10-29T17:41:30.000-05:00","title":"Use the XDG Base Directory Specification","url":"https://xdgbasedirectoryspecification.com/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"regalialong","user_is_author":false,"tags":["linux"],"short_id_url":"https://lobste.rs/s/hrum0f","comments_url":"https://lobste.rs/s/hrum0f/use_xdg_base_directory_specification"},{"short_id":"skxrc9","created_at":"2025-10-29T17:32:28.000-05:00","title":"I'm Independently Verifying Go's Reproducible Builds","url":"https://www.agwa.name/blog/post/verifying_go_reproducible_builds","score":21,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"FiloSottile","user_is_author":false,"tags":["go","security"],"short_id_url":"https://lobste.rs/s/skxrc9","comments_url":"https://lobste.rs/s/skxrc9/i_m_independently_verifying_go_s"},{"short_id":"mpbu1n","created_at":"2025-10-29T17:20:48.000-05:00","title":"John Carmack on updating variables","url":"","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eJohn Carmack tweeted today\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen I started working in python, I got lazy with “single assignment”, and I need to nudge myself about it.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou should strive to never reassign or update a variable outside of true iterative calculations in loops. Having all the intermediate calculations still available is helpful in the debugger, and it avoids problems where you move a block of code and it silently uses a version of the variable that wasn’t what it originally had.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn C/C++, making almost every variable const at initialization is good practice. I wish it was the default, and mutable was a keyword.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eNot only have I been writing code in that style for years, I written a language in that style. I'm not working on it anymore \u003ca href=\"https://bolinlang.com/\" rel=\"ugc\"\u003ehttps://bolinlang.com/\u003c/a\u003e\n\u003ccode\u003ea = 1\u003c/code\u003e is const, \u003ccode\u003ea := 1\u003c/code\u003e is mutable, no var/const/let/auto keyword because it's expected that you'll mutate variables rarely. You mutate vars by using compound statements (\u003ccode\u003e+=\u003c/code\u003e, \u003ccode\u003e\u0026lt;\u0026lt;=\u003c/code\u003e, etc) or dot equals ('\u003ccode\u003e.=\u003c/code\u003e'). Although \u003ccode\u003eobj.member = 5; arr[i] = 6\u003c/code\u003e is fine since no one will confuse those with declaring a variable\u003c/p\u003e\n","description_plain":"John Carmack tweeted today\r\n\r\n\u003e When I started working in python, I got lazy with “single assignment”, and I need to nudge myself about it.\r\n\r\n\u003e You should strive to never reassign or update a variable outside of true iterative calculations in loops. Having all the intermediate calculations still available is helpful in the debugger, and it avoids problems where you move a block of code and it silently uses a version of the variable that wasn’t what it originally had.\r\n\r\n\u003e In C/C++, making almost every variable const at initialization is good practice. I wish it was the default, and mutable was a keyword.\r\n\r\nNot only have I been writing code in that style for years, I written a language in that style. I'm not working on it anymore https://bolinlang.com/ \r\n`a = 1` is const, `a := 1` is mutable, no var/const/let/auto keyword because it's expected that you'll mutate variables rarely. You mutate vars by using compound statements (`+=`, `\u003c\u003c=`, etc) or dot equals ('`.=`'). Although `obj.member = 5; arr[i] = 6` is fine since no one will confuse those with declaring a variable","submitter_user":"levodelellis","user_is_author":true,"tags":["programming"],"short_id_url":"https://lobste.rs/s/mpbu1n","comments_url":"https://lobste.rs/s/mpbu1n/john_carmack_on_updating_variables"},{"short_id":"3jf7it","created_at":"2025-10-29T15:59:53.000-05:00","title":"The Green Tea Garbage Collector - The Go Programming Language","url":"https://go.dev/blog/greenteagc","score":18,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"cgrinds","user_is_author":false,"tags":["go"],"short_id_url":"https://lobste.rs/s/3jf7it","comments_url":"https://lobste.rs/s/3jf7it/green_tea_garbage_collector_go"},{"short_id":"wq40br","created_at":"2025-10-29T15:53:00.000-05:00","title":"Claude Skills, anywhere: making them first-class in Codex CLI","url":"https://www.robert-glaser.de/claude-skills-in-codex-cli/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"youngbrioche","user_is_author":true,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/wq40br","comments_url":"https://lobste.rs/s/wq40br/claude_skills_anywhere_making_them_first"},{"short_id":"sd6ska","created_at":"2025-10-29T15:46:29.000-05:00","title":"Adding Customizable Frame Contrast to KDE Plasma","url":"https://akselmo.dev/posts/frame-contrast-settings/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"Aks","user_is_author":true,"tags":["a11y"],"short_id_url":"https://lobste.rs/s/sd6ska","comments_url":"https://lobste.rs/s/sd6ska/adding_customizable_frame_contrast_kde"},{"short_id":"rb81fq","created_at":"2025-10-29T15:06:23.000-05:00","title":"Zig's New Async I/O (Text Version)","url":"https://andrewkelley.me/post/zig-new-async-io-text-version.html","score":45,"flags":1,"comment_count":4,"description":"","description_plain":"","submitter_user":"andrewrk","user_is_author":true,"tags":["zig"],"short_id_url":"https://lobste.rs/s/rb81fq","comments_url":"https://lobste.rs/s/rb81fq/zig_s_new_async_i_o_text_version"},{"short_id":"q2ghg1","created_at":"2025-10-29T14:02:59.000-05:00","title":"Developing a web server with C and FastCGI","url":"https://jsloop.net/2025/10/27/developing-a-web-server-with-c-and-fastcgi","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"abnercoimbre","user_is_author":false,"tags":["c","web"],"short_id_url":"https://lobste.rs/s/q2ghg1","comments_url":"https://lobste.rs/s/q2ghg1/developing_web_server_with_c_fastcgi"},{"short_id":"gmnd5t","created_at":"2025-10-29T13:51:58.000-05:00","title":"Ajla tutorial","url":"https://www.ajla-lang.cz/tutorial.html","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"janus","user_is_author":false,"tags":["formalmethods","plt"],"short_id_url":"https://lobste.rs/s/gmnd5t","comments_url":"https://lobste.rs/s/gmnd5t/ajla_tutorial"},{"short_id":"mwcz77","created_at":"2025-10-29T13:37:43.000-05:00","title":"CRDT Documents in Redis with Automerge","url":"https://github.com/michelp/redis-automerge","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"michelp","user_is_author":true,"tags":["rust"],"short_id_url":"https://lobste.rs/s/mwcz77","comments_url":"https://lobste.rs/s/mwcz77/crdt_documents_redis_with_automerge"},{"short_id":"wenkjf","created_at":"2025-10-29T13:29:47.000-05:00","title":"Post-mortem of the September 2 Matrix.org outage","url":"https://matrix.org/blog/2025/10/post-mortem/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"Aks","user_is_author":false,"tags":["distributed"],"short_id_url":"https://lobste.rs/s/wenkjf","comments_url":"https://lobste.rs/s/wenkjf/post_mortem_september_2_matrix_org_outage"},{"short_id":"ykkwap","created_at":"2025-10-29T12:28:03.000-05:00","title":"Shifting Perspectives on Purchasing Open Source Software","url":"https://futo.org/blog/shifting-perspectives-on-open-source/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"Arya","user_is_author":false,"tags":["culture"],"short_id_url":"https://lobste.rs/s/ykkwap","comments_url":"https://lobste.rs/s/ykkwap/shifting_perspectives_on_purchasing"},{"short_id":"rdh2iz","created_at":"2025-10-29T12:19:03.000-05:00","title":"How to Obsessively Tune WezTerm","url":"https://rashil2000.me/blogs/tune-wezterm","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"bew","user_is_author":false,"tags":["lua"],"short_id_url":"https://lobste.rs/s/rdh2iz","comments_url":"https://lobste.rs/s/rdh2iz/how_obsessively_tune_wezterm"},{"short_id":"1kmedc","created_at":"2025-10-29T12:02:23.000-05:00","title":"DragonOS龙操作系统 – 开源，面向未来","url":"https://dragonos.org/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"eyberg","user_is_author":false,"tags":["devops","osdev"],"short_id_url":"https://lobste.rs/s/1kmedc","comments_url":"https://lobste.rs/s/1kmedc/dragonos"},{"short_id":"fluuv7","created_at":"2025-10-29T11:10:22.000-05:00","title":"uv is the best thing to happen to the Python ecosystem in a decade","url":"https://emily.space/posts/251023-uv","score":58,"flags":0,"comment_count":31,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["python"],"short_id_url":"https://lobste.rs/s/fluuv7","comments_url":"https://lobste.rs/s/fluuv7/uv_is_best_thing_happen_python_ecosystem"},{"short_id":"zylfw8","created_at":"2025-10-29T10:45:57.000-05:00","title":"Dithering - Part 1","url":"https://visualrambling.space/dithering-part-1/","score":13,"flags":0,"comment_count":8,"description":"","description_plain":"","submitter_user":"krig","user_is_author":false,"tags":["graphics"],"short_id_url":"https://lobste.rs/s/zylfw8","comments_url":"https://lobste.rs/s/zylfw8/dithering_part_1"},{"short_id":"vd7dgj","created_at":"2025-10-29T10:13:59.000-05:00","title":"Normalize Identifying Corporate Devices in Your Software","url":"https://lgug2z.com/articles/normalize-identifying-corporate-devices-in-your-software/","score":71,"flags":0,"comment_count":16,"description":"","description_plain":"","submitter_user":"jeezy","user_is_author":true,"tags":["law","programming"],"short_id_url":"https://lobste.rs/s/vd7dgj","comments_url":"https://lobste.rs/s/vd7dgj/normalize_identifying_corporate"}]