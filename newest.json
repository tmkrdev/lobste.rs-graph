[{"short_id":"1o6zda","short_id_url":"https://lobste.rs/s/1o6zda","created_at":"2025-03-18T02:55:58.000-05:00","title":"Slack: The Art of Being Busy Without Getting Anything Done","url":"https://matduggan.com/slack-the-art-of-being-busy-without-getting-anything-done/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1o6zda/slack_art_being_busy_without_getting","submitter_user":"xvello","user_is_author":false,"tags":["practices","rant"]},{"short_id":"0pwhse","short_id_url":"https://lobste.rs/s/0pwhse","created_at":"2025-03-18T02:37:04.000-05:00","title":"Nginx Rejects Dark Mode Support For Error Pages","url":"https://www.phoronix.com/news/Nginx-Dark-Mode-Errors-Rejected","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0pwhse/nginx_rejects_dark_mode_support_for_error","submitter_user":"laktak","user_is_author":false,"tags":["web"]},{"short_id":"zl1hmg","short_id_url":"https://lobste.rs/s/zl1hmg","created_at":"2025-03-18T02:17:21.000-05:00","title":"The Calculated Typer","url":"https://bahr.io/pubs/entries/calctyper.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zl1hmg/calculated_typer","submitter_user":"veqq","user_is_author":false,"tags":["pdf","plt"]},{"short_id":"sgyyww","short_id_url":"https://lobste.rs/s/sgyyww","created_at":"2025-03-18T02:13:34.000-05:00","title":"Stop Using and Recommending React","url":"https://blog.lusito.info/stop-using-and-recommending-react.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sgyyww/stop_using_recommending_react","submitter_user":"wbolster","user_is_author":false,"tags":["browsers","javascript","web"]},{"short_id":"bbdx4m","short_id_url":"https://lobste.rs/s/bbdx4m","created_at":"2025-03-18T01:52:05.000-05:00","title":"How to Track and Document Known Issues Effectively in Software Projects","url":"https://l.idaszak.com/l-known-issues","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bbdx4m/how_track_document_known_issues","submitter_user":"IdaszakDaniel","user_is_author":true,"tags":["practices"]},{"short_id":"1htmqf","short_id_url":"https://lobste.rs/s/1htmqf","created_at":"2025-03-18T01:15:22.000-05:00","title":"Extracting content from an LCP \"protected\" ePub","url":"https://shkspr.mobi/blog/2025/03/towards-extracting-content-from-an-lcp-protected-epub/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1htmqf/extracting_content_from_lcp_protected","submitter_user":"jmillikin","user_is_author":false,"tags":["reversing"]},{"short_id":"geiygp","short_id_url":"https://lobste.rs/s/geiygp","created_at":"2025-03-18T00:27:45.000-05:00","title":"Building a search engine from scratch","url":"https://jdrouet.github.io/posts/202503161800-search-engine-intro/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/geiygp/building_search_engine_from_scratch","submitter_user":"KnorrFG","user_is_author":false,"tags":["rust","wasm"]},{"short_id":"gqyrxk","short_id_url":"https://lobste.rs/s/gqyrxk","created_at":"2025-03-17T21:42:16.000-05:00","title":"Can we consider self-promo discussion off-topic?","url":"","score":31,"flags":0,"comment_count":11,"description":"\u003cp\u003eEvery few weeks, a thread on the front page gets dominated by meta discussion about how the author is breaking the self-promo guideline. I propose discouraging this by stating in the guidelines that such comments are off-topic.\u003c/p\u003e\n\u003cp\u003eIf people want to help enforce the guideline, I think it would be better to kindly PM the author the first time, and flag as spam if you think they are knowingly disregarding it.\u003c/p\u003e\n\u003cp\u003eWhen it’s a public comment, it often overwhelms the original topic. Sometimes it leads to lots of disagreement (not just by the author), which suggests the need for more actual meta discussions like this one, or clearer guidelines. Often it’s upvoted more than anything else, perhaps encouraging others that policing this guideline is rewarding.\u003c/p\u003e\n\u003cp\u003ePeople probably check out the author’s submissions before upvoting, but it’s not easy to tell how much someone is self-promoting by looking at their profile. You have to comb through lots of comments — there are members in good standing who author all their submissions, but have many comments on other submissions. As a result I don’t think the public opinion (upvote count) ends up being as fair as it should be.\u003c/p\u003e\n\u003cp\u003eI can provide recent examples if it helps, but I’m not trying to focus on specific users or comments.\u003c/p\u003e\n","description_plain":"Every few weeks, a thread on the front page gets dominated by meta discussion about how the author is breaking the self-promo guideline. I propose discouraging this by stating in the guidelines that such comments are off-topic.\r\n\r\nIf people want to help enforce the guideline, I think it would be better to kindly PM the author the first time, and flag as spam if you think they are knowingly disregarding it.\r\n\r\nWhen it's a public comment, it often overwhelms the original topic. Sometimes it leads to lots of disagreement (not just by the author), which suggests the need for more actual meta discussions like this one, or clearer guidelines. Often it's upvoted more than anything else, perhaps encouraging others that policing this guideline is rewarding.\r\n\r\nPeople probably check out the author's submissions before upvoting, but it's not easy to tell how much someone is self-promoting by looking at their profile. You have to comb through lots of comments — there are members in good standing who author all their submissions, but have many comments on other submissions. As a result I don't think the public opinion (upvote count) ends up being as fair as it should be.\r\n\r\nI can provide recent examples if it helps, but I'm not trying to focus on specific users or comments.","comments_url":"https://lobste.rs/s/gqyrxk/can_we_consider_self_promo_discussion_off","submitter_user":"mk12","user_is_author":true,"tags":["meta"]},{"short_id":"uti1z4","short_id_url":"https://lobste.rs/s/uti1z4","created_at":"2025-03-17T21:05:41.000-05:00","title":"Parser combinators under the hood","url":"https://youtu.be/hFO9G0Va__0","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uti1z4/parser_combinators_under_hood","submitter_user":"janiczek","user_is_author":true,"tags":["api","elm","programming","video"]},{"short_id":"vdvkfd","short_id_url":"https://lobste.rs/s/vdvkfd","created_at":"2025-03-17T20:20:39.000-05:00","title":"Past and Present Futures of User Interface Design","url":"https://www.datagubbe.se/futui/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vdvkfd/past_present_futures_user_interface","submitter_user":"facundoolano","user_is_author":false,"tags":["design","historical"]},{"short_id":"rm7jdg","short_id_url":"https://lobste.rs/s/rm7jdg","created_at":"2025-03-17T19:10:46.000-05:00","title":"Offline PKI using 3 YubiKeys and an ARM single board computer","url":"https://vincent.bernat.ch/en/blog/2025-offline-pki-yubikeys","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rm7jdg/offline_pki_using_3_yubikeys_arm_single","submitter_user":"adamcstephens","user_is_author":false,"tags":["security"]},{"short_id":"jtk4tx","short_id_url":"https://lobste.rs/s/jtk4tx","created_at":"2025-03-17T18:35:11.000-05:00","title":"GIMP 3.0 Released","url":"https://www.gimp.org/news/2025/03/16/gimp-3-0-released/","score":29,"flags":0,"comment_count":12,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jtk4tx/gimp_3_0_released","submitter_user":"susam","user_is_author":false,"tags":["release"]},{"short_id":"kra0fw","short_id_url":"https://lobste.rs/s/kra0fw","created_at":"2025-03-17T18:15:59.000-05:00","title":"Integer Linear Programming (ILP) (2020)","url":"https://rtime.ciirc.cvut.cz/~hanzalek/KO/ILP_e.pdf","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe ILP problem is given by matrix 𝐀 ∈ ℝᵐ×ⁿ and vectors 𝐛 ∈ ℝᵐ and\n𝐜 ∈ ℝⁿ. The goal is to find a vector 𝐱 ∈ ℤⁿ such that 𝐀 · x ≤ b and cᵀ · x is the maximum.\u003c/p\u003e\n\u003cp\u003eUsually, the problem is given as max {cᵀ · x : 𝐀 · x ≤ b, x ∈ ℤⁿ}.\u003c/p\u003e\n\u003cp\u003e“A large number of practical optimization problems can be modeled\nand solved using Integer Linear Programming - ILP.”\u003c/p\u003e\n","description_plain":"The ILP problem is given by matrix 𝐀 ∈ ℝᵐ×ⁿ and vectors 𝐛 ∈ ℝᵐ and\r\n𝐜 ∈ ℝⁿ. The goal is to find a vector 𝐱 ∈ ℤⁿ such that 𝐀 · x ≤ b and cᵀ · x is the maximum.\r\n\r\nUsually, the problem is given as max {cᵀ · x : 𝐀 · x ≤ b, x ∈ ℤⁿ}.\r\n\r\n\"A large number of practical optimization problems can be modeled\r\nand solved using Integer Linear Programming - ILP.\"","comments_url":"https://lobste.rs/s/kra0fw/integer_linear_programming_ilp_2020","submitter_user":"kjensenxz","user_is_author":false,"tags":["pdf","performance"]},{"short_id":"uvi7es","short_id_url":"https://lobste.rs/s/uvi7es","created_at":"2025-03-17T15:20:33.000-05:00","title":"Wherein I Explain Why Emacs Is The Best Tool For WordPress","url":"https://lars.ingebrigtsen.no/2025/03/16/wherein-i-explain-why-emacs-is-the-best-tool-for-wordpress/","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uvi7es/wherein_i_explain_why_emacs_is_best_tool","submitter_user":"mms","user_is_author":false,"tags":["emacs"]},{"short_id":"4guing","short_id_url":"https://lobste.rs/s/4guing","created_at":"2025-03-17T15:10:57.000-05:00","title":"After 47 years, OpenVMS gets a package manager (VSP)","url":"https://raymii.org/s/blog/After_47_years_OpenVMS_gets_a_package_manager_VSP.html","score":4,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4guing/after_47_years_openvms_gets_package","submitter_user":"raymii","user_is_author":true,"tags":["networking","osdev"]},{"short_id":"hqxvb6","short_id_url":"https://lobste.rs/s/hqxvb6","created_at":"2025-03-17T14:23:08.000-05:00","title":"The Atrocious State Of Binary Compatibility on Linux and How To Address It","url":"https://jangafx.com/insights/linux-binary-compatibility","score":18,"flags":0,"comment_count":16,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hqxvb6/atrocious_state_binary_compatibility_on","submitter_user":"calvin","user_is_author":false,"tags":["linux"]},{"short_id":"speged","short_id_url":"https://lobste.rs/s/speged","created_at":"2025-03-17T14:11:13.000-05:00","title":"Verifiability is the Limit","url":"https://alperenkeles.com/posts/verifiability-is-the-limit/","score":5,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/speged/verifiability_is_limit","submitter_user":"hwayne","user_is_author":false,"tags":["ai","practices"]},{"short_id":"tzjxrc","short_id_url":"https://lobste.rs/s/tzjxrc","created_at":"2025-03-17T13:24:49.000-05:00","title":"Password reuse is rampant: nearly half of observed user logins are compromised","url":"https://blog.cloudflare.com/password-reuse-rampant-half-user-logins-compromised/","score":16,"flags":0,"comment_count":19,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tzjxrc/password_reuse_is_rampant_nearly_half","submitter_user":"gmem","user_is_author":false,"tags":["security"]},{"short_id":"yhxoqu","short_id_url":"https://lobste.rs/s/yhxoqu","created_at":"2025-03-17T12:38:06.000-05:00","title":"Tiny Pointers","url":"https://arxiv.org/abs/2111.12800","score":11,"flags":0,"comment_count":1,"description":"\u003cp\u003eThis paper introduces a new data-structural object that we call the tiny pointer. In many applications,\ntraditional log n-bit pointers can be replaced with o(log n)-bit tiny pointers at the cost of only a constantfactor time overhead. We develop a comprehensive theory of tiny pointers, and give optimal constructions\nfor both fixed-size tiny pointers (i.e., settings in which all of the tiny pointers must be the same size)\nand variable-size tiny pointers (i.e., settings in which the average tiny-pointer size must be small, but\nsome tiny pointers can be larger). If a tiny pointer references an element in an array filled to load factor\n1−1/k, then the optimal tiny-pointer size is Θ(log log log n+log k) bits in the fixed-size case, and Θ(log k)\nexpected bits in the variable-size case. Our tiny-pointer constructions also require us to revisit several\nclassic problems having to do with balls and bins; these results may be of independent interest.\u003c/p\u003e\n\u003cp\u003eUsing tiny pointers, we revisit five classic data-structure problems. We show that:\u003c/p\u003e\n\u003cp\u003e• A data structure storing n v-bit values for n keys with constant-time modifications/queries can be\nimplemented to take space nv +O(n log(r) n) bits, for any constant r \u0026gt; 0, as long as the user stores\na tiny pointer of expected size O(1) with each key—here, log(r) n is the r-th iterated logarithm.\u003c/p\u003e\n\u003cp\u003e• Any binary search tree can be made succinct with constant-factor time overhead, and can even be\nmade to be within O(n) bits of optimal if we allow for O(log∗ n)-time modifications—this holds\neven for rotation-based trees such as the splay tree and the red-black tree.\u003c/p\u003e\n\u003cp\u003e• Any fixed-capacity key-value dictionary can be made stable (i.e., items do not move once inserted)\nwith constant-time overhead and 1 + o(1) space overhead.\u003c/p\u003e\n\u003cp\u003e• Any key-value dictionary that requires uniform-size values can be made to support arbitrary-size\nvalues with constant-time overhead and with an additional space consumption of log(r) n+O(log j)\nbits per j-bit value for an arbitrary constant r \u0026gt; 0 of our choice.\n• Given an external-memory array A of size (1 + ε)n containing a dynamic set of up to n key-value\npairs, it is possible to maintain an internal-memory stash of size O(n log ε−1) bits so that the\nlocation of any key-value pair in A can be computed in constant time (and with no IOs).\nThese are all well studied and classic problems, and in each case tiny pointers allow for us to take a natural space-inefficient solution that uses pointers and make it space-efficient for free\u003c/p\u003e\n","description_plain":"This paper introduces a new data-structural object that we call the tiny pointer. In many applications,\r\ntraditional log n-bit pointers can be replaced with o(log n)-bit tiny pointers at the cost of only a constantfactor time overhead. We develop a comprehensive theory of tiny pointers, and give optimal constructions\r\nfor both fixed-size tiny pointers (i.e., settings in which all of the tiny pointers must be the same size)\r\nand variable-size tiny pointers (i.e., settings in which the average tiny-pointer size must be small, but\r\nsome tiny pointers can be larger). If a tiny pointer references an element in an array filled to load factor\r\n1−1/k, then the optimal tiny-pointer size is Θ(log log log n+log k) bits in the fixed-size case, and Θ(log k)\r\nexpected bits in the variable-size case. Our tiny-pointer constructions also require us to revisit several\r\nclassic problems having to do with balls and bins; these results may be of independent interest.\r\n\r\nUsing tiny pointers, we revisit five classic data-structure problems. We show that:\r\n\r\n• A data structure storing n v-bit values for n keys with constant-time modifications/queries can be\r\nimplemented to take space nv +O(n log(r) n) bits, for any constant r \u003e 0, as long as the user stores\r\na tiny pointer of expected size O(1) with each key—here, log(r) n is the r-th iterated logarithm.\r\n\r\n• Any binary search tree can be made succinct with constant-factor time overhead, and can even be\r\nmade to be within O(n) bits of optimal if we allow for O(log∗ n)-time modifications—this holds\r\neven for rotation-based trees such as the splay tree and the red-black tree.\r\n\r\n• Any fixed-capacity key-value dictionary can be made stable (i.e., items do not move once inserted)\r\nwith constant-time overhead and 1 + o(1) space overhead.\r\n\r\n• Any key-value dictionary that requires uniform-size values can be made to support arbitrary-size\r\nvalues with constant-time overhead and with an additional space consumption of log(r) n+O(log j)\r\nbits per j-bit value for an arbitrary constant r \u003e 0 of our choice.\r\n• Given an external-memory array A of size (1 + ε)n containing a dynamic set of up to n key-value\r\npairs, it is possible to maintain an internal-memory stash of size O(n log ε−1) bits so that the\r\nlocation of any key-value pair in A can be computed in constant time (and with no IOs).\r\nThese are all well studied and classic problems, and in each case tiny pointers allow for us to take a natural space-inefficient solution that uses pointers and make it space-efficient for free","comments_url":"https://lobste.rs/s/yhxoqu/tiny_pointers","submitter_user":"MatheusRich","user_is_author":false,"tags":["programming"]},{"short_id":"s5p1ng","short_id_url":"https://lobste.rs/s/s5p1ng","created_at":"2025-03-17T12:36:20.000-05:00","title":"Announcing Snix","url":"https://snix.dev/blog/announcing-snix/","score":31,"flags":0,"comment_count":19,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/s5p1ng/announcing_snix","submitter_user":"domenkozar","user_is_author":false,"tags":["nix"]},{"short_id":"7iel5b","short_id_url":"https://lobste.rs/s/7iel5b","created_at":"2025-03-17T12:07:43.000-05:00","title":"The Rhombus Programming Language","url":"https://rhombus-lang.org","score":29,"flags":0,"comment_count":4,"description":"\u003cp\u003eRhombus is ready for early adopters.\nLearn more and get it now at \u003ca href=\"https://rhombus-lang.org/\" rel=\"ugc\"\u003ehttps://rhombus-lang.org/\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Rhombus is ready for early adopters. \r\nLearn more and get it now at https://rhombus-lang.org/","comments_url":"https://lobste.rs/s/7iel5b/rhombus_programming_language","submitter_user":"spdegabrielle","user_is_author":false,"tags":["lisp","plt"]},{"short_id":"pw3uzf","short_id_url":"https://lobste.rs/s/pw3uzf","created_at":"2025-03-17T11:57:25.000-05:00","title":"Zero-Knowledge Proofs","url":"https://youtu.be/Otvcbw6k4eo","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pw3uzf/zero_knowledge_proofs","submitter_user":"altano","user_is_author":false,"tags":["cryptography","video"]},{"short_id":"3mjwud","short_id_url":"https://lobste.rs/s/3mjwud","created_at":"2025-03-17T11:35:44.000-05:00","title":"Bypassing Authentication Like It’s The ‘90s - Pre-Auth RCE Chain(s) in Kentico Xperience CMS","url":"https://labs.watchtowr.com/bypassing-authentication-like-its-the-90s-pre-auth-rce-chain-s-in-kentico-xperience-cms/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3mjwud/bypassing_authentication_like_it_s_90s","submitter_user":"eBPF","user_is_author":false,"tags":["security"]},{"short_id":"zmreeg","short_id_url":"https://lobste.rs/s/zmreeg","created_at":"2025-03-17T10:25:49.000-05:00","title":"Introducing Intel® Advanced Performance Extensions (Intel® APX)","url":"https://www.intel.com/content/www/us/en/developer/articles/technical/advanced-performance-extensions-apx.html","score":18,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zmreeg/introducing_intel_advanced_performance","submitter_user":"williballenthin","user_is_author":false,"tags":["hardware"]},{"short_id":"r8mdl9","short_id_url":"https://lobste.rs/s/r8mdl9","created_at":"2025-03-17T10:10:25.000-05:00","title":"HTTP/3 is everywhere but nowhere","url":"https://httptoolkit.com/blog/http3-quic-open-source-support-nowhere/","score":25,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/r8mdl9/http_3_is_everywhere_nowhere","submitter_user":"eduard","user_is_author":false,"tags":["web"]}]