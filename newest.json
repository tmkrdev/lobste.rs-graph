[{"short_id":"nisytd","created_at":"2025-10-01T04:20:46.000-05:00","title":"Our efforts, in part, define us","url":"https://weakty.com/posts/efforts/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"raffomania","user_is_author":false,"tags":["practices","vibecoding"],"short_id_url":"https://lobste.rs/s/nisytd","comments_url":"https://lobste.rs/s/nisytd/our_efforts_part_define_us"},{"short_id":"i1dy7u","created_at":"2025-10-01T03:32:40.000-05:00","title":"What’s the difference between files and directories in a Unix-like filesystem?","url":"https://jack23247.github.io/blog/linux/inodes/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"ema-pe","user_is_author":false,"tags":["linux","unix"],"short_id_url":"https://lobste.rs/s/i1dy7u","comments_url":"https://lobste.rs/s/i1dy7u/what_s_difference_between_files"},{"short_id":"cetldx","created_at":"2025-10-01T03:04:08.000-05:00","title":"Register allocation in the Go compiler [2024]","url":"https://vnmakarov.github.io/2024/09/24/register-allocation-in-the-go-compiler.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"clerno","user_is_author":false,"tags":["compilers","go"],"short_id_url":"https://lobste.rs/s/cetldx","comments_url":"https://lobste.rs/s/cetldx/register_allocation_go_compiler_2024"},{"short_id":"34ujdw","created_at":"2025-10-01T03:01:40.000-05:00","title":"Developing a BASIC language interpreter in 2025","url":"https://nanochess.org/ecs_basic.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"spc476","user_is_author":false,"tags":["assembly","retrocomputing"],"short_id_url":"https://lobste.rs/s/34ujdw","comments_url":"https://lobste.rs/s/34ujdw/developing_basic_language_interpreter"},{"short_id":"ufpajh","created_at":"2025-10-01T03:00:11.000-05:00","title":"Category Theory Illustrated - Natural transformations","url":"https://abuseofnotation.github.io/category-theory-illustrated/11_natural_transformations/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"jencelpanic","user_is_author":true,"tags":["haskell","math"],"short_id_url":"https://lobste.rs/s/ufpajh","comments_url":"https://lobste.rs/s/ufpajh/category_theory_illustrated_natural"},{"short_id":"wv735z","created_at":"2025-10-01T01:49:03.000-05:00","title":"Creating an IGCSE Pseudocode Interpreter","url":"https://ezntek.com/posts/creating-an-igcse-pseudocode-interpreter-pt-2-20250913t1349/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"runxiyu","user_is_author":false,"tags":["compilers"],"short_id_url":"https://lobste.rs/s/wv735z","comments_url":"https://lobste.rs/s/wv735z/creating_igcse_pseudocode_interpreter"},{"short_id":"rthlbj","created_at":"2025-10-01T01:19:11.000-05:00","title":"What was the longest time you ever took to return to a software project?","url":"","score":11,"flags":0,"comment_count":7,"description":"\u003cp\u003eRecently, I revisited a code I wrote twenty years ago as a homework during interviews for my first serious job.\nIt was a tiny code base (just about two hundreds lines of code), written in Java with just the standard library.\nThe program did almost nothing – just showed some graph nodes and edges between them and allowed to move the nodes with mouse.\nIt run as a JavaApplet or as a standard desktop application in a window.\nIt was pretty useless, but it helped me to get that job back then.\nAfter twenty years, I fixed few bugs, polished the code a little bit, just for fun and for the joy, that it still works (with today’s Java).\nThen I rewrote it from scratch with some more features -  purely out of curiosity to see how I would write the same thing today.\u003c/p\u003e\n","description_plain":"Recently, I revisited a code I wrote twenty years ago as a homework during interviews for my first serious job.\r\nIt was a tiny code base (just about two hundreds lines of code), written in Java with just the standard library.\r\nThe program did almost nothing – just showed some graph nodes and edges between them and allowed to move the nodes with mouse.\r\nIt run as a JavaApplet or as a standard desktop application in a window.\r\nIt was pretty useless, but it helped me to get that job back then.\r\nAfter twenty years, I fixed few bugs, polished the code a little bit, just for fun and for the joy, that it still works (with today's Java).\r\nThen I rewrote it from scratch with some more features -  purely out of curiosity to see how I would write the same thing today.","submitter_user":"franta","user_is_author":true,"tags":["practices"],"short_id_url":"https://lobste.rs/s/rthlbj","comments_url":"https://lobste.rs/s/rthlbj/what_was_longest_time_you_ever_took_return"},{"short_id":"ka3uqb","created_at":"2025-10-01T00:30:47.000-05:00","title":"Generate HTML conveniently and efficiently with Python generators","url":"https://github.com/pcarbonn/fast_html","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eI slightly edited the original title to underline what is significant about it.\u003c/p\u003e\n\u003cp\u003eA few years back I stumbled upon this library and used it in a project to generate some documentation. I really liked reading the source and it caused me to get to like Python some more and generators in particular.\u003c/p\u003e\n\u003cp\u003eI will add here just two first paragraphs from the README:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003efast_html is a fast, minimalist HTML generator.\u003c/p\u003e\n\u003cp\u003eIt is an alternative to templating engines, like Jinja, for use with, e.g., htmx.\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"I slightly edited the original title to underline what is significant about it.\r\n\r\nA few years back I stumbled upon this library and used it in a project to generate some documentation. I really liked reading the source and it caused me to get to like Python some more and generators in particular.\r\n\r\nI will add here just two first paragraphs from the README:\r\n\r\n\u003e fast_html is a fast, minimalist HTML generator.\r\n\u003e\r\n\u003e It is an alternative to templating engines, like Jinja, for use with, e.g., htmx.","submitter_user":"hawski","user_is_author":false,"tags":["python","web"],"short_id_url":"https://lobste.rs/s/ka3uqb","comments_url":"https://lobste.rs/s/ka3uqb/generate_html_conveniently_efficiently"},{"short_id":"ozikqo","created_at":"2025-10-01T00:00:54.000-05:00","title":"Built-in Mapping for More Powerful, Intuitive Code","url":"https://github.com/mlochbaum/ILanguage/blob/master/doc/BuiltInMapping/BuiltInMapping.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cblockquote\u003e\n\u003cp\u003eI began creating \u003ca href=\"https://github.com/mlochbaum/ILanguage\" rel=\"ugc\"\u003eI\u003c/a\u003e after the stunning realization that my two favorite features of J—rank and forks—were actually the same concept! A paper describing this idea, a generalization of what Haskell calls the Functor typeclass\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eis this link!\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIt assumes no knowledge of any specific language.\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"\u003e I began creating [I](https://github.com/mlochbaum/ILanguage) after the stunning realization that my two favorite features of J—rank and forks—were actually the same concept! A paper describing this idea, a generalization of what Haskell calls the Functor typeclass\r\n\r\nis this link!\r\n\r\n\u003e It assumes no knowledge of any specific language.","submitter_user":"veqq","user_is_author":false,"tags":["compsci"],"short_id_url":"https://lobste.rs/s/ozikqo","comments_url":"https://lobste.rs/s/ozikqo/built_mapping_for_more_powerful"},{"short_id":"fackzy","created_at":"2025-09-30T23:45:31.000-05:00","title":"ngn/k","url":"https://fall.tr/","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","submitter_user":"veqq","user_is_author":false,"tags":["apl"],"short_id_url":"https://lobste.rs/s/fackzy","comments_url":"https://lobste.rs/s/fackzy/ngn_k"},{"short_id":"vh58xf","created_at":"2025-09-30T20:44:30.000-05:00","title":"Programs/utilities (especially small ones) with funny/crude acronyms for their name?","url":"","score":1,"flags":0,"comment_count":2,"description":"\u003cp\u003eAvoiding certain programs whose name/acronym is a slur/otherwise bigoted, of course.\u003c/p\u003e\n\u003cp\u003eClassic example: Broadcast Using This Tool (butt), a program for streaming to an internet radio server. This is a real program that exists.\u003c/p\u003e\n\u003cp\u003eI’ve also always wanted to write my own program with a name that’s some kind of dick joke, but working back from “a funny name” to “any piece of software that could be named with a suitable backronym for that name” is perhaps surprisingly hard.\u003c/p\u003e\n\u003cp\u003eLooking for suggestions on that one. Or your own funny name programs. Or names you’ve seen.\u003c/p\u003e\n","description_plain":"Avoiding certain programs whose name/acronym is a slur/otherwise bigoted, of course.\r\n\r\nClassic example: Broadcast Using This Tool (butt), a program for streaming to an internet radio server. This is a real program that exists.\r\n\r\nI’ve also always wanted to write my own program with a name that’s some kind of dick joke, but working back from “a funny name” to “any piece of software that could be named with a suitable backronym for that name” is perhaps surprisingly hard.\r\n\r\nLooking for suggestions on that one. Or your own funny name programs. Or names you’ve seen.","submitter_user":"dubiouslittlecreature","user_is_author":true,"tags":["ask","practices"],"short_id_url":"https://lobste.rs/s/vh58xf","comments_url":"https://lobste.rs/s/vh58xf/programs_utilities_especially_small"},{"short_id":"rlohwt","created_at":"2025-09-30T17:09:29.000-05:00","title":"RubyGems stewardship: Where we are, what’s changing and how we’ll engage","url":"https://rubycentral.org/news/our-stewardship-where-we-are-whats-changing-and-how-well-engage/","score":10,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"jmillikin","user_is_author":false,"tags":["ruby"],"short_id_url":"https://lobste.rs/s/rlohwt","comments_url":"https://lobste.rs/s/rlohwt/rubygems_stewardship_where_we_are_what_s"},{"short_id":"zyfxo9","created_at":"2025-09-30T17:02:10.000-05:00","title":"Full-Stack Observability with VictoriaMetrics in the OTel Demo","url":"https://victoriametrics.com/blog/victoriametrics-full-stack-observability-otel-demo","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe post walks through the setup, showcases how the unified stack simplifies observability using VictoriaMetrics observability stack.\u003c/p\u003e\n","description_plain":"The post walks through the setup, showcases how the unified stack simplifies observability using VictoriaMetrics observability stack.","submitter_user":"terryfilch","user_is_author":false,"tags":["databases","devops"],"short_id_url":"https://lobste.rs/s/zyfxo9","comments_url":"https://lobste.rs/s/zyfxo9/full_stack_observability_with"},{"short_id":"uda4e6","created_at":"2025-09-30T16:57:19.000-05:00","title":"Diff Algorithms","url":"https://flo.znkr.io/diff/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"susam","user_is_author":false,"tags":["compsci"],"short_id_url":"https://lobste.rs/s/uda4e6","comments_url":"https://lobste.rs/s/uda4e6/diff_algorithms"},{"short_id":"gxdnb7","created_at":"2025-09-30T16:08:02.000-05:00","title":"Bevy 0.17","url":"https://bevy.org/news/bevy-0-17/","score":27,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"BD103","user_is_author":false,"tags":["games","release","rust"],"short_id_url":"https://lobste.rs/s/gxdnb7","comments_url":"https://lobste.rs/s/gxdnb7/bevy_0_17"},{"short_id":"c3cwt7","created_at":"2025-09-30T16:05:26.000-05:00","title":"3 critical TTL patterns for in-memory caching","url":"https://samuelberthe.substack.com/p/3-critical-ttl-patterns-for-in-memory","score":1,"flags":6,"comment_count":0,"description":"","description_plain":"","submitter_user":"samber","user_is_author":true,"tags":["databases","go"],"short_id_url":"https://lobste.rs/s/c3cwt7","comments_url":"https://lobste.rs/s/c3cwt7/3_critical_ttl_patterns_for_memory"},{"short_id":"bdv0hj","created_at":"2025-09-30T16:04:09.000-05:00","title":"Making sure AI serves people and knowledge stays human","url":"https://diff.wikimedia.org/2025/09/30/making-sure-ai-serves-people-and-knowledge-stays-human-wikimedia-foundation-publishes-a-human-rights-impact-assessment-on-the-interaction-of-ai-and-machine-learning-with-wikimedia-projects/","score":2,"flags":1,"comment_count":0,"description":"","description_plain":"","submitter_user":"samber","user_is_author":false,"tags":["ai"],"short_id_url":"https://lobste.rs/s/bdv0hj","comments_url":"https://lobste.rs/s/bdv0hj/making_sure_ai_serves_people_knowledge"},{"short_id":"vgcxcw","created_at":"2025-09-30T15:29:18.000-05:00","title":"Systems Programming with Zig","url":"https://www.manning.com/books/systems-programming-with-zig","score":15,"flags":1,"comment_count":6,"description":"","description_plain":"","submitter_user":"krig","user_is_author":false,"tags":["book","zig"],"short_id_url":"https://lobste.rs/s/vgcxcw","comments_url":"https://lobste.rs/s/vgcxcw/systems_programming_with_zig"},{"short_id":"fcimmd","created_at":"2025-09-30T15:03:19.000-05:00","title":"Organize your Slack channels by “How Often”, not “What”","url":"https://aggressivelyparaphrasing.me/2025/09/30/organize-your-slack-channels-by-how-often-not-what/","score":18,"flags":8,"comment_count":8,"description":"","description_plain":"","submitter_user":"markerz","user_is_author":true,"tags":["practices"],"short_id_url":"https://lobste.rs/s/fcimmd","comments_url":"https://lobste.rs/s/fcimmd/organize_your_slack_channels_by_how_often"},{"short_id":"lm3isi","created_at":"2025-09-30T14:55:31.000-05:00","title":"Glide, an extensible, keyboard-focused web browser","url":"https://blog.craigie.dev/introducing-glide/","score":91,"flags":0,"comment_count":40,"description":"","description_plain":"","submitter_user":"probablyrobert","user_is_author":true,"tags":["release","show"],"short_id_url":"https://lobste.rs/s/lm3isi","comments_url":"https://lobste.rs/s/lm3isi/glide_extensible_keyboard_focused_web"},{"short_id":"mvysit","created_at":"2025-09-30T13:46:07.000-05:00","title":"Postgres as queue","url":"https://leontrolski.github.io/postgres-as-queue.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"topicpartition","user_is_author":false,"tags":["databases","python"],"short_id_url":"https://lobste.rs/s/mvysit","comments_url":"https://lobste.rs/s/mvysit/postgres_as_queue"},{"short_id":"hk8yw5","created_at":"2025-09-30T13:32:59.000-05:00","title":"Steel Bank Common Lisp 2.5.9","url":"https://www.sbcl.org/news.html#2.5.9","score":29,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"dotemacs","user_is_author":false,"tags":["lisp","release"],"short_id_url":"https://lobste.rs/s/hk8yw5","comments_url":"https://lobste.rs/s/hk8yw5/steel_bank_common_lisp_2_5_9"},{"short_id":"cpizty","created_at":"2025-09-30T12:31:28.000-05:00","title":"Shellshock (2014, 2025)","url":"https://dwheeler.com/essays/shellshock.html","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"jmiven","user_is_author":false,"tags":["historical","security"],"short_id_url":"https://lobste.rs/s/cpizty","comments_url":"https://lobste.rs/s/cpizty/shellshock_2014_2025"},{"short_id":"7ypu81","created_at":"2025-09-30T12:28:40.000-05:00","title":"Claude in Cyber Competitions","url":"https://red.anthropic.com/2025/cyber-competitions/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"bryce","user_is_author":false,"tags":["security","vibecoding"],"short_id_url":"https://lobste.rs/s/7ypu81","comments_url":"https://lobste.rs/s/7ypu81/claude_cyber_competitions"},{"short_id":"t4bfie","created_at":"2025-09-30T12:20:48.000-05:00","title":"LiveView Native is ready","url":"https://www.youtube.com/watch?v=9D9LYRKqkhM","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"dunyakirkali","user_is_author":false,"tags":["elixir","video"],"short_id_url":"https://lobste.rs/s/t4bfie","comments_url":"https://lobste.rs/s/t4bfie/liveview_native_is_ready"}]