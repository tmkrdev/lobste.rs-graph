[{"short_id":"vvcazf","short_id_url":"https://lobste.rs/s/vvcazf","created_at":"2025-03-13T08:40:48.000-05:00","title":"WebAssembly from the Ground Up – learn WASM by building a compiler","url":"","score":5,"flags":0,"comment_count":1,"description":"\u003cp\u003eHi!\u003c/p\u003e\n\u003cp\u003eWe (pdubroy \u0026amp; marianoguerra) just launched an online book called WebAssembly from the Ground Up. It’s an online book to learn Wasm by building a simple compiler in JavaScript.\u003c/p\u003e\n\u003cp\u003eThis is the book we wish we’d had 3 years ago. Unlike many WebAssembly resources that focus on use cases and tooling, we wanted a deep dive into how Wasm actually works.\u003c/p\u003e\n\u003cp\u003eWe focus on the core of WebAssembly: the module format and the instruction set. We think the low-level details — the “virtual ISA” — are the most interesting part, and we had the crazy idea that writing a compiler is the best way to learn it.\u003c/p\u003e\n\u003cp\u003eOver the course of the book, you’ll build up two things:\u003c/p\u003e\n\u003cp\u003e1: An “assembler library”, that can be used to produce WebAssembly modules. Here’s an example:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003econst mod = module([\n  typesec([functype([], [])]),\n  funcsec([typeidx(0)]),\n  exportsec([export_('main', exportdesc.func(0))]),\n  codesec([code(func([], [instr.end]))]),\n]);\nreturn Uint8Array.from(mod.flat(Infinity));\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e2: A very simple compiler for a language called Wafer, which looks like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eextern func setPixel(x, y, r, g, b, a);\n\nfunc draw(width, height, t) {\n  let y = 0;\n  while y \u0026lt; height {\n    let x = 0;\n    while x \u0026lt; width {\n      let r = t;\n      let g = x;\n      let b = y;\n      let a = 255;\n      setPixel(x, y, r, g, b, a);\n      x := x + 1;\n    }\n    y := y + 1;\n  }\n  0\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn case you’re not a fan of JavaScript, we’ve already heard of readers who’ve worked through the book in F# and Haskell. :-D\u003c/p\u003e\n\u003cp\u003eYou can check out a sample here: \u003ca href=\"https://wasmgroundup.com/book/contents-sample/\" rel=\"ugc\"\u003ehttps://wasmgroundup.com/book/contents-sample/\u003c/a\u003e — we’d love to hear what you think! There’s also a 25% discount for Lobsters readers — just use the code LOBSTERS25 at checkout.\u003c/p\u003e\n","description_plain":"Hi!\r\n\r\nWe (pdubroy \u0026 marianoguerra) just launched an online book called WebAssembly from the Ground Up. It's an online book to learn Wasm by building a simple compiler in JavaScript.\r\n\r\nThis is the book we wish we'd had 3 years ago. Unlike many WebAssembly resources that focus on use cases and tooling, we wanted a deep dive into how Wasm actually works.\r\n\r\nWe focus on the core of WebAssembly: the module format and the instruction set. We think the low-level details — the \"virtual ISA\" — are the most interesting part, and we had the crazy idea that writing a compiler is the best way to learn it.\r\n\r\nOver the course of the book, you'll build up two things:\r\n\r\n1: An \"assembler library\", that can be used to produce WebAssembly modules. Here's an example:\r\n\r\n    const mod = module([\r\n      typesec([functype([], [])]),\r\n      funcsec([typeidx(0)]),\r\n      exportsec([export_('main', exportdesc.func(0))]),\r\n      codesec([code(func([], [instr.end]))]),\r\n    ]);\r\n    return Uint8Array.from(mod.flat(Infinity));\r\n\r\n2: A very simple compiler for a language called Wafer, which looks like this:\r\n\r\n    extern func setPixel(x, y, r, g, b, a);\r\n    \r\n    func draw(width, height, t) {\r\n      let y = 0;\r\n      while y \u003c height {\r\n        let x = 0;\r\n        while x \u003c width {\r\n          let r = t;\r\n          let g = x;\r\n          let b = y;\r\n          let a = 255;\r\n          setPixel(x, y, r, g, b, a);\r\n          x := x + 1;\r\n        }\r\n        y := y + 1;\r\n      }\r\n      0\r\n    }\r\n\r\nIn case you're not a fan of JavaScript, we've already heard of readers who've worked through the book in F# and Haskell. :-D\r\n\r\nYou can check out a sample here: https://wasmgroundup.com/book/contents-sample/ — we'd love to hear what you think! There's also a 25% discount for Lobsters readers — just use the code LOBSTERS25 at checkout.","comments_url":"https://lobste.rs/s/vvcazf/webassembly_from_ground_up_learn_wasm_by","submitter_user":"marianoguerra","user_is_author":true,"tags":["book","compilers","show","wasm"]},{"short_id":"vanuj2","short_id_url":"https://lobste.rs/s/vanuj2","created_at":"2025-03-13T08:37:10.000-05:00","title":"Smoke test your Django admin site","url":"https://jmduke.com/posts/post/django-admin-changelist-test/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vanuj2/smoke_test_your_django_admin_site","submitter_user":"pushcx","user_is_author":false,"tags":["python","testing","web"]},{"short_id":"ow3d4j","short_id_url":"https://lobste.rs/s/ow3d4j","created_at":"2025-03-13T06:42:56.000-05:00","title":"Almquist shell (ash) variants","url":"https://www.in-ulm.de/~mascheck/various/ash/","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ow3d4j/almquist_shell_ash_variants","submitter_user":"fanf","user_is_author":false,"tags":["unix"]},{"short_id":"sd8mtf","short_id_url":"https://lobste.rs/s/sd8mtf","created_at":"2025-03-13T06:05:48.000-05:00","title":"Xit devlog - optional patches, force push, symlinks","url":"https://radarroark.github.io/xit/devlog-optional-patches.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sd8mtf/xit_devlog_optional_patches_force_push","submitter_user":"miloignis","user_is_author":false,"tags":["vcs"]},{"short_id":"chiije","short_id_url":"https://lobste.rs/s/chiije","created_at":"2025-03-13T05:39:44.000-05:00","title":"My teen years: Porting Small-C to transputer and developing my operating system","url":"https://nanochess.org/bootstrapping_c_os_transputer.html","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/chiije/my_teen_years_porting_small_c_transputer","submitter_user":"lproven","user_is_author":false,"tags":["historical","osdev","retrocomputing"]},{"short_id":"whrdfm","short_id_url":"https://lobste.rs/s/whrdfm","created_at":"2025-03-13T05:23:16.000-05:00","title":"Cursor told me I should learn coding instead of asking it to generate code","url":"https://forum.cursor.com/t/cursor-told-me-i-should-learn-coding-instead-of-asking-it-to-generate-it-limit-of-800-locs/61132","score":15,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/whrdfm/cursor_told_me_i_should_learn_coding","submitter_user":"UkiahSmith","user_is_author":false,"tags":["ai"]},{"short_id":"56ys0f","short_id_url":"https://lobste.rs/s/56ys0f","created_at":"2025-03-13T03:07:44.000-05:00","title":"We should improve libzfs somewhat","url":"https://despairlabs.com/blog/posts/2025-03-12-we-should-improve-libzfs-somewhat/","score":3,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/56ys0f/we_should_improve_libzfs_somewhat","submitter_user":"tomhukins","user_is_author":false,"tags":["api","c"]},{"short_id":"akxfbm","short_id_url":"https://lobste.rs/s/akxfbm","created_at":"2025-03-13T01:35:32.000-05:00","title":"C plus Prolog","url":"https://github.com/needleful/c_plus_prolog","score":9,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/akxfbm/c_plus_prolog","submitter_user":"KnorrFG","user_is_author":false,"tags":["c","plt"]},{"short_id":"azpmu3","short_id_url":"https://lobste.rs/s/azpmu3","created_at":"2025-03-12T19:44:45.000-05:00","title":"Something Is Rotten in the State of Cupertino","url":"https://daringfireball.net/2025/03/something_is_rotten_in_the_state_of_cupertino","score":26,"flags":6,"comment_count":19,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/azpmu3/something_is_rotten_state_cupertino","submitter_user":"carlana","user_is_author":false,"tags":["ai","ios"]},{"short_id":"dzgudd","short_id_url":"https://lobste.rs/s/dzgudd","created_at":"2025-03-12T18:16:07.000-05:00","title":"complexity as entropy","url":"https://explaining.software/archive/complexity-as-entropy/","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dzgudd/complexity_as_entropy","submitter_user":"benl","user_is_author":false,"tags":["philosophy","programming"]},{"short_id":"pgxyi2","short_id_url":"https://lobste.rs/s/pgxyi2","created_at":"2025-03-12T18:15:57.000-05:00","title":"satl: tiny embeddable scripting language","url":"https://codeberg.org/trill/satl","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pgxyi2/satl_tiny_embeddable_scripting_language","submitter_user":"kaimac","user_is_author":false,"tags":["c++","plt","programming"]},{"short_id":"exrq7d","short_id_url":"https://lobste.rs/s/exrq7d","created_at":"2025-03-12T15:02:38.000-05:00","title":"Upgrading Semgrep from OCaml 4 to OCaml 5","url":"https://semgrep.dev/blog/2025/upgrading-semgrep-from-ocaml-4-to-ocaml-5/","score":21,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/exrq7d/upgrading_semgrep_from_ocaml_4_ocaml_5","submitter_user":"pabloest","user_is_author":false,"tags":["ml","performance"]},{"short_id":"itngch","short_id_url":"https://lobste.rs/s/itngch","created_at":"2025-03-12T14:57:07.000-05:00","title":"Bob Nystrom – The Language I Wish Go Was (2010)","url":"https://journal.stuffwithstuff.com/2010/10/21/the-language-i-wish-go-was/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/itngch/bob_nystrom_language_i_wish_go_was_2010","submitter_user":"mond","user_is_author":false,"tags":["go"]},{"short_id":"pua4kr","short_id_url":"https://lobste.rs/s/pua4kr","created_at":"2025-03-12T14:49:27.000-05:00","title":"Traversal-resistant file APIs","url":"https://go.dev/blog/osroot","score":16,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pua4kr/traversal_resistant_file_apis","submitter_user":"freddyb","user_is_author":false,"tags":["go","security"]},{"short_id":"bherlz","short_id_url":"https://lobste.rs/s/bherlz","created_at":"2025-03-12T14:39:29.000-05:00","title":"TypeScript 7: 10x Speedup and the Go Language","url":"https://dev.to/anthonymax/typescript-7-10x-speedup-and-the-go-language-1mkf","score":-1,"flags":6,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bherlz/typescript_7_10x_speedup_go_language","submitter_user":"aanthonymax","user_is_author":true,"tags":["go","javascript"]},{"short_id":"bb8gjl","short_id_url":"https://lobste.rs/s/bb8gjl","created_at":"2025-03-12T14:38:00.000-05:00","title":"Migrate Django ID field from int to big int with minimal downtime","url":"http://charlesoliveira.dev/blog/migrate-django-bigint-field/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bb8gjl/migrate_django_id_field_from_int_big_int","submitter_user":"MatheusRich","user_is_author":false,"tags":["databases","python","web"]},{"short_id":"wpcgq1","short_id_url":"https://lobste.rs/s/wpcgq1","created_at":"2025-03-12T14:33:32.000-05:00","title":"Iconography of the PuTTY tools","url":"https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/putty-icons/","score":12,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wpcgq1/iconography_putty_tools","submitter_user":"calvin","user_is_author":false,"tags":["design","windows"]},{"short_id":"romh86","short_id_url":"https://lobste.rs/s/romh86","created_at":"2025-03-12T14:24:56.000-05:00","title":"Guile Hoot with Fibers","url":"https://afmoreno.srht.site/blog/guile-hoot-fibers.html","score":9,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/romh86/guile_hoot_with_fibers","submitter_user":"dannyob","user_is_author":false,"tags":["lisp","web"]},{"short_id":"ec1z6z","short_id_url":"https://lobste.rs/s/ec1z6z","created_at":"2025-03-12T13:44:55.000-05:00","title":"Inline Evaluation Adventure","url":"https://rigsomelight.com/2025/03/12/inline-eval-adventure.html","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ec1z6z/inline_evaluation_adventure","submitter_user":"bhauman","user_is_author":true,"tags":["games","practices"]},{"short_id":"v8vnjo","short_id_url":"https://lobste.rs/s/v8vnjo","created_at":"2025-03-12T13:35:32.000-05:00","title":"Dropping RISC-V support","url":"https://chimera-linux.org/news/2025/03/dropping-riscv.html","score":31,"flags":0,"comment_count":35,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/v8vnjo/dropping_risc_v_support","submitter_user":"fratti","user_is_author":false,"tags":["hardware","linux"]},{"short_id":"epkigb","short_id_url":"https://lobste.rs/s/epkigb","created_at":"2025-03-12T13:12:22.000-05:00","title":"Gemini Embedding: Generalizable Embeddings from Gemini","url":"https://deepmind.google/research/publications/157741/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/epkigb/gemini_embedding_generalizable","submitter_user":"kaycebasques","user_is_author":false,"tags":["ai"]},{"short_id":"9bgx8t","short_id_url":"https://lobste.rs/s/9bgx8t","created_at":"2025-03-12T13:05:05.000-05:00","title":"Why I stopped everything and started writing C again","url":"https://www.kmx.io/blog/why-stopped-everything-and-started-writing-C-again","score":6,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9bgx8t/why_i_stopped_everything_started_writing","submitter_user":"ucirello","user_is_author":false,"tags":["c","programming"]},{"short_id":"vh3n7k","short_id_url":"https://lobste.rs/s/vh3n7k","created_at":"2025-03-12T12:37:32.000-05:00","title":"The Codebase of a National Lab I Worked At","url":"https://mirawelner.com/posts/fed_code.html","score":8,"flags":1,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vh3n7k/codebase_national_lab_i_worked_at","submitter_user":"MiraWelner","user_is_author":true,"tags":["practices"]},{"short_id":"nno4i5","short_id_url":"https://lobste.rs/s/nno4i5","created_at":"2025-03-12T12:14:16.000-05:00","title":"Carefully But Purposefully Oxidising Ubuntu","url":"https://jnsgr.uk/2025/03/carefully-but-purposefully-oxidising-ubuntu/","score":38,"flags":1,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nno4i5/carefully_purposefully_oxidising","submitter_user":"steveklabnik","user_is_author":false,"tags":["linux","rust"]},{"short_id":"1jwqtt","short_id_url":"https://lobste.rs/s/1jwqtt","created_at":"2025-03-12T12:03:35.000-05:00","title":"Constant-Time Code: The Pessimist Case","url":"https://eprint.iacr.org/2025/435","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1jwqtt/constant_time_code_pessimist_case","submitter_user":"tavianator","user_is_author":false,"tags":["cryptography","programming"]}]