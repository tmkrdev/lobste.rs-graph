[{"short_id":"c6scqf","created_at":"2025-05-21T05:59:56.000-05:00","title":"Erlang/OTP 28.0 Release","url":"https://www.erlang.org/news/180","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"ciprian_craciun","user_is_author":false,"tags":["erlang"],"short_id_url":"https://lobste.rs/s/c6scqf","comments_url":"https://lobste.rs/s/c6scqf/erlang_otp_28_0_release"},{"short_id":"nzioi2","created_at":"2025-05-21T05:36:03.000-05:00","title":"Our Journey Through Linux/Unix Landscapes","url":"https://blog.kalvad.com/our-journey-through-linux-unix-landscapes/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"lproven","user_is_author":false,"tags":["freebsd","linux"],"short_id_url":"https://lobste.rs/s/nzioi2","comments_url":"https://lobste.rs/s/nzioi2/our_journey_through_linux_unix"},{"short_id":"96ttp9","created_at":"2025-05-21T05:14:45.000-05:00","title":"Reading code is still the most effective method to debug multi-thread bug","url":"https://nanxiao.me/en/reading-code-is-still-the-most-effective-method-to-debug-multi-thread-bug/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"nanxiao","user_is_author":true,"tags":["debugging"],"short_id_url":"https://lobste.rs/s/96ttp9","comments_url":"https://lobste.rs/s/96ttp9/reading_code_is_still_most_effective"},{"short_id":"dtvu8f","created_at":"2025-05-21T02:30:05.000-05:00","title":"Building a fast website with the MASH stack in Rust","url":"https://emschwartz.me/building-a-fast-website-with-the-mash-stack-in-rust/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"stchris","user_is_author":false,"tags":["rust","web"],"short_id_url":"https://lobste.rs/s/dtvu8f","comments_url":"https://lobste.rs/s/dtvu8f/building_fast_website_with_mash_stack"},{"short_id":"hcrgp9","created_at":"2025-05-21T01:31:53.000-05:00","title":"Writing into uninitialized buffers in Rust","url":"https://blog.sunfishcode.online/writingintouninitializedbuffersinrust/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"wezm","user_is_author":false,"tags":["rust"],"short_id_url":"https://lobste.rs/s/hcrgp9","comments_url":"https://lobste.rs/s/hcrgp9/writing_into_uninitialized_buffers_rust"},{"short_id":"6wwcpm","created_at":"2025-05-21T00:00:58.000-05:00","title":"$XX^{t}$ Can Be Faster","url":"https://arxiv.org/abs/2505.09814","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"abhi9u","user_is_author":false,"tags":["math"],"short_id_url":"https://lobste.rs/s/6wwcpm","comments_url":"https://lobste.rs/s/6wwcpm/xx_t_can_be_faster"},{"short_id":"xk6znl","created_at":"2025-05-20T20:42:28.000-05:00","title":"If composers were hackers","url":"https://mmapped.blog/posts/18-if-composers-were-hackers","score":8,"flags":1,"comment_count":1,"description":"","description_plain":"","submitter_user":"runxiyu","user_is_author":false,"tags":["culture","plt"],"short_id_url":"https://lobste.rs/s/xk6znl","comments_url":"https://lobste.rs/s/xk6znl/if_composers_were_hackers"},{"short_id":"dmx9e3","created_at":"2025-05-20T19:50:35.000-05:00","title":"apply.coop - Matching people with jobs that fit their values \u0026 passions","url":"https://apply.coop","score":26,"flags":0,"comment_count":6,"description":"","description_plain":"","submitter_user":"blainsmith","user_is_author":true,"tags":["job"],"short_id_url":"https://lobste.rs/s/dmx9e3","comments_url":"https://lobste.rs/s/dmx9e3/apply_coop_matching_people_with_jobs_fit"},{"short_id":"uyhgth","created_at":"2025-05-20T18:29:25.000-05:00","title":"CleanStack: A New Dual-Stack for Defending Against Stack-Based Memory Corruption Attacks","url":"https://arxiv.org/pdf/2503.16950","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"fro","user_is_author":false,"tags":["pdf","security"],"short_id_url":"https://lobste.rs/s/uyhgth","comments_url":"https://lobste.rs/s/uyhgth/cleanstack_new_dual_stack_for_defending"},{"short_id":"le8kkw","created_at":"2025-05-20T18:21:41.000-05:00","title":"Why we’d like to compile Gren to WebAssembly, and how we’ll get there","url":"https://www.youtube.com/watch?v=OCpzEw4T5bA","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"blaix","user_is_author":false,"tags":["video","wasm"],"short_id_url":"https://lobste.rs/s/le8kkw","comments_url":"https://lobste.rs/s/le8kkw/why_we_d_like_compile_gren_webassembly_how"},{"short_id":"dgb3kt","created_at":"2025-05-20T18:16:43.000-05:00","title":"Google I/O 2025","url":"https://io.google/2025/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"Helithumper","user_is_author":false,"tags":["event","vibecoding"],"short_id_url":"https://lobste.rs/s/dgb3kt","comments_url":"https://lobste.rs/s/dgb3kt/google_i_o_2025"},{"short_id":"srdmcg","created_at":"2025-05-20T17:19:29.000-05:00","title":"Litestream: Revamped","url":"https://fly.io/blog/litestream-revamped/","score":16,"flags":0,"comment_count":7,"description":"","description_plain":"","submitter_user":"refi64","user_is_author":false,"tags":["databases"],"short_id_url":"https://lobste.rs/s/srdmcg","comments_url":"https://lobste.rs/s/srdmcg/litestream_revamped"},{"short_id":"glf6w3","created_at":"2025-05-20T17:00:23.000-05:00","title":"FreeBSD and NetBSD Zig Cross-Compilation Support","url":"https://ziglang.org/devlog/2025/#2025-05-20","score":15,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"jaypatelani","user_is_author":false,"tags":["freebsd","netbsd"],"short_id_url":"https://lobste.rs/s/glf6w3","comments_url":"https://lobste.rs/s/glf6w3/freebsd_netbsd_zig_cross_compilation"},{"short_id":"bl1b9q","created_at":"2025-05-20T16:43:07.000-05:00","title":"KrebsOnSecurity Hit With Near-Record 6.3 Tbps DDoS","url":"https://krebsonsecurity.com/2025/05/krebsonsecurity-hit-with-near-record-6-3-tbps-ddos/","score":12,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"gmem","user_is_author":false,"tags":["security"],"short_id_url":"https://lobste.rs/s/bl1b9q","comments_url":"https://lobste.rs/s/bl1b9q/krebsonsecurity_hit_with_near_record_6_3"},{"short_id":"br46nz","created_at":"2025-05-20T15:49:25.000-05:00","title":"Diagram Make Language","url":"https://github.com/cuichaox/dml","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"veqq","user_is_author":false,"tags":["lisp"],"short_id_url":"https://lobste.rs/s/br46nz","comments_url":"https://lobste.rs/s/br46nz/diagram_make_language"},{"short_id":"08lasm","created_at":"2025-05-20T15:43:52.000-05:00","title":"From Nitro to Junction: Testing in Production at Scale","url":"https://www.junctionlabs.io/blog/nitro-testing-in-production","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"sp6370","user_is_author":false,"tags":["devops","testing"],"short_id_url":"https://lobste.rs/s/08lasm","comments_url":"https://lobste.rs/s/08lasm/from_nitro_junction_testing_production"},{"short_id":"wjqu4m","created_at":"2025-05-20T15:18:51.000-05:00","title":"How do you use the Tag System?","url":"","score":3,"flags":0,"comment_count":3,"description":"\u003cp\u003eThe primary purpose of tags is \u003ca href=\"https://lobste.rs/filters\" rel=\"ugc\"\u003efiltering\u003c/a\u003e stories out of your feed (even without an account) to improve the site’s signal : noise ratio, though the number of applied filters seems surprisingly low. Filtering even applies when using the site as a \u003ca href=\"https://lobste.rs/s/jg3eet\" rel=\"ugc\"\u003emailing list\u003c/a\u003e or via rss combinations like \u003ca href=\"https://lobste.rs/t/programming,audio.rss\" rel=\"ugc\"\u003ehttps://lobste.rs/t/programming,audio.rss\u003c/a\u003e .)\u003c/p\u003e\n\u003cp\u003eOther uses include looking stories up \u003ca href=\"https://lobste.rs/t/elixir\" rel=\"ugc\"\u003eby tag\u003c/a\u003e, category or \u003ca href=\"https://lobste.rs/t/javascript,go\" rel=\"ugc\"\u003egroups\u003c/a\u003e and refining search results e.g. \u003ccode\u003etag:ruby sqlite\u003c/code\u003e (especially relevant for \u003ca href=\"https://lobste.rs/s/7q3ntz/tag_proposal_concatenative\" rel=\"ugc\"\u003econcatenative\u003c/a\u003e whose languages’ generic names make for poor searches.)\u003c/p\u003e\n\u003cp\u003eSometimes lacking a good tag makes posting a story \u003ca href=\"https://lobste.rs/s/xiwy8s/tag_proposal_gleam#c_dmxwun\" rel=\"ugc\"\u003edifficult\u003c/a\u003e e.g. due to a vague title. Personally, I face this issue with gofai techniques, often posting them under the implementation family lisp.\u003c/p\u003e\n\u003cp\u003eWhat other browsing/research workflows do you have or wish for?\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eTo paraphrase \u003ca href=\"https://lobste.rs/~pushcx\" rel=\"ugc\"\u003e@pushcx\u003c/a\u003e : tags should be useful, easy for submitters to choose, things people want to follow on rss, discuss or ignore. If fewer tags are easier to apply and fit our interests better, great. If python2-\u0026gt;3 went even worse and both remained, we’d carry on with separate tags so the communities could ignore each other.\u003c/p\u003e\n\u003cp\u003eThe guiding light is increasing users’ signal, not taxonomic purity, so a whole language family APL is fine alone while in the python2 : python3. The tags should match cohesive communities not stretch across them. Now, there is some historical baggage in tag choice, resulting in (recently) unused tags. Some example thoughts:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003edragonflybsd (mostly tagged in conjunction with other bsds! Yet many filter it!)\u003c/li\u003e\n\u003cli\u003eimmumos (only a few stories per year, could be unix - are the filterers unix “subscribers”?)\u003c/li\u003e\n\u003cli\u003ejs and nodejs (I don’t use js and can’t judge, but this seems odd - I wonder whether front-end and backend/server would be useful, letting people e.g. ignore python servers. Filtering combinators e.g. js+backend would be too niche and require technical changes, outside of scope.)\u003c/li\u003e\n\u003cli\u003eobjectivec (I don’t know it, but don’t think it fits under c/c++. It’d be “easier” if we had a c-alternative tag for hare, odin, d, objectivec. It seems like people would block filter those. But at what point would e.g. zig lovers want to not read about the others? What kind of curiosity-flows do people have there?)\u003c/li\u003e\n\u003cli\u003eplt (dumpling grounds, e.g. logic programming sometimes makes it there or under ai… Similarly, paradigms without a family tag like Forth often go to plt. “Practices” type advice also often goes here. To a large extent, it means “no tag”\u003c/li\u003e\n\u003cli\u003eclojure (I actually only learned this existed a few months ago, I’d tagged multiple clojure stories with lisp…)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAggregate \u003ca href=\"https://lobste.rs/about#queries\" rel=\"ugc\"\u003equeries\u003c/a\u003e can partially disambiguate these (e.g. comparing the popularity of rss combinator combinations for different bsds, whether visitors of one bsd filter others etc.)\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eI want to improve tagging benefits and accuracy. I’m collecting ideas to query around and refit them to current use.\u003c/p\u003e\n","description_plain":"The primary purpose of tags is [filtering](https://lobste.rs/filters) stories out of your feed (even without an account) to improve the site's signal : noise ratio, though the number of applied filters seems surprisingly low. Filtering even applies when using the site as a [mailing list](https://lobste.rs/s/jg3eet) or via rss combinations like https://lobste.rs/t/programming,audio.rss .)\r\n\r\nOther uses include looking stories up [by tag](https://lobste.rs/t/elixir), category or [groups](https://lobste.rs/t/javascript,go) and refining search results e.g. `tag:ruby sqlite` (especially relevant for [concatenative](https://lobste.rs/s/7q3ntz/tag_proposal_concatenative) whose languages' generic names make for poor searches.)\r\n\r\nSometimes lacking a good tag makes posting a story [difficult](https://lobste.rs/s/xiwy8s/tag_proposal_gleam#c_dmxwun) e.g. due to a vague title. Personally, I face this issue with gofai techniques, often posting them under the implementation family lisp.\r\n\r\nWhat other browsing/research workflows do you have or wish for?\r\n\r\n-----\r\n\r\nTo paraphrase @pushcx : tags should be useful, easy for submitters to choose, things people want to follow on rss, discuss or ignore. If fewer tags are easier to apply and fit our interests better, great. If python2-\u003e3 went even worse and both remained, we'd carry on with separate tags so the communities could ignore each other.\r\n\r\nThe guiding light is increasing users' signal, not taxonomic purity, so a whole language family APL is fine alone while in the python2 : python3. The tags should match cohesive communities not stretch across them. Now, there is some historical baggage in tag choice, resulting in (recently) unused tags. Some example thoughts:\r\n\r\n- dragonflybsd (mostly tagged in conjunction with other bsds! Yet many filter it!)\r\n- immumos (only a few stories per year, could be unix - are the filterers unix \"subscribers\"?)\r\n- js and nodejs (I don't use js and can't judge, but this seems odd - I wonder whether front-end and backend/server would be useful, letting people e.g. ignore python servers. Filtering combinators e.g. js+backend would be too niche and require technical changes, outside of scope.)\r\n- objectivec (I don't know it, but don't think it fits under c/c++. It'd be \"easier\" if we had a c-alternative tag for hare, odin, d, objectivec. It seems like people would block filter those. But at what point would e.g. zig lovers want to not read about the others? What kind of curiosity-flows do people have there?)\r\n- plt (dumpling grounds, e.g. logic programming sometimes makes it there or under ai... Similarly, paradigms without a family tag like Forth often go to plt. \"Practices\" type advice also often goes here. To a large extent, it means \"no tag\"\r\n- clojure (I actually only learned this existed a few months ago, I'd tagged multiple clojure stories with lisp...)\r\n\r\nAggregate [queries](https://lobste.rs/about#queries) can partially disambiguate these (e.g. comparing the popularity of rss combinator combinations for different bsds, whether visitors of one bsd filter others etc.)\r\n\r\n----\r\n\r\nI want to improve tagging benefits and accuracy. I'm collecting ideas to query around and refit them to current use.","submitter_user":"veqq","user_is_author":true,"tags":["meta"],"short_id_url":"https://lobste.rs/s/wjqu4m","comments_url":"https://lobste.rs/s/wjqu4m/how_do_you_use_tag_system"},{"short_id":"aowulr","created_at":"2025-05-20T15:11:26.000-05:00","title":"When rethinking a codebase is better than a workaround","url":"https://sniffnet.net/news/rethink-over-workaround/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"GyulyVGC","user_is_author":true,"tags":["education","practices","rust"],"short_id_url":"https://lobste.rs/s/aowulr","comments_url":"https://lobste.rs/s/aowulr/when_rethinking_codebase_is_better_than"},{"short_id":"fgqn0n","created_at":"2025-05-20T14:42:43.000-05:00","title":"The AI Engineering Stack","url":"https://newsletter.pragmaticengineer.com/p/the-ai-engineering-stack","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"brokebit","user_is_author":false,"tags":["ai","practices"],"short_id_url":"https://lobste.rs/s/fgqn0n","comments_url":"https://lobste.rs/s/fgqn0n/ai_engineering_stack"},{"short_id":"z5cyl1","created_at":"2025-05-20T14:36:41.000-05:00","title":"The Ingredients of a Productive Monorepo","url":"https://blog.swgillespie.me/posts/monorepo-ingredients/","score":15,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"ajdecon","user_is_author":false,"tags":["vcs"],"short_id_url":"https://lobste.rs/s/z5cyl1","comments_url":"https://lobste.rs/s/z5cyl1/ingredients_productive_monorepo"},{"short_id":"qykhwv","created_at":"2025-05-20T14:14:18.000-05:00","title":"Running Pokemon Red on my GitHub Profile","url":"https://farlow.dev/2025/05/19/pokemon-on-github-profile","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"stepbrobd","user_is_author":false,"tags":["api","games","python"],"short_id_url":"https://lobste.rs/s/qykhwv","comments_url":"https://lobste.rs/s/qykhwv/running_pokemon_red_on_my_github_profile"},{"short_id":"juveen","created_at":"2025-05-20T14:02:33.000-05:00","title":"Optional Rust-In-FreeBSD Support May 2025 Status Report","url":"https://hardenedbsd.org/article/shawn-webb/2025-05-20/optional-rust-freebsd-support-may-2025-status-report","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"lattera","user_is_author":true,"tags":["freebsd","rust"],"short_id_url":"https://lobste.rs/s/juveen","comments_url":"https://lobste.rs/s/juveen/optional_rust_freebsd_support_may_2025"},{"short_id":"7q3ntz","created_at":"2025-05-20T13:55:53.000-05:00","title":"Tag Proposal: concatenative","url":"","score":34,"flags":0,"comment_count":1,"description":"\u003cp\u003eCategory: Languages\nName: concatenative\nDescription:  stackbased languages like Forth, Factor, Joy\u003c/p\u003e\n\u003cp\u003eA tag would be really useful, because these languages have unhelpful names like forth, factor, joy so most search hits are… not relevant. A tag would let us even find these stories and disambiguate them in the feed!\u003c/p\u003e\n\u003cp\u003eSome recent stories:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/s75rfx/sapf_forth_like_language_for_audio\" rel=\"ugc\"\u003ehttps://lobste.rs/s/s75rfx/sapf_forth_like_language_for_audio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/ejlu9h/moving_forth_series_on_writing_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ejlu9h/moving_forth_series_on_writing_forth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/p5gpeq/original_chipwits_forth_code_open\" rel=\"ugc\"\u003ehttps://lobste.rs/s/p5gpeq/original_chipwits_forth_code_open\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/s75rfx/sapf_forth_like_language_for_audio\" rel=\"ugc\"\u003ehttps://lobste.rs/s/s75rfx/sapf_forth_like_language_for_audio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/n9vtqo/my_history_with_forth_stack_machines_2010\" rel=\"ugc\"\u003ehttps://lobste.rs/s/n9vtqo/my_history_with_forth_stack_machines_2010\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/ckhnig/forth_is_best_programming_language_for\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ckhnig/forth_is_best_programming_language_for\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/zolh4m/macro_forth_forth_implemented_compile\" rel=\"ugc\"\u003ehttps://lobste.rs/s/zolh4m/macro_forth_forth_implemented_compile\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/iyncoq/bytecode_interpreters_for_tiny\" rel=\"ugc\"\u003ehttps://lobste.rs/s/iyncoq/bytecode_interpreters_for_tiny\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/j23p0w/starting_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/j23p0w/starting_forth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/ruynmz/getting_started_with_duskos\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ruynmz/getting_started_with_duskos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/8doqmk/meow5_concatenative_assembly\" rel=\"ugc\"\u003ehttps://lobste.rs/s/8doqmk/meow5_concatenative_assembly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/ajcrtw/forth_bitcoin_miner_for_pc_game_boy\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ajcrtw/forth_bitcoin_miner_for_pc_game_boy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/tjrbzv/thinking_forth_language_philosophy_for\" rel=\"ugc\"\u003ehttps://lobste.rs/s/tjrbzv/thinking_forth_language_philosophy_for\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/nvtnqv/retro_modern_pragmatic_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/nvtnqv/retro_modern_pragmatic_forth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSome old:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/p5tuau/milliforth_forth_422_bytes_smallest_real\" rel=\"ugc\"\u003ehttps://lobste.rs/s/p5tuau/milliforth_forth_422_bytes_smallest_real\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/shvfr8/zen_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/shvfr8/zen_forth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/2yhcjo/space_related_applications_forth_1998\" rel=\"ugc\"\u003ehttps://lobste.rs/s/2yhcjo/space_related_applications_forth_1998\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/mul1cs/conway_s_game_life_apl_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/mul1cs/conway_s_game_life_apl_forth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/v2rnti/low_fat_computing_1998\" rel=\"ugc\"\u003ehttps://lobste.rs/s/v2rnti/low_fat_computing_1998\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/e9f2qe/forth_language_language_design\" rel=\"ugc\"\u003ehttps://lobste.rs/s/e9f2qe/forth_language_language_design\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/zeyn75/bootstrapping_forth_40_lines_lua_code\" rel=\"ugc\"\u003ehttps://lobste.rs/s/zeyn75/bootstrapping_forth_40_lines_lua_code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/ea86a2/dave_s_forth_talk_2023\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ea86a2/dave_s_forth_talk_2023\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/doghrl/what_hell_is_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/doghrl/what_hell_is_forth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/mcgvak/frustration_escaping_turing_tar_pit_with\" rel=\"ugc\"\u003ehttps://lobste.rs/s/mcgvak/frustration_escaping_turing_tar_pit_with\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/4piifs/1x_forth_by_charles_moore_4_13_99\" rel=\"ugc\"\u003ehttps://lobste.rs/s/4piifs/1x_forth_by_charles_moore_4_13_99\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/axqvhe/beginner_s_guide_forth_2001\" rel=\"ugc\"\u003ehttps://lobste.rs/s/axqvhe/beginner_s_guide_forth_2001\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/cfwnku/moonforth_tinker_with_interactive_dcpu\" rel=\"ugc\"\u003ehttps://lobste.rs/s/cfwnku/moonforth_tinker_with_interactive_dcpu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/z2zt99/my_history_with_forth_stack_machines\" rel=\"ugc\"\u003ehttps://lobste.rs/s/z2zt99/my_history_with_forth_stack_machines\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/ncxkzy/forth_hacker_s_language\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ncxkzy/forth_hacker_s_language\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/kj6dpe/thoughtful_programming_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/kj6dpe/thoughtful_programming_forth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/h42ayv/recommended_reading_starting_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/h42ayv/recommended_reading_starting_forth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eA prior proposal was made 4 years ago: \u003ca href=\"https://lobste.rs/s/ijpdeu/tag_proposal_forth\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ijpdeu/tag_proposal_forth\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/6muxzs/instruction_level_just_time_programming\" rel=\"ugc\"\u003eInstruction level just-in-time programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/wmuvxw/tails_tiny_forth_core_written_as_hack_for\" rel=\"ugc\"\u003eTails! A tiny Forth core\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/n9zdj2/forth_programming_language_history\" rel=\"ugc\"\u003eForth Programming Language History\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/qugymq/celebrate_star_wars_day_with_some_forth\" rel=\"ugc\"\u003eCelebrate Star Wars Day With Some Forth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/phyl4f/book_quackery\" rel=\"ugc\"\u003eThe Book Of Quackery\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/fkfoms/j1_small_forth_cpu_core_for_fpgas\" rel=\"ugc\"\u003eA Small Forth CPU Core For FPGAs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/kld8ph/why_concatenative_programming_matters\" rel=\"ugc\"\u003eWhy concatenative programming matters (2012)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/rqc2sj/introducing_dawn_part_1\" rel=\"ugc\"\u003eIntroducing Dawn\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/yu633k/min_language_welcome_min_programming\" rel=\"ugc\"\u003emin language - Welcome to the min programming language\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://benhoyt.com/writings/count-words/\" rel=\"ugc\"\u003ePerformance comparison: counting words in Python, Go, C++, C, AWK, Forth, and Rust\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/ih7bub/uxn_8_bit_virtual_stack_machine\" rel=\"ugc\"\u003eUxn: An 8-bit virtual stack machine\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lobste.rs/s/amcxyg/simple_forth\" rel=\"ugc\"\u003eSimple Forth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"Category: Languages\r\nName: concatenative\r\nDescription:  stackbased languages like Forth, Factor, Joy\r\n\r\nA tag would be really useful, because these languages have unhelpful names like forth, factor, joy so most search hits are... not relevant. A tag would let us even find these stories and disambiguate them in the feed!\r\n\r\nSome recent stories:\r\n\r\n- https://lobste.rs/s/s75rfx/sapf_forth_like_language_for_audio\r\n- https://lobste.rs/s/ejlu9h/moving_forth_series_on_writing_forth\r\n- https://lobste.rs/s/p5gpeq/original_chipwits_forth_code_open\r\n- https://lobste.rs/s/s75rfx/sapf_forth_like_language_for_audio\r\n- https://lobste.rs/s/n9vtqo/my_history_with_forth_stack_machines_2010\r\n- https://lobste.rs/s/ckhnig/forth_is_best_programming_language_for\r\n- https://lobste.rs/s/zolh4m/macro_forth_forth_implemented_compile\r\n- https://lobste.rs/s/iyncoq/bytecode_interpreters_for_tiny\r\n- https://lobste.rs/s/j23p0w/starting_forth\r\n- https://lobste.rs/s/ruynmz/getting_started_with_duskos\r\n- https://lobste.rs/s/8doqmk/meow5_concatenative_assembly\r\n- https://lobste.rs/s/ajcrtw/forth_bitcoin_miner_for_pc_game_boy\r\n- https://lobste.rs/s/tjrbzv/thinking_forth_language_philosophy_for\r\n- https://lobste.rs/s/nvtnqv/retro_modern_pragmatic_forth\r\n\r\nSome old:\r\n- https://lobste.rs/s/p5tuau/milliforth_forth_422_bytes_smallest_real\r\n- https://lobste.rs/s/shvfr8/zen_forth\r\n- https://lobste.rs/s/2yhcjo/space_related_applications_forth_1998\r\n- https://lobste.rs/s/mul1cs/conway_s_game_life_apl_forth\r\n- https://lobste.rs/s/v2rnti/low_fat_computing_1998\r\n- https://lobste.rs/s/e9f2qe/forth_language_language_design\r\n- https://lobste.rs/s/zeyn75/bootstrapping_forth_40_lines_lua_code\r\n- https://lobste.rs/s/ea86a2/dave_s_forth_talk_2023\r\n- https://lobste.rs/s/doghrl/what_hell_is_forth\r\n- https://lobste.rs/s/mcgvak/frustration_escaping_turing_tar_pit_with\r\n- https://lobste.rs/s/4piifs/1x_forth_by_charles_moore_4_13_99\r\n- https://lobste.rs/s/axqvhe/beginner_s_guide_forth_2001\r\n- https://lobste.rs/s/cfwnku/moonforth_tinker_with_interactive_dcpu\r\n- https://lobste.rs/s/z2zt99/my_history_with_forth_stack_machines\r\n- https://lobste.rs/s/ncxkzy/forth_hacker_s_language\r\n- https://lobste.rs/s/kj6dpe/thoughtful_programming_forth\r\n- https://lobste.rs/s/h42ayv/recommended_reading_starting_forth\r\n\r\nA prior proposal was made 4 years ago: https://lobste.rs/s/ijpdeu/tag_proposal_forth\r\n\r\n- [Instruction level just-in-time programming](https://lobste.rs/s/6muxzs/instruction_level_just_time_programming)\r\n- [Tails! A tiny Forth core](https://lobste.rs/s/wmuvxw/tails_tiny_forth_core_written_as_hack_for)\r\n- [Forth Programming Language History](https://lobste.rs/s/n9zdj2/forth_programming_language_history)\r\n- [Celebrate Star Wars Day With Some Forth](https://lobste.rs/s/qugymq/celebrate_star_wars_day_with_some_forth)\r\n- [The Book Of Quackery](https://lobste.rs/s/phyl4f/book_quackery)\r\n- [A Small Forth CPU Core For FPGAs](https://lobste.rs/s/fkfoms/j1_small_forth_cpu_core_for_fpgas)\r\n- [Why concatenative programming matters (2012)](https://lobste.rs/s/kld8ph/why_concatenative_programming_matters)\r\n- [Introducing Dawn](https://lobste.rs/s/rqc2sj/introducing_dawn_part_1)\r\n- [min language - Welcome to the min programming language](https://lobste.rs/s/yu633k/min_language_welcome_min_programming)\r\n- [Performance comparison: counting words in Python, Go, C++, C, AWK, Forth, and Rust](https://benhoyt.com/writings/count-words/)\r\n- [Uxn: An 8-bit virtual stack machine](https://lobste.rs/s/ih7bub/uxn_8_bit_virtual_stack_machine)\r\n- [Simple Forth](https://lobste.rs/s/amcxyg/simple_forth)","submitter_user":"veqq","user_is_author":true,"tags":["meta"],"short_id_url":"https://lobste.rs/s/7q3ntz","comments_url":"https://lobste.rs/s/7q3ntz/tag_proposal_concatenative"},{"short_id":"gycfey","created_at":"2025-05-20T13:51:22.000-05:00","title":"Where is the Java language going?","url":"https://www.youtube.com/watch?v=1dY57CDxR14","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"dbremner","user_is_author":false,"tags":["java","video"],"short_id_url":"https://lobste.rs/s/gycfey","comments_url":"https://lobste.rs/s/gycfey/where_is_java_language_going"},{"short_id":"0v2f97","created_at":"2025-05-20T13:39:04.000-05:00","title":"Finding hard 24 puzzles with planner programming","url":"https://buttondown.com/hillelwayne/archive/finding-hard-24-puzzles-with-planner-programming/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"hwayne","user_is_author":true,"tags":["games","plt"],"short_id_url":"https://lobste.rs/s/0v2f97","comments_url":"https://lobste.rs/s/0v2f97/finding_hard_24_puzzles_with_planner"}]