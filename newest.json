[{"short_id":"fwr4xh","short_id_url":"https://lobste.rs/s/fwr4xh","created_at":"2025-03-14T08:34:33.000-05:00","title":"My Scammer Girlfriend: Baiting A Romance Fraudster","url":"https://www.bentasker.co.uk/posts/blog/security/seducing-a-romance-scammer.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fwr4xh/my_scammer_girlfriend_baiting_romance","submitter_user":"knl","user_is_author":false,"tags":["email","security"]},{"short_id":"pecrwr","short_id_url":"https://lobste.rs/s/pecrwr","created_at":"2025-03-14T08:16:04.000-05:00","title":"HashChain: A very fast online factor-based sublinear exact-matching string search algorithm","url":"https://github.com/nishihatapalmer/HashChain","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pecrwr/hashchain_very_fast_online_factor_based","submitter_user":"fanf","user_is_author":false,"tags":["performance"]},{"short_id":"c7t7kz","short_id_url":"https://lobste.rs/s/c7t7kz","created_at":"2025-03-14T08:01:17.000-05:00","title":"A look at Firefox forks","url":"https://lwn.net/Articles/1012453/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/c7t7kz/look_at_firefox_forks","submitter_user":"repl","user_is_author":false,"tags":["browsers"]},{"short_id":"zu67of","short_id_url":"https://lobste.rs/s/zu67of","created_at":"2025-03-14T07:20:26.000-05:00","title":"PAM unixsock","url":"https://miek.nl/2025/march/14/pam-unixsock/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zu67of/pam_unixsock","submitter_user":"fanf","user_is_author":false,"tags":["security","unix"]},{"short_id":"qkqyf4","short_id_url":"https://lobste.rs/s/qkqyf4","created_at":"2025-03-14T06:49:39.000-05:00","title":"An introduction to Magit, an Emacs mode for Git","url":"https://www.masteringemacs.org/article/introduction-magit-emacs-mode-git","score":15,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qkqyf4/introduction_magit_emacs_mode_for_git","submitter_user":"repl","user_is_author":false,"tags":["emacs"]},{"short_id":"ybqek7","short_id_url":"https://lobste.rs/s/ybqek7","created_at":"2025-03-14T06:45:15.000-05:00","title":"TinyKVM: The Fastest Sandbox","url":"https://info.varnish-software.com/blog/tinykvm-the-fastest-sandbox","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ybqek7/tinykvm_fastest_sandbox","submitter_user":"giffengrabber","user_is_author":false,"tags":["linux","virtualization"]},{"short_id":"m8cbkw","short_id_url":"https://lobste.rs/s/m8cbkw","created_at":"2025-03-14T05:55:25.000-05:00","title":"It’s Not As Simple As “Use A Memory Safe Language\" - YouTube","url":"https://www.youtube.com/watch?v=iQ-eTaW6-cM","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/m8cbkw/it_s_not_as_simple_as_use_memory_safe","submitter_user":"olegkovalov","user_is_author":false,"tags":["rust","video"]},{"short_id":"l4tc7w","short_id_url":"https://lobste.rs/s/l4tc7w","created_at":"2025-03-14T05:27:58.000-05:00","title":"What are you doing this weekend?","url":"","score":2,"flags":0,"comment_count":7,"description":"\u003cp\u003eFeel free to tell what you plan on doing this weekend and even ask for help or feedback.\u003c/p\u003e\n\u003cp\u003ePlease keep in mind it’s more than OK to do nothing at all too!\u003c/p\u003e\n","description_plain":"Feel free to tell what you plan on doing this weekend and even ask for help or feedback.\r\n\r\nPlease keep in mind it’s more than OK to do nothing at all too!","comments_url":"https://lobste.rs/s/l4tc7w/what_are_you_doing_this_weekend","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"emajqr","short_id_url":"https://lobste.rs/s/emajqr","created_at":"2025-03-14T05:22:09.000-05:00","title":"Enhancing CA Practices: Key Updates in Mozilla Root Store Policy, v3.0","url":"https://blog.mozilla.org/security/2025/03/12/enhancing-ca-practices-key-updates-in-mozilla-root-store-policy-v3-0/","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/emajqr/enhancing_ca_practices_key_updates","submitter_user":"freddyb","user_is_author":false,"tags":["browsers","cryptography","security"]},{"short_id":"ix1yqo","short_id_url":"https://lobste.rs/s/ix1yqo","created_at":"2025-03-14T03:33:52.000-05:00","title":"i-cant-believe-its-not-webusb: Hacking around lack of WebUSB support in Firefox","url":"https://github.com/ArcaneNibble/i-cant-believe-its-not-webusb","score":14,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ix1yqo/i_cant_believe_its_not_webusb_hacking","submitter_user":"jeanthomas","user_is_author":false,"tags":["hardware","web"]},{"short_id":"lomwgf","short_id_url":"https://lobste.rs/s/lomwgf","created_at":"2025-03-14T03:32:49.000-05:00","title":"coq-of-rust: Formal verification tool for Rust","url":"https://github.com/formal-land/coq-of-rust","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lomwgf/coq_rust_formal_verification_tool_for","submitter_user":"jeanthomas","user_is_author":false,"tags":["formalmethods","rust"]},{"short_id":"ve6gyy","short_id_url":"https://lobste.rs/s/ve6gyy","created_at":"2025-03-14T02:09:00.000-05:00","title":"Recursion kills: The story behind CVE-2024-8176 / Expat 2.7.0 released, includes security fixes","url":"https://blog.hartwork.org/posts/expat-2-7-0-released/","score":11,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ve6gyy/recursion_kills_story_behind_cve_2024","submitter_user":"hanno","user_is_author":false,"tags":["c","programming","security"]},{"short_id":"m1ngf0","short_id_url":"https://lobste.rs/s/m1ngf0","created_at":"2025-03-14T00:25:45.000-05:00","title":"Memory Corruption in Delphi","url":"https://blog.includesecurity.com/2025/03/memory-corruption-in-delphi/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/m1ngf0/memory_corruption_delphi","submitter_user":"freddyb","user_is_author":false,"tags":["security"]},{"short_id":"3l1xef","short_id_url":"https://lobste.rs/s/3l1xef","created_at":"2025-03-13T18:48:54.000-05:00","title":"Functional Tests As A Tree Of Continuations (2010)","url":"https://www.evanmiller.org/functional-tests-as-a-tree-of-continuations.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3l1xef/functional_tests_as_tree_continuations","submitter_user":"vrthra","user_is_author":false,"tags":["testing"]},{"short_id":"lkdgd4","short_id_url":"https://lobste.rs/s/lkdgd4","created_at":"2025-03-13T18:30:12.000-05:00","title":"Typestate Programming","url":"https://docs.rust-embedded.org/book/static-guarantees/typestate-programming.html","score":4,"flags":1,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lkdgd4/typestate_programming","submitter_user":"kaycebasques","user_is_author":false,"tags":["formalmethods","hardware","plt","rust"]},{"short_id":"ozgd5s","short_id_url":"https://lobste.rs/s/ozgd5s","created_at":"2025-03-13T17:58:42.000-05:00","title":"Can we communally deprecate git checkout?","url":"https://mirawelner.com/posts/checkout.html","score":46,"flags":0,"comment_count":50,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ozgd5s/can_we_communally_deprecate_git_checkout","submitter_user":"MiraWelner","user_is_author":true,"tags":["rant","vcs"]},{"short_id":"lni15k","short_id_url":"https://lobste.rs/s/lni15k","created_at":"2025-03-13T17:36:40.000-05:00","title":"What Programming Concepts do you Struggle to Grok or Use in Production?","url":"","score":12,"flags":0,"comment_count":11,"description":"\u003cp\u003eFor me, type magic whether Haskelly or Idrisy dependent types evades me. A lot of modern comp sci concentrates on types, which I find a slog to get through, in spite of some \u003ca href=\"https://lobste.rs/s/11k4ri/how_should_i_read_type_system_notation\" rel=\"ugc\"\u003ehelps\u003c/a\u003e. I’ve worked through a few books on the topic and admire how Rust renders some errors unnecessary or how types handle some types of control flow, but in practice I only use them to optimize performance in Lisps and give compiler warnings and don’t see the value of modeling my own problems/domains with them.\u003c/p\u003e\n\u003cp\u003eI’ve also long struggled to appreciate why/when you’d opt for \u003ca href=\"https://lobste.rs/s/yyju3z/when_is_oop_more_useful_modelling\" rel=\"ugc\"\u003eOOP\u003c/a\u003e outside of GUIs.\u003c/p\u003e\n\u003cp\u003eI never understood the use of NoSQL nor ORMs (although opinion’s now against them) and embrace relational algebra through Datalog and Prolog.\u003c/p\u003e\n\u003cp\u003eFor about a year, I thought supply chain attacks were mostly just popular paranoia due to a recent case which was caught instantly, but I saw the light through preventative measures like vendoring which offer stability from other threats too.\u003c/p\u003e\n\u003cp\u003eI don’t understand the purpose of a fair few functions in the Go std lib e.g. the presence of both the \u003ccode\u003eTrimLeft\u003c/code\u003e and \u003ccode\u003eCutPrefix\u003c/code\u003e families vs. e.g. the Split family. It just seems inconsistent and strange to have so many in the normal string API which are easily implemented out of the same base operations in the few cases where necessary.\u003c/p\u003e\n","description_plain":"For me, type magic whether Haskelly or Idrisy dependent types evades me. A lot of modern comp sci concentrates on types, which I find a slog to get through, in spite of some [helps](https://lobste.rs/s/11k4ri/how_should_i_read_type_system_notation). I've worked through a few books on the topic and admire how Rust renders some errors unnecessary or how types handle some types of control flow, but in practice I only use them to optimize performance in Lisps and give compiler warnings and don't see the value of modeling my own problems/domains with them.\r\n\r\nI've also long struggled to appreciate why/when you'd opt for [OOP](https://lobste.rs/s/yyju3z/when_is_oop_more_useful_modelling) outside of GUIs.\r\n\r\nI never understood the use of NoSQL nor ORMs (although opinion's now against them) and embrace relational algebra through Datalog and Prolog.\r\n\r\nFor about a year, I thought supply chain attacks were mostly just popular paranoia due to a recent case which was caught instantly, but I saw the light through preventative measures like vendoring which offer stability from other threats too.\r\n\r\nI don't understand the purpose of a fair few functions in the Go std lib e.g. the presence of both the `TrimLeft` and `CutPrefix` families vs. e.g. the Split family. It just seems inconsistent and strange to have so many in the normal string API which are easily implemented out of the same base operations in the few cases where necessary.","comments_url":"https://lobste.rs/s/lni15k/what_programming_concepts_do_you","submitter_user":"veqq","user_is_author":true,"tags":["ask","compsci","programming"]},{"short_id":"ubwuzz","short_id_url":"https://lobste.rs/s/ubwuzz","created_at":"2025-03-13T16:54:54.000-05:00","title":"High-performance computing, with much less code","url":"https://news.mit.edu/2025/high-performance-computing-with-much-less-code-0313","score":9,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ubwuzz/high_performance_computing_with_much","submitter_user":"iamwil","user_is_author":false,"tags":["programming"]},{"short_id":"t2bmsy","short_id_url":"https://lobste.rs/s/t2bmsy","created_at":"2025-03-13T16:49:42.000-05:00","title":"fsync() after open() is an elaborate no-op","url":"https://despairlabs.com/blog/posts/2025-03-13-fsync-after-open-is-an-elaborate-no-op/","score":9,"flags":0,"comment_count":15,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/t2bmsy/fsync_after_open_is_elaborate_no_op","submitter_user":"janerik","user_is_author":false,"tags":["databases"]},{"short_id":"p4xdsv","short_id_url":"https://lobste.rs/s/p4xdsv","created_at":"2025-03-13T15:06:14.000-05:00","title":"IO devices and latency","url":"https://planetscale.com/blog/io-devices-and-latency","score":14,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p4xdsv/io_devices_latency","submitter_user":"fanf","user_is_author":false,"tags":["performance","visualization"]},{"short_id":"mzbcpk","short_id_url":"https://lobste.rs/s/mzbcpk","created_at":"2025-03-13T13:31:07.000-05:00","title":"Xata Agent: AI agent expert in PostgreSQL","url":"https://github.com/xataio/agent","score":4,"flags":1,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mzbcpk/xata_agent_ai_agent_expert_postgresql","submitter_user":"tsg","user_is_author":true,"tags":["ai","databases"]},{"short_id":"gvgmth","short_id_url":"https://lobste.rs/s/gvgmth","created_at":"2025-03-13T12:14:48.000-05:00","title":"Choosing Languages","url":"https://steveklabnik.com/writing/choosing-languages/","score":104,"flags":1,"comment_count":99,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/gvgmth/choosing_languages","submitter_user":"cadey","user_is_author":false,"tags":["culture","programming"]},{"short_id":"nyzi57","short_id_url":"https://lobste.rs/s/nyzi57","created_at":"2025-03-13T12:11:24.000-05:00","title":"Let the stagger experiments begin","url":"https://nerdy.dev/sibling-index","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nyzi57/let_stagger_experiments_begin","submitter_user":"MatheusRich","user_is_author":false,"tags":["css"]},{"short_id":"odzx0k","short_id_url":"https://lobste.rs/s/odzx0k","created_at":"2025-03-13T11:54:12.000-05:00","title":"Curry: A Truly Integrated Functional Logic Programming Language","url":"https://curry-lang.org","score":19,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/odzx0k/curry_truly_integrated_functional_logic","submitter_user":"4ad","user_is_author":false,"tags":["haskell","plt"]},{"short_id":"dakizz","short_id_url":"https://lobste.rs/s/dakizz","created_at":"2025-03-13T10:40:10.000-05:00","title":"It's not cheating if you write the video game solver yourself","url":"https://robertheaton.com/cocoon/","score":16,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dakizz/it_s_not_cheating_if_you_write_video_game","submitter_user":"hwayne","user_is_author":false,"tags":["compsci","games"]}]