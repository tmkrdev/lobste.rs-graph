[{"short_id":"hh9khg","short_id_url":"https://lobste.rs/s/hh9khg","created_at":"2025-02-25T12:07:33.000-06:00","title":"View types redux and abstract fields","url":"https://smallcultfollowing.com/babysteps/blog/2025/02/25/view-types-redux/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hh9khg/view_types_redux_abstract_fields","submitter_user":"lonjil","user_is_author":false,"tags":["rust"]},{"short_id":"ziqnjk","short_id_url":"https://lobste.rs/s/ziqnjk","created_at":"2025-02-25T11:07:25.000-06:00","title":"AI Killed The Tech Interview. Now What?","url":"https://kanenarraway.com/posts/ai-killed-the-tech-interview-now-what/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ziqnjk/ai_killed_tech_interview_now_what","submitter_user":"MatheusRich","user_is_author":false,"tags":["ai","practices"]},{"short_id":"o1golw","short_id_url":"https://lobste.rs/s/o1golw","created_at":"2025-02-25T09:17:29.000-06:00","title":"Turbocharging V8 with mutable heap numbers","url":"https://v8.dev/blog/mutable-heap-number","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/o1golw/turbocharging_v8_with_mutable_heap","submitter_user":"pubkey","user_is_author":false,"tags":["javascript","nodejs"]},{"short_id":"swtkwg","short_id_url":"https://lobste.rs/s/swtkwg","created_at":"2025-02-25T09:15:18.000-06:00","title":"Why and How I Version My Blog","url":"https://rishikeshs.com/blog-version/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/swtkwg/why_how_i_version_my_blog","submitter_user":"rishikesh","user_is_author":true,"tags":["web"]},{"short_id":"vpfqm2","short_id_url":"https://lobste.rs/s/vpfqm2","created_at":"2025-02-25T08:29:58.000-06:00","title":"Gleam, coming from Erlang","url":"https://olano.dev/blog/gleam-coming-from-erlang","score":12,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vpfqm2/gleam_coming_from_erlang","submitter_user":"facundoolano","user_is_author":true,"tags":["erlang","gleam"]},{"short_id":"8nx9v3","short_id_url":"https://lobste.rs/s/8nx9v3","created_at":"2025-02-25T07:56:49.000-06:00","title":"Embedding Python in Elixir, it's Fine","url":"https://dashbit.co/blog/running-python-in-elixir-its-fine","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8nx9v3/embedding_python_elixir_it_s_fine","submitter_user":"aos","user_is_author":false,"tags":["elixir","erlang","python"]},{"short_id":"q2kme9","short_id_url":"https://lobste.rs/s/q2kme9","created_at":"2025-02-25T07:55:35.000-06:00","title":"Zone maps, or “queries go brrr”","url":"https://blog.spiraldb.com/zone-maps-or-queries-go-brrr/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/q2kme9/zone_maps_queries_go_brrr","submitter_user":"danking","user_is_author":true,"tags":["databases"]},{"short_id":"ztnx8h","short_id_url":"https://lobste.rs/s/ztnx8h","created_at":"2025-02-25T07:41:18.000-06:00","title":"OpenStories -  A syndication format for distributing IG like stories","url":"https://openstories.fyi/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ztnx8h/openstories_syndication_format_for","submitter_user":"rishikesh","user_is_author":false,"tags":["web"]},{"short_id":"7u7hxw","short_id_url":"https://lobste.rs/s/7u7hxw","created_at":"2025-02-25T07:32:26.000-06:00","title":"Rust edition 2024 annotated","url":"https://bertptrs.nl/2025/02/23/rust-edition-2024-annotated.html","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7u7hxw/rust_edition_2024_annotated","submitter_user":"emschwartz","user_is_author":false,"tags":["rust"]},{"short_id":"f4oemt","short_id_url":"https://lobste.rs/s/f4oemt","created_at":"2025-02-25T07:19:12.000-06:00","title":"Reviving an Old Kindle Paperwhite 7th Gen","url":"https://terminalbytes.com/reviving-kindle-paperwhite-7th-gen/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/f4oemt/reviving_old_kindle_paperwhite_7th_gen","submitter_user":"mtlynch","user_is_author":false,"tags":["hardware","programming"]},{"short_id":"76ajns","short_id_url":"https://lobste.rs/s/76ajns","created_at":"2025-02-25T06:24:08.000-06:00","title":"ReScript: A Better Typed JavaScript?","url":"https://www.youtube.com/watch?v=yKl2fSdnw7w","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/76ajns/rescript_better_typed_javascript","submitter_user":"mediremi","user_is_author":false,"tags":["ml","plt","video"]},{"short_id":"2ekqcs","short_id_url":"https://lobste.rs/s/2ekqcs","created_at":"2025-02-25T06:04:12.000-06:00","title":"Why Common Lisp","url":"https://kingcons.io/notes/common-lisp.html","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2ekqcs/why_common_lisp","submitter_user":"amoroso","user_is_author":false,"tags":["lisp"]},{"short_id":"d1kb0u","short_id_url":"https://lobste.rs/s/d1kb0u","created_at":"2025-02-25T05:35:04.000-06:00","title":"Comfortable in uncertainty, with Barry O'Reilly","url":"https://kodsnack.se/631/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/d1kb0u/comfortable_uncertainty_with_barry_o","submitter_user":"krig","user_is_author":false,"tags":["audio","philosophy"]},{"short_id":"xslm1t","short_id_url":"https://lobste.rs/s/xslm1t","created_at":"2025-02-25T05:23:16.000-06:00","title":"zlib-rs is faster than C","url":"https://trifectatech.org/blog/zlib-rs-is-faster-than-c/","score":11,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xslm1t/zlib_rs_is_faster_than_c","submitter_user":"folkertdev","user_is_author":true,"tags":["c","performance","rust"]},{"short_id":"hyhkxi","short_id_url":"https://lobste.rs/s/hyhkxi","created_at":"2025-02-25T05:15:49.000-06:00","title":"Mixing up Public and Private Keys in OpenID Connect deployments","url":"https://blog.hboeck.de/archives/909-Mixing-up-Public-and-Private-Keys-in-OpenID-Connect-deployments.html","score":16,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hyhkxi/mixing_up_public_private_keys_openid","submitter_user":"hanno","user_is_author":true,"tags":["security","web"]},{"short_id":"1w3r1q","short_id_url":"https://lobste.rs/s/1w3r1q","created_at":"2025-02-25T04:38:17.000-06:00","title":"Testing types in TypeScript","url":"https://2ality.com/2025/02/testing-types-typescript.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1w3r1q/testing_types_typescript","submitter_user":"adamshaylor","user_is_author":false,"tags":["javascript","testing"]},{"short_id":"vvk41t","short_id_url":"https://lobste.rs/s/vvk41t","created_at":"2025-02-25T04:37:08.000-06:00","title":"Gem Shop: A Vulnerable Rails 8 App for Security Education","url":"https://paraxial.io/blog/gem-shop","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vvk41t/gem_shop_vulnerable_rails_8_app_for","submitter_user":"felixyz","user_is_author":false,"tags":["elixir","security"]},{"short_id":"noeevm","short_id_url":"https://lobste.rs/s/noeevm","created_at":"2025-02-25T04:04:29.000-06:00","title":"\"The closer to the train station, the worse the kebab\"","url":"https://www.jmspae.se/write-ups/kebabs-train-stations/","score":27,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/noeevm/closer_train_station_worse_kebab","submitter_user":"acatton","user_is_author":false,"tags":["visualization"]},{"short_id":"qxohuy","short_id_url":"https://lobste.rs/s/qxohuy","created_at":"2025-02-25T04:00:06.000-06:00","title":"The HP-35","url":"http://codex99.com/design/the-hp35.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qxohuy/hp_35","submitter_user":"bitfield","user_is_author":false,"tags":["hardware","historical"]},{"short_id":"wrpt6v","short_id_url":"https://lobste.rs/s/wrpt6v","created_at":"2025-02-25T03:57:02.000-06:00","title":"What would happen if we didn't use TCP or UDP?","url":"https://github.com/Hawzen/hdp","score":42,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wrpt6v/what_would_happen_if_we_didn_t_use_tcp_udp","submitter_user":"knl","user_is_author":false,"tags":["networking"]},{"short_id":"ige5d6","short_id_url":"https://lobste.rs/s/ige5d6","created_at":"2025-02-25T03:10:11.000-06:00","title":"Tcl/Tk application binaries through Go","url":"https://wiki.tcl-lang.org/page/Tcl%2FTk+application+binaries+through+Go","score":19,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ige5d6/tcl_tk_application_binaries_through_go","submitter_user":"recursion","user_is_author":false,"tags":["programming"]},{"short_id":"39gbln","short_id_url":"https://lobste.rs/s/39gbln","created_at":"2025-02-24T23:30:02.000-06:00","title":"The future of fast code: giving hardware what it wants","url":"https://www.youtube.com/watch?v=vU3ryvZYlkk","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/39gbln/future_fast_code_giving_hardware_what_it","submitter_user":"jamii","user_is_author":false,"tags":["compilers","hardware","plt","video"]},{"short_id":"ogpirh","short_id_url":"https://lobste.rs/s/ogpirh","created_at":"2025-02-24T23:10:33.000-06:00","title":"Debunking the Myth of Join Ordering: Toward Robust SQL Analytics","url":"https://arxiv.org/pdf/2502.15181","score":1,"flags":0,"comment_count":1,"description":"\u003cp\u003eJoin order optimization is critical in achieving good query performance. Despite decades of research and practice, modern query optimizers could still generate inferior join plans that are orders of magnitude slower than optimal. Existing research on robust query processing often lacks theoretical guarantees on join-order robustness while sacrificing query performance. In this paper, we rediscover the recent Predicate Transfer technique from a robustness point of view. We introduce two new algorithms, LargestRoot and SafeSubjoin, and then propose Robust Predicate Transfer (RPT) that is provably robust against arbitrary join orders of an acyclic query. We integrated Robust Predicate Transfer with DuckDB, a state-of-the-art analytical database, and evaluated against all the queries in TPC-H, JOB, and TPC-DS benchmarks. Our experimental results show that RPT improves join-order robustness by orders of magnitude compared to the baseline. With RPT, the largest ratio between the maximum and minimum execution time out of random join orders for a single acyclic query is only 1.6x (the ratio is close to 1 for most evaluated queries). Meanwhile, applying RPT also improves the end-to-end query performance by 1.5x (per-query geometric mean). We hope that this work sheds light on solving the practical join ordering problem.\u003c/p\u003e\n","description_plain":"Join order optimization is critical in achieving good query performance. Despite decades of research and practice, modern query optimizers could still generate inferior join plans that are orders of magnitude slower than optimal. Existing research on robust query processing often lacks theoretical guarantees on join-order robustness while sacrificing query performance. In this paper, we rediscover the recent Predicate Transfer technique from a robustness point of view. We introduce two new algorithms, LargestRoot and SafeSubjoin, and then propose Robust Predicate Transfer (RPT) that is provably robust against arbitrary join orders of an acyclic query. We integrated Robust Predicate Transfer with DuckDB, a state-of-the-art analytical database, and evaluated against all the queries in TPC-H, JOB, and TPC-DS benchmarks. Our experimental results show that RPT improves join-order robustness by orders of magnitude compared to the baseline. With RPT, the largest ratio between the maximum and minimum execution time out of random join orders for a single acyclic query is only 1.6x (the ratio is close to 1 for most evaluated queries). Meanwhile, applying RPT also improves the end-to-end query performance by 1.5x (per-query geometric mean). We hope that this work sheds light on solving the practical join ordering problem.","comments_url":"https://lobste.rs/s/ogpirh/debunking_myth_join_ordering_toward","submitter_user":"jamii","user_is_author":false,"tags":["databases"]},{"short_id":"r8lrfk","short_id_url":"https://lobste.rs/s/r8lrfk","created_at":"2025-02-24T23:09:40.000-06:00","title":"Other kinds of talks","url":"https://www.scattered-thoughts.net/writing/other-kinds-of-talks/","score":31,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/r8lrfk/other_kinds_talks","submitter_user":"jamii","user_is_author":true,"tags":["event"]},{"short_id":"e8cnqe","short_id_url":"https://lobste.rs/s/e8cnqe","created_at":"2025-02-24T22:47:19.000-06:00","title":"Smart Pointers Can't Solve Use-After-Free","url":"http://jacko.io/smart_pointers.html","score":19,"flags":1,"comment_count":12,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/e8cnqe/smart_pointers_can_t_solve_use_after_free","submitter_user":"av","user_is_author":false,"tags":["c++","rust"]}]