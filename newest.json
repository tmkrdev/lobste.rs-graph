[{"short_id":"x7lve1","short_id_url":"https://lobste.rs/s/x7lve1","created_at":"2025-01-26T03:53:59.000-06:00","title":"FoA: Ferris-on-Air: An experimental Wi-Fi stack for rust on the ESP32","url":"https://github.com/esp32-open-mac/FoA","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/x7lve1/foa_ferris_on_air_experimental_wi_fi_stack","submitter_user":"bitfield","user_is_author":false,"tags":["networking","rust"]},{"short_id":"mkmtrp","short_id_url":"https://lobste.rs/s/mkmtrp","created_at":"2025-01-26T02:58:52.000-06:00","title":"Fixing my monitor's power button","url":"https://www.lkhrs.com/blog/2025/monitor-repair/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mkmtrp/fixing_my_monitor_s_power_button","submitter_user":"jummo","user_is_author":false,"tags":["hardware"]},{"short_id":"rp5edn","short_id_url":"https://lobste.rs/s/rp5edn","created_at":"2025-01-26T01:43:32.000-06:00","title":"Much Faster Suspend \u0026 Resume For Some Systems With Linux 6.14","url":"https://www.phoronix.com/news/Linux-6.14-ACPI","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rp5edn/much_faster_suspend_resume_for_some","submitter_user":"laktak","user_is_author":false,"tags":["linux"]},{"short_id":"bmwj0a","short_id_url":"https://lobste.rs/s/bmwj0a","created_at":"2025-01-25T20:19:29.000-06:00","title":"Exploring the new \"go tool\" support in Go 1.24","url":"https://blog.howardjohn.info/posts/go-tools-command/","score":9,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bmwj0a/exploring_new_go_tool_support_go_1_24","submitter_user":"telemachus","user_is_author":false,"tags":["go"]},{"short_id":"atihtk","short_id_url":"https://lobste.rs/s/atihtk","created_at":"2025-01-25T18:48:45.000-06:00","title":"snac2 - A simple, minimalistic ActivityPub instance written in portable C","url":"https://codeberg.org/grunfink/snac2","score":14,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/atihtk/snac2_simple_minimalistic_activitypub","submitter_user":"edwardloveall","user_is_author":false,"tags":["c","distributed","web"]},{"short_id":"ciyxdv","short_id_url":"https://lobste.rs/s/ciyxdv","created_at":"2025-01-25T18:32:00.000-06:00","title":"Engineers don't make public squares. People do","url":"https://cpf.sh/blog/2025/01/25/engineers-dont-make-public-squares-people-do","score":2,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ciyxdv/engineers_don_t_make_public_squares","submitter_user":"inverse","user_is_author":false,"tags":["culture"]},{"short_id":"0whmah","short_id_url":"https://lobste.rs/s/0whmah","created_at":"2025-01-25T17:02:37.000-06:00","title":"Supreme Sexp System - SSS - a Lisp machine adventure","url":"https://codeberg.org/jjba23/sss","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0whmah/supreme_sexp_system_sss_lisp_machine","submitter_user":"veqq","user_is_author":false,"tags":["lisp","osdev"]},{"short_id":"o2hhjc","short_id_url":"https://lobste.rs/s/o2hhjc","created_at":"2025-01-25T16:22:25.000-06:00","title":"What happened to the text colour?","url":"","score":45,"flags":0,"comment_count":11,"description":"\u003cp\u003eCan the primary text colour please go back to what it was? The text being white (with the site in dark mode) is too harsh against the pitch-black bakground. Higher contrast is not always better.\u003c/p\u003e\n\u003cp\u003eTYVM!\u003c/p\u003e\n\u003cp\u003eIf it’s just me then please ignore, but I did check Safari too and it looks the same as Chrome.\u003c/p\u003e\n","description_plain":"Can the primary text colour please go back to what it was? The text being white (with the site in dark mode) is too harsh against the pitch-black bakground. Higher contrast is not always better.\r\n\r\nTYVM!\r\n\r\nIf it's just me then please ignore, but I did check Safari too and it looks the same as Chrome.","comments_url":"https://lobste.rs/s/o2hhjc/what_happened_text_colour","submitter_user":"vosper","user_is_author":true,"tags":["ask","meta"]},{"short_id":"j7chkt","short_id_url":"https://lobste.rs/s/j7chkt","created_at":"2025-01-25T14:26:26.000-06:00","title":"The invalid 68030 instruction that accidentally allowed the Mac Classic II to successfully boot up","url":"https://www.downtowndougbrown.com/2025/01/the-invalid-68030-instruction-that-accidentally-allowed-the-mac-classic-ii-to-successfully-boot-up/","score":25,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j7chkt/invalid_68030_instruction_accidentally","submitter_user":"calvin","user_is_author":false,"tags":["assembly","debugging","reversing"]},{"short_id":"jpdmbb","short_id_url":"https://lobste.rs/s/jpdmbb","created_at":"2025-01-25T12:50:36.000-06:00","title":"Making an SNES Game the Way Nintendo Intended","url":"https://www.youtube.com/watch?v=kYLJLJkVfLk","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jpdmbb/making_snes_game_way_nintendo_intended","submitter_user":"linkdd","user_is_author":false,"tags":["programming","retrocomputing","video"]},{"short_id":"1vgfey","short_id_url":"https://lobste.rs/s/1vgfey","created_at":"2025-01-25T12:09:13.000-06:00","title":"SDL 3.2.0","url":"https://github.com/libsdl-org/SDL/releases/tag/release-3.2.0","score":24,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1vgfey/sdl_3_2_0","submitter_user":"reezer","user_is_author":false,"tags":["release"]},{"short_id":"vmyk7d","short_id_url":"https://lobste.rs/s/vmyk7d","created_at":"2025-01-25T11:35:35.000-06:00","title":"Composable SQL","url":"https://borretti.me/article/composable-sql","score":13,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vmyk7d/composable_sql","submitter_user":"emschwartz","user_is_author":false,"tags":["databases","plt"]},{"short_id":"0kmpkv","short_id_url":"https://lobste.rs/s/0kmpkv","created_at":"2025-01-25T10:34:50.000-06:00","title":"Updated FreeBSD Bhyve Companion Tools","url":"https://vermaden.wordpress.com/2024/06/23/freebsd-bhyve-companion-tools/","score":4,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0kmpkv/updated_freebsd_bhyve_companion_tools","submitter_user":"vermaden","user_is_author":true,"tags":["freebsd","virtualization"]},{"short_id":"zol11z","short_id_url":"https://lobste.rs/s/zol11z","created_at":"2025-01-25T10:33:28.000-06:00","title":"Use Monoids for Construction","url":"https://reasonablypolymorphic.com/blog/use-monoids/index.html","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zol11z/use_monoids_for_construction","submitter_user":"felixyz","user_is_author":false,"tags":["haskell","programming"]},{"short_id":"qjzguh","short_id_url":"https://lobste.rs/s/qjzguh","created_at":"2025-01-25T08:38:21.000-06:00","title":"The fizzbuzz that did not get me the job","url":"https://kranga.notion.site/The-fizzbuzz-that-did-not-get-me-the-job-180e7c22ef3b80c3a386f7f8de720ac7","score":85,"flags":1,"comment_count":37,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qjzguh/fizzbuzz_did_not_get_me_job","submitter_user":"lproven","user_is_author":false,"tags":["javascript","plt","programming"]},{"short_id":"qsytzj","short_id_url":"https://lobste.rs/s/qsytzj","created_at":"2025-01-25T08:31:45.000-06:00","title":"Unix Print Driver Fun","url":"https://jholloway.dev/posts/print-driver-fun/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qsytzj/unix_print_driver_fun","submitter_user":"jummo","user_is_author":false,"tags":["freebsd"]},{"short_id":"4rfoaj","short_id_url":"https://lobste.rs/s/4rfoaj","created_at":"2025-01-25T03:03:22.000-06:00","title":"C++26: pack indexing","url":"https://www.sandordargo.com/blog/2025/01/22/cpp26-pack-indexing","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4rfoaj/c_26_pack_indexing","submitter_user":"raymii","user_is_author":false,"tags":["c++"]},{"short_id":"isrnzi","short_id_url":"https://lobste.rs/s/isrnzi","created_at":"2025-01-25T02:23:32.000-06:00","title":"Life pro tip: Oracle Linux is the best local VM for MacBooks","url":"https://xeiaso.net/notes/2025/k8s-dev-mac-oracle-linux/","score":28,"flags":0,"comment_count":27,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/isrnzi/life_pro_tip_oracle_linux_is_best_local_vm","submitter_user":"intarga","user_is_author":false,"tags":["linux","mac"]},{"short_id":"sr126x","short_id_url":"https://lobste.rs/s/sr126x","created_at":"2025-01-25T01:00:15.000-06:00","title":"Tutorials on Tinygrad","url":"https://mesozoic-egg.github.io/tinygrad-notes/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sr126x/tutorials_on_tinygrad","submitter_user":"nalzok","user_is_author":false,"tags":["compilers"]},{"short_id":"fibb44","short_id_url":"https://lobste.rs/s/fibb44","created_at":"2025-01-25T00:42:24.000-06:00","title":"Regular Expressions which query Oracles","url":"https://arxiv.org/abs/2410.13262","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fibb44/regular_expressions_which_query_oracles","submitter_user":"agnishom","user_is_author":false,"tags":["formalmethods"]},{"short_id":"wzevin","short_id_url":"https://lobste.rs/s/wzevin","created_at":"2025-01-24T21:35:19.000-06:00","title":"Trying out Zed after more than a decade of Vim/Neovim","url":"https://sgoel.dev/posts/trying-out-zed-after-more-than-a-decade-of-vim-neovim/","score":20,"flags":0,"comment_count":36,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wzevin/trying_out_zed_after_more_than_decade_vim","submitter_user":"cgrinds","user_is_author":false,"tags":["editors"]},{"short_id":"2r41of","short_id_url":"https://lobste.rs/s/2r41of","created_at":"2025-01-24T16:45:34.000-06:00","title":"The Drunken Plagiarists - Working with Co-pilots","url":"https://queue.acm.org/detail.cfm?id=3711675\u0026doi=10.1145%2F3711675","score":13,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/2r41of/drunken_plagiarists_working_with_co","submitter_user":"drp","user_is_author":false,"tags":["ai","rant"]},{"short_id":"line1v","short_id_url":"https://lobste.rs/s/line1v","created_at":"2025-01-24T16:09:44.000-06:00","title":"VIC-20 Elite","url":"https://vic20elite.wordpress.com/","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/line1v/vic_20_elite","submitter_user":"classichasclass","user_is_author":false,"tags":["games","retrocomputing"]},{"short_id":"r3hhuz","short_id_url":"https://lobste.rs/s/r3hhuz","created_at":"2025-01-24T15:44:09.000-06:00","title":"Restoring Trust in Online Communication in a Post-LLM Era","url":"","score":6,"flags":0,"comment_count":18,"description":"\u003cp\u003eI have been thinking a lot about how this recent LLM-explosion affects the way the internet works, and one worrying aspect is a loss of trust that the content was written by a fellow human being.\u003c/p\u003e\n\u003cp\u003eI believe that content produced by bots should be clearly labeled/marked as such. Unfortunately given the incentives at play this is not a feasible solution, so I would choose the next best version, verified humans’ content should be labeled (similarly to Twitter’s old blue checks), all across the internet.\u003c/p\u003e\n\u003cp\u003eI don’t have all the technical details worked out, but let me give a summary of one potential model.\u003c/p\u003e\n\u003cp\u003eIt would be basically a simple API that would accept a website-user pair, and return whether it is a verified human being. For the verification algorithm I’m thinking of a chain of trust, similar to Lobste.rs’s invitation feature. That would also help scale out the “real-world verification” process, I can easily vouch for a couple of people, but not for hundreds/thousands of users. Also, could aid in banning a network of malicious users (e.g. someone inviting a lot of accounts that turned out to be bots, more on this later). Maybe a public key could also be registered for a database entry, so that platformless content could also be validated by signing.\u003c/p\u003e\n\u003cp\u003eIn the early, growing phase, it could be as simple as a browser extension that given a website it supports would simply insert a checkmark next to the usernames of verified users.\u003c/p\u003e\n\u003cp\u003eWho can be considered verified is not a trivial question either. It definitely has to be private, and we wouldn’t want to link together a single person’s multiple accounts (neither within a single website, or multiple ones) as that might even end up exposing someone’s identity. Maybe the simple way of semi-anonymous users asking for an invitation from already verified users, who briefly review their comment history would be a sufficient gate for now. Perhaps higher certainty levels could be differentiated later, e.g. a public figure on a platform.\u003c/p\u003e\n\u003cp\u003eModeration is a necessary feature, perhaps something as simple as being able to flag users with questionable content (guidelines have to be written, but I believe that comments (or parts of them) that are written by AI but marked as such, as well as certain non-marked uses are more than fine) and after multiple issues their validation might be revoked (either just removed from the database, or adding another state to the above boolean function that would mark such “users” on websites as bots). Other metrics could also be used to make a decision, such as post-frequency.\u003c/p\u003e\n\u003cp\u003eAll in all, user verification can arguably accept some false positives/negatives and the database doesn’t have to be completely in sync, so it is highly cache-able and can be served from many different servers, so scaling should not be an issue.\u003c/p\u003e\n\u003cp\u003eI would have liked to post a working POC here, but I am interested in its reception, and I’m certain that there are many aspects I haven’t thought of.\u003c/p\u003e\n","description_plain":"I have been thinking a lot about how this recent LLM-explosion affects the way the internet works, and one worrying aspect is a loss of trust that the content was written by a fellow human being. \r\n\r\nI believe that content produced by bots should be clearly labeled/marked as such. Unfortunately given the incentives at play this is not a feasible solution, so I would choose the next best version, verified humans' content should be labeled (similarly to Twitter's old blue checks), all across the internet.\r\n\r\nI don't have all the technical details worked out, but let me give a summary of one potential model. \r\n\r\nIt would be basically a simple API that would accept a website-user pair, and return whether it is a verified human being. For the verification algorithm I'm thinking of a chain of trust, similar to Lobste.rs's invitation feature. That would also help scale out the \"real-world verification\" process, I can easily vouch for a couple of people, but not for hundreds/thousands of users. Also, could aid in banning a network of malicious users (e.g. someone inviting a lot of accounts that turned out to be bots, more on this later). Maybe a public key could also be registered for a database entry, so that platformless content could also be validated by signing.\r\n\r\nIn the early, growing phase, it could be as simple as a browser extension that given a website it supports would simply insert a checkmark next to the usernames of verified users. \r\n\r\nWho can be considered verified is not a trivial question either. It definitely has to be private, and we wouldn't want to link together a single person's multiple accounts (neither within a single website, or multiple ones) as that might even end up exposing someone's identity. Maybe the simple way of semi-anonymous users asking for an invitation from already verified users, who briefly review their comment history would be a sufficient gate for now. Perhaps higher certainty levels could be differentiated later, e.g. a public figure on a platform.\r\n\r\nModeration is a necessary feature, perhaps something as simple as being able to flag users with questionable content (guidelines have to be written, but I believe that comments (or parts of them) that are written by AI but marked as such, as well as certain non-marked uses are more than fine) and after multiple issues their validation might be revoked (either just removed from the database, or adding another state to the above boolean function that would mark such \"users\" on websites as bots). Other metrics could also be used to make a decision, such as post-frequency. \r\n\r\nAll in all, user verification can arguably accept some false positives/negatives and the database doesn't have to be completely in sync, so it is highly cache-able and can be served from many different servers, so scaling should not be an issue.\r\n\r\nI would have liked to post a working POC here, but I am interested in its reception, and I'm certain that there are many aspects I haven't thought of.","comments_url":"https://lobste.rs/s/r3hhuz/restoring_trust_online_communication","submitter_user":"gf0","user_is_author":true,"tags":["ai"]},{"short_id":"xrsg56","short_id_url":"https://lobste.rs/s/xrsg56","created_at":"2025-01-24T13:01:10.000-06:00","title":"Alibaba, Datadog, and Quesma Join Forces on Go Compile-Time Instrumentation","url":"https://opentelemetry.io/blog/2025/go-compile-time-instrumentation/","score":5,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xrsg56/alibaba_datadog_quesma_join_forces_on_go","submitter_user":"ucirello","user_is_author":false,"tags":["go"]}]