[{"short_id":"ohdqzz","short_id_url":"https://lobste.rs/s/ohdqzz","created_at":"2025-02-24T12:57:26.000-06:00","title":"The least secure TOTP code possible","url":"https://shkspr.mobi/blog/2025/02/the-least-secure-totp-code-possible/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ohdqzz/least_secure_totp_code_possible","submitter_user":"raymii","user_is_author":false,"tags":["security"]},{"short_id":"yhgfq0","short_id_url":"https://lobste.rs/s/yhgfq0","created_at":"2025-02-24T12:16:06.000-06:00","title":"An Overview of Activation Functions","url":"https://paperswithcode.com/methods/category/activation-functions","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yhgfq0/overview_activation_functions","submitter_user":"friendlysock","user_is_author":false,"tags":["ai"]},{"short_id":"qefnfl","short_id_url":"https://lobste.rs/s/qefnfl","created_at":"2025-02-24T11:51:51.000-06:00","title":"Strong Opinions on URL Design","url":"https://vale.rocks/posts/strong-opinions-on-url-design","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qefnfl/strong_opinions_on_url_design","submitter_user":"calvin","user_is_author":false,"tags":["web"]},{"short_id":"hfcb6d","short_id_url":"https://lobste.rs/s/hfcb6d","created_at":"2025-02-24T11:40:54.000-06:00","title":"Subverting control with weak references","url":"https://jlongster.com/subverting-control-weak-refs","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hfcb6d/subverting_control_with_weak_references","submitter_user":"mjn","user_is_author":false,"tags":["javascript"]},{"short_id":"skmavd","short_id_url":"https://lobste.rs/s/skmavd","created_at":"2025-02-24T11:35:09.000-06:00","title":"Braille Institute’s Next Hyperlegible Font","url":"https://www.brailleinstitute.org/about-us/news/braille-institute-launches-enhanced-atkinson-hyperlegible-font-to-make-reading-easier/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/skmavd/braille_institute_s_next_hyperlegible","submitter_user":"polyzen","user_is_author":false,"tags":["a11y"]},{"short_id":"ocmai4","short_id_url":"https://lobste.rs/s/ocmai4","created_at":"2025-02-24T11:22:01.000-06:00","title":"Introducing Fullstack-Bench","url":"https://stack.convex.dev/introducing-fullstack-bench","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ocmai4/introducing_fullstack_bench","submitter_user":"sujayakar","user_is_author":true,"tags":["ai","databases"]},{"short_id":"jzf4w9","short_id_url":"https://lobste.rs/s/jzf4w9","created_at":"2025-02-24T11:15:25.000-06:00","title":"Transparency in Hardware/Software Interfaces","url":"https://rfd.shared.oxide.computer/rfd/0552","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jzf4w9/transparency_hardware_software","submitter_user":"bcantrill","user_is_author":true,"tags":["hardware","osdev"]},{"short_id":"ai6nhq","short_id_url":"https://lobste.rs/s/ai6nhq","created_at":"2025-02-24T11:03:26.000-06:00","title":"touch grass: reduce screen time","url":"https://touchgrass.now/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ai6nhq/touch_grass_reduce_screen_time","submitter_user":"MatheusRich","user_is_author":false,"tags":["ios"]},{"short_id":"xcqfp7","short_id_url":"https://lobste.rs/s/xcqfp7","created_at":"2025-02-24T10:42:31.000-06:00","title":"\"A Philosophy of Software Design\" vs \"Clean Code\"","url":"https://github.com/johnousterhout/aposd-vs-clean-code/blob/main/README.md","score":13,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xcqfp7/philosophy_software_design_vs_clean_code","submitter_user":"chrislloyd","user_is_author":false,"tags":["programming","transcript"]},{"short_id":"mnj6yg","short_id_url":"https://lobste.rs/s/mnj6yg","created_at":"2025-02-24T10:10:30.000-06:00","title":"Tech hype cycles","url":"https://wiki.alopex.li/HypeCycles","score":7,"flags":0,"comment_count":5,"description":"\u003cp\u003eI had the whim to collect a list of all the major tech hype bubbles I’ve lived through, which turned out a lot trickier than I intended – perhaps because I do my best to ignore them.  So I’m throwing the list down here and asking for corrections and additions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e1998-2001: Dotcom Bubble\u003c/li\u003e\n\u003cli\u003e1999-2006: Java\u003c/li\u003e\n\u003cli\u003e2004-2007: Web 2.0\u003c/li\u003e\n\u003cli\u003e2007-2010: The Cloud\u003c/li\u003e\n\u003cli\u003e2010-2015: Social media\u003c/li\u003e\n\u003cli\u003e2012-2015: Internet of Things\u003c/li\u003e\n\u003cli\u003e2013-2015: Big Data\u003c/li\u003e\n\u003cli\u003e2017-2021: Blockchain\u003c/li\u003e\n\u003cli\u003e2021-present: AI\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAlso-ran’s/attempts/minor bubbles:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003egrid computing\u003c/li\u003e\n\u003cli\u003eweb3\u003c/li\u003e\n\u003cli\u003e2012: 3D printing\u003c/li\u003e\n\u003cli\u003e2015: Autonomous vehicles\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDates don’t have to be precise, but it’d be nice for them to be broadly correct to within a year either way.\u003c/p\u003e\n","description_plain":"I had the whim to collect a list of all the major tech hype bubbles I've lived through, which turned out a lot trickier than I intended -- perhaps because I do my best to ignore them.  So I'm throwing the list down here and asking for corrections and additions:\r\n\r\n * 1998-2001: Dotcom Bubble\r\n * 1999-2006: Java\r\n * 2004-2007: Web 2.0\r\n * 2007-2010: The Cloud\r\n * 2010-2015: Social media\r\n * 2012-2015: Internet of Things\r\n * 2013-2015: Big Data\r\n * 2017-2021: Blockchain\r\n * 2021-present: AI\r\n\r\nAlso-ran's/attempts/minor bubbles:\r\n\r\n * grid computing\r\n * web3\r\n * 2012: 3D printing\r\n * 2015: Autonomous vehicles\r\n\r\nDates don't have to be precise, but it'd be nice for them to be broadly correct to within a year either way.","comments_url":"https://lobste.rs/s/mnj6yg/tech_hype_cycles","submitter_user":"icefox","user_is_author":false,"tags":["ask","culture","finance"]},{"short_id":"hu8ekd","short_id_url":"https://lobste.rs/s/hu8ekd","created_at":"2025-02-24T09:50:41.000-06:00","title":"CVEs for End of Life?","url":"https://opensourcesecurity.io/2025/01-cve-for-end-of-life/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hu8ekd/cves_for_end_life","submitter_user":"laktak","user_is_author":false,"tags":["security"]},{"short_id":"g1mjti","short_id_url":"https://lobste.rs/s/g1mjti","created_at":"2025-02-24T08:37:35.000-06:00","title":"Comparing Strings as Integers with @bitCast","url":"https://www.openmymind.net/Comparing-Strings-as-Integers-with-bitCast/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/g1mjti/comparing_strings_as_integers_with","submitter_user":"vpol","user_is_author":false,"tags":["zig"]},{"short_id":"pjtizh","short_id_url":"https://lobste.rs/s/pjtizh","created_at":"2025-02-24T08:04:58.000-06:00","title":"dropshot: expose REST APIs from a Rust program","url":"https://github.com/oxidecomputer/dropshot","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pjtizh/dropshot_expose_rest_apis_from_rust","submitter_user":"wofo","user_is_author":false,"tags":["api","rust","web"]},{"short_id":"uz8tlz","short_id_url":"https://lobste.rs/s/uz8tlz","created_at":"2025-02-24T06:51:28.000-06:00","title":"Nil channels in Go","url":"https://vishnubharathi.codes/blog/nil-channels-in-go/","score":7,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uz8tlz/nil_channels_go","submitter_user":"napkindrawing","user_is_author":false,"tags":["go"]},{"short_id":"fya2u1","short_id_url":"https://lobste.rs/s/fya2u1","created_at":"2025-02-24T05:49:10.000-06:00","title":"DeepSeek, AI sovereignty, and India","url":"https://nadh.in/blog/deepseek-ai-sovereignty-india/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fya2u1/deepseek_ai_sovereignty_india","submitter_user":"rishikesh","user_is_author":false,"tags":["ai"]},{"short_id":"d3shnw","short_id_url":"https://lobste.rs/s/d3shnw","created_at":"2025-02-24T05:48:31.000-06:00","title":"MathB.in Is Shutting Down","url":"https://susam.net/mathbin-is-shutting-down.html","score":13,"flags":1,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/d3shnw/mathb_is_shutting_down","submitter_user":"repl","user_is_author":false,"tags":["web"]},{"short_id":"iem7jw","short_id_url":"https://lobste.rs/s/iem7jw","created_at":"2025-02-24T05:45:15.000-06:00","title":"Soar – Distro Agnostic Package Manager, HomeBrew (LinuxBrew) Done Right","url":"https://github.com/pkgforge/soar","score":7,"flags":0,"comment_count":6,"description":"\u003cp\u003eSoar is a fast, modern package manager for Static Binaries, Portable Formats (AppImage|AppBundle|FlatImage|Runimage) \u0026amp; More.\u003c/p\u003e\n\u003cp\u003eThink of it as homebrew but if homebrew worked on all distros (their bottles don’t work on musl) \u0026amp; provided casks for Linux (They only do for macOS)\u003c/p\u003e\n\u003cp\u003eWhat makes soar new or different? I encourage you read \u003ca href=\"https://docs.pkgforge.dev/soar/readme\" rel=\"ugc\"\u003ehttps://docs.pkgforge.dev/soar/readme\u003c/a\u003e \u0026amp; make up your own mind.\u003c/p\u003e\n","description_plain":"Soar is a fast, modern package manager for Static Binaries, Portable Formats (AppImage|AppBundle|FlatImage|Runimage) \u0026 More.\r\n\r\nThink of it as homebrew but if homebrew worked on all distros (their bottles don't work on musl) \u0026 provided casks for Linux (They only do for macOS)\r\n\r\nWhat makes soar new or different? I encourage you read https://docs.pkgforge.dev/soar/readme \u0026 make up your own mind.","comments_url":"https://lobste.rs/s/iem7jw/soar_distro_agnostic_package_manager","submitter_user":"azathothas","user_is_author":true,"tags":["linux","rust","show"]},{"short_id":"iazbpl","short_id_url":"https://lobste.rs/s/iazbpl","created_at":"2025-02-24T05:01:14.000-06:00","title":"What are you doing this week?","url":"","score":7,"flags":0,"comment_count":13,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it's OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/iazbpl/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"tvpfsy","short_id_url":"https://lobste.rs/s/tvpfsy","created_at":"2025-02-24T04:35:05.000-06:00","title":"How Mindbody improved query latency and optimized costs using Amazon Aurora PostgreSQL Optimized Reads","url":"https://aws.amazon.com/blogs/database/how-mindbody-improved-query-latency-and-optimized-costs-using-amazon-aurora-postgresql-optimized-reads/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tvpfsy/how_mindbody_improved_query_latency","submitter_user":"alper","user_is_author":false,"tags":["databases"]},{"short_id":"y9eyjq","short_id_url":"https://lobste.rs/s/y9eyjq","created_at":"2025-02-24T03:56:25.000-06:00","title":"Why Clojure?","url":"https://gaiwan.co/blog/why-clojure/","score":17,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/y9eyjq/why_clojure","submitter_user":"bitfield","user_is_author":false,"tags":["clojure"]},{"short_id":"oa1kcd","short_id_url":"https://lobste.rs/s/oa1kcd","created_at":"2025-02-24T03:31:03.000-06:00","title":"Why do frame pointers matter for OCaml?","url":"https://lambdafoo.com/posts/2025-02-24-ocaml-frame-pointers.html","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oa1kcd/why_do_frame_pointers_matter_for_ocaml","submitter_user":"asb","user_is_author":false,"tags":["compilers","ml"]},{"short_id":"xzrfy0","short_id_url":"https://lobste.rs/s/xzrfy0","created_at":"2025-02-24T02:46:19.000-06:00","title":"Can 1B LLM Surpass 405B LLM? Rethinking Compute-Optimal Test-Time Scaling","url":"https://arxiv.org/abs/2502.06703","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eTest-Time Scaling (TTS) is an important method for improving the performance of Large Language Models (LLMs) by using additional computation during the inference phase. However, current studies do not systematically analyze how policy models, Process Reward Models (PRMs), and problem difficulty influence TTS. This lack of analysis limits the understanding and practical use of TTS methods. In this paper, we focus on two core questions: (1) What is the optimal approach to scale test-time computation across different policy models, PRMs, and problem difficulty levels? (2) To what extent can extended computation improve the performance of LLMs on complex tasks, and can smaller language models outperform larger ones through this approach? Through comprehensive experiments on MATH-500 and challenging AIME24 tasks, we have the following observations: (1) The compute-optimal TTS strategy is highly dependent on the choice of policy model, PRM, and problem difficulty. (2) With our compute-optimal TTS strategy, extremely small policy models can outperform larger models. For example, a 1B LLM can exceed a 405B LLM on MATH-500. Moreover, on both MATH-500 and AIME24, a 0.5B LLM outperforms GPT-4o, a 3B LLM surpasses a 405B LLM, and a 7B LLM beats o1 and DeepSeek-R1, while with higher inference efficiency. These findings show the significance of adapting TTS strategies to the specific characteristics of each task and model and indicate that TTS is a promising approach for enhancing the reasoning abilities of LLMs.\u003c/p\u003e\n","description_plain":"Test-Time Scaling (TTS) is an important method for improving the performance of Large Language Models (LLMs) by using additional computation during the inference phase. However, current studies do not systematically analyze how policy models, Process Reward Models (PRMs), and problem difficulty influence TTS. This lack of analysis limits the understanding and practical use of TTS methods. In this paper, we focus on two core questions: (1) What is the optimal approach to scale test-time computation across different policy models, PRMs, and problem difficulty levels? (2) To what extent can extended computation improve the performance of LLMs on complex tasks, and can smaller language models outperform larger ones through this approach? Through comprehensive experiments on MATH-500 and challenging AIME24 tasks, we have the following observations: (1) The compute-optimal TTS strategy is highly dependent on the choice of policy model, PRM, and problem difficulty. (2) With our compute-optimal TTS strategy, extremely small policy models can outperform larger models. For example, a 1B LLM can exceed a 405B LLM on MATH-500. Moreover, on both MATH-500 and AIME24, a 0.5B LLM outperforms GPT-4o, a 3B LLM surpasses a 405B LLM, and a 7B LLM beats o1 and DeepSeek-R1, while with higher inference efficiency. These findings show the significance of adapting TTS strategies to the specific characteristics of each task and model and indicate that TTS is a promising approach for enhancing the reasoning abilities of LLMs.","comments_url":"https://lobste.rs/s/xzrfy0/can_1b_llm_surpass_405b_llm_rethinking","submitter_user":"rrampage","user_is_author":false,"tags":["ai"]},{"short_id":"ta33pc","short_id_url":"https://lobste.rs/s/ta33pc","created_at":"2025-02-24T02:07:39.000-06:00","title":"Calendar.txt (2021)","url":"https://terokarvinen.com/2021/calendar-txt/","score":11,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ta33pc/calendar_txt_2021","submitter_user":"kmaasrud","user_is_author":false,"tags":["practices"]},{"short_id":"gedr6u","short_id_url":"https://lobste.rs/s/gedr6u","created_at":"2025-02-24T01:41:10.000-06:00","title":"Bitwarden Authenticator","url":"https://bitwarden.com/products/authenticator/","score":19,"flags":2,"comment_count":18,"description":"\u003cp\u003eopensource links\n\u003ca href=\"https://github.com/bitwarden/authenticator-android\" rel=\"ugc\"\u003ehttps://github.com/bitwarden/authenticator-android\u003c/a\u003e\n\u003ca href=\"https://github.com/bitwarden/authenticator-ios\" rel=\"ugc\"\u003ehttps://github.com/bitwarden/authenticator-ios\u003c/a\u003e\u003c/p\u003e\n","description_plain":"opensource links\r\nhttps://github.com/bitwarden/authenticator-android\r\nhttps://github.com/bitwarden/authenticator-ios","comments_url":"https://lobste.rs/s/gedr6u/bitwarden_authenticator","submitter_user":"laktak","user_is_author":false,"tags":["security"]},{"short_id":"q3sqaz","short_id_url":"https://lobste.rs/s/q3sqaz","created_at":"2025-02-24T01:00:11.000-06:00","title":"The Evolution of Agile Imposters: Why We Can't Estimate Our Own Software","url":"https://junglecoder.com/~saulrh/articles/evolution-of-agile-imposters.html","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/q3sqaz/evolution_agile_imposters_why_we_can_t","submitter_user":"riking","user_is_author":false,"tags":["philosophy","practices"]}]