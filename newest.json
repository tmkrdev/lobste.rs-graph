[{"short_id":"gjqkbw","created_at":"2025-09-10T04:32:19.000-05:00","title":"A love letter to the CSV format (2024)","url":"https://medialab.sciencespo.fr/en/news/a-love-letter-to-the-csv-format/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"JordiGH","user_is_author":false,"tags":["api","science"],"short_id_url":"https://lobste.rs/s/gjqkbw","comments_url":"https://lobste.rs/s/gjqkbw/love_letter_csv_format_2024"},{"short_id":"gjvdrw","created_at":"2025-09-10T03:01:14.000-05:00","title":"Ten Years of D3D12","url":"https://therealmjp.github.io/posts/ten-years-of-d3d12/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"dhruvp","user_is_author":false,"tags":["graphics"],"short_id_url":"https://lobste.rs/s/gjvdrw","comments_url":"https://lobste.rs/s/gjvdrw/ten_years_d3d12"},{"short_id":"nl3syv","created_at":"2025-09-10T02:15:51.000-05:00","title":"My Quarterly System Health Check-in","url":"https://blog.nilenso.com/blog/2025/09/05/my-quarterly-system-health-check-in-beyond-the-dashboard/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"atharva","user_is_author":false,"tags":["practices"],"short_id_url":"https://lobste.rs/s/nl3syv","comments_url":"https://lobste.rs/s/nl3syv/my_quarterly_system_health_check"},{"short_id":"cwdcve","created_at":"2025-09-10T01:10:50.000-05:00","title":"The Weird OS Built Around a Database","url":"https://www.youtube.com/watch?v=pWZBQMRmW7k","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"andyc","user_is_author":false,"tags":["databases","osdev","video"],"short_id_url":"https://lobste.rs/s/cwdcve","comments_url":"https://lobste.rs/s/cwdcve/weird_os_built_around_database"},{"short_id":"enn0ay","created_at":"2025-09-10T00:24:28.000-05:00","title":"Embedding Poisoning: Bypassing Safety Alignment via Embedding Semantic Shift","url":"https://arxiv.org/abs/2509.06338","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"df","user_is_author":false,"tags":["ai"],"short_id_url":"https://lobste.rs/s/enn0ay","comments_url":"https://lobste.rs/s/enn0ay/embedding_poisoning_bypassing_safety"},{"short_id":"9jtomf","created_at":"2025-09-10T00:14:57.000-05:00","title":"discover feed fever dream","url":"https://l4.pm/wiki/Personal%20Wiki/bluesky/discover%20feed%20fever%20dream.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"df","user_is_author":false,"tags":["programming"],"short_id_url":"https://lobste.rs/s/9jtomf","comments_url":"https://lobste.rs/s/9jtomf/discover_feed_fever_dream"},{"short_id":"amopnm","created_at":"2025-09-09T20:54:44.000-05:00","title":"LisaGUI","url":"https://lisagui.com/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"ur5us","user_is_author":false,"tags":["art","historical","retrocomputing"],"short_id_url":"https://lobste.rs/s/amopnm","comments_url":"https://lobste.rs/s/amopnm/lisagui"},{"short_id":"gk2cgf","created_at":"2025-09-09T20:38:28.000-05:00","title":"Setting up an Apple Software Update mirror","url":"https://github.com/jeffreybergier/Retro-Software-Update-Server","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"classichasclass","user_is_author":false,"tags":["mac","retrocomputing"],"short_id_url":"https://lobste.rs/s/gk2cgf","comments_url":"https://lobste.rs/s/gk2cgf/setting_up_apple_software_update_mirror"},{"short_id":"1gstvz","created_at":"2025-09-09T17:41:01.000-05:00","title":"Executive Director Cindy Cohn Will Step Down After 25 Years with EFF","url":"https://www.eff.org/press/releases/executive-director-cindy-cohn-will-step-down-after-25-years-eff","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"dannyob","user_is_author":false,"tags":["person"],"short_id_url":"https://lobste.rs/s/1gstvz","comments_url":"https://lobste.rs/s/1gstvz/executive_director_cindy_cohn_will_step"},{"short_id":"544tqh","created_at":"2025-09-09T17:05:36.000-05:00","title":"When should you use an actor?","url":"https://www.massicotte.org/actors","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"calvin","user_is_author":false,"tags":["swift"],"short_id_url":"https://lobste.rs/s/544tqh","comments_url":"https://lobste.rs/s/544tqh/when_should_you_use_actor"},{"short_id":"jz3eml","created_at":"2025-09-09T16:13:12.000-05:00","title":"The Last Programmers","url":"https://www.xipu.li/posts/the-last-programmers","score":6,"flags":1,"comment_count":12,"description":"","description_plain":"","submitter_user":"thibautd","user_is_author":false,"tags":["practices","vibecoding"],"short_id_url":"https://lobste.rs/s/jz3eml","comments_url":"https://lobste.rs/s/jz3eml/last_programmers"},{"short_id":"aglw7n","created_at":"2025-09-09T15:53:23.000-05:00","title":"Practical CI-friendly Performance Tests","url":"https://solidean.com/blog/2025/practical-performance-tests/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"mikejsavage","user_is_author":false,"tags":["testing"],"short_id_url":"https://lobste.rs/s/aglw7n","comments_url":"https://lobste.rs/s/aglw7n/practical_ci_friendly_performance_tests"},{"short_id":"pf12ga","created_at":"2025-09-09T15:24:10.000-05:00","title":"I don’t want AI agents controlling my laptop","url":"https://sophiebits.com/2025/09/09/ai-agents-security","score":14,"flags":0,"comment_count":11,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["security","vibecoding"],"short_id_url":"https://lobste.rs/s/pf12ga","comments_url":"https://lobste.rs/s/pf12ga/i_don_t_want_ai_agents_controlling_my"},{"short_id":"zmwje4","created_at":"2025-09-09T15:17:32.000-05:00","title":"The bloat of edge-case first libraries","url":"https://43081j.com/2025/09/bloat-of-edge-case-libraries","score":15,"flags":0,"comment_count":8,"description":"","description_plain":"","submitter_user":"MatheusRich","user_is_author":false,"tags":["practices"],"short_id_url":"https://lobste.rs/s/zmwje4","comments_url":"https://lobste.rs/s/zmwje4/bloat_edge_case_first_libraries"},{"short_id":"w8gnk4","created_at":"2025-09-09T14:23:57.000-05:00","title":"Stop Using CPU Limits on Kubernetes (2022)","url":"https://home.robusta.dev/blog/stop-using-cpu-limits","score":2,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"academician","user_is_author":false,"tags":["distributed"],"short_id_url":"https://lobste.rs/s/w8gnk4","comments_url":"https://lobste.rs/s/w8gnk4/stop_using_cpu_limits_on_kubernetes_2022"},{"short_id":"816ygs","created_at":"2025-09-09T14:20:39.000-05:00","title":"How to Prove False Statements: Practical Attacks on Fiat-Shamir","url":"https://eprint.iacr.org/2025/118.pdf","score":6,"flags":0,"comment_count":1,"description":"\u003cp\u003eThe Fiat-Shamir (FS) transform is a prolific and powerful technique for compiling public-coin interactive protocols into non-interactive ones. Roughly speaking, the idea is to replace the random coins of the verifier with the evaluations of a complex hash function.\u003c/p\u003e\n\u003cp\u003eThe FS  transform is known to be sound in the random oracle model (i.e., when the hash function is modeled as a totally random function). However, when instantiating the random oracle using a concrete hash function, there are examples of  protocols in which the transformation is not sound. So far all of these examples have been contrived protocols that were specifically designed to fail.\u003c/p\u003e\n\u003cp\u003eIn this work we show such an attack for a standard and popular interactive succinct argument, based on the GKR protocol, for verifying the correctness of a non-determinstic bounded-depth computation. For every choice of FS hash function, we show that a corresponding instantiation of this protocol, which was been widely studied in the literature and used also in practice, is not (adaptively) sound when compiled with the FS transform. Specifically, we construct an explicit circuit for which we can generate an accepting proof for a false statement.\u003c/p\u003e\n\u003cp\u003eWe further extend our attack and show that for every circuit C and desired output y, we can construct a functionally equivalent circuit C*, for which we can produce an accepting proof that C* outputs y (regardless of whether or not this statement is true). This demonstrates that any security guarantee (if such exists) would have to depend on the specific implementation of the circuit C, rather than just its functionality.\u003c/p\u003e\n\u003cp\u003eLastly, we also demonstrate versions of the attack that violate non-adaptive soundness of the protocol – that is, we generate an attacking circuit that is independent of the underlying cryptographic objects. However, these versions are either less practical (as the attacking circuit has very large depth) or make some additional (reasonable) assumptions on the underlying cryptographic primitives.\u003c/p\u003e\n","description_plain":"The Fiat-Shamir (FS) transform is a prolific and powerful technique for compiling public-coin interactive protocols into non-interactive ones. Roughly speaking, the idea is to replace the random coins of the verifier with the evaluations of a complex hash function.\r\n    \r\nThe FS  transform is known to be sound in the random oracle model (i.e., when the hash function is modeled as a totally random function). However, when instantiating the random oracle using a concrete hash function, there are examples of  protocols in which the transformation is not sound. So far all of these examples have been contrived protocols that were specifically designed to fail.\r\n\r\nIn this work we show such an attack for a standard and popular interactive succinct argument, based on the GKR protocol, for verifying the correctness of a non-determinstic bounded-depth computation. For every choice of FS hash function, we show that a corresponding instantiation of this protocol, which was been widely studied in the literature and used also in practice, is not (adaptively) sound when compiled with the FS transform. Specifically, we construct an explicit circuit for which we can generate an accepting proof for a false statement.\r\n    \r\nWe further extend our attack and show that for every circuit C and desired output y, we can construct a functionally equivalent circuit C*, for which we can produce an accepting proof that C* outputs y (regardless of whether or not this statement is true). This demonstrates that any security guarantee (if such exists) would have to depend on the specific implementation of the circuit C, rather than just its functionality.\r\n\r\nLastly, we also demonstrate versions of the attack that violate non-adaptive soundness of the protocol -- that is, we generate an attacking circuit that is independent of the underlying cryptographic objects. However, these versions are either less practical (as the attacking circuit has very large depth) or make some additional (reasonable) assumptions on the underlying cryptographic primitives.","submitter_user":"eBPF","user_is_author":false,"tags":["cryptography","pdf"],"short_id_url":"https://lobste.rs/s/816ygs","comments_url":"https://lobste.rs/s/816ygs/how_prove_false_statements_practical"},{"short_id":"ernwha","created_at":"2025-09-09T13:34:52.000-05:00","title":"Supply chains and watering holes","url":"https://cryptography.dog/blog/back-to-watering-holes/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"soulcutter","user_is_author":false,"tags":["security"],"short_id_url":"https://lobste.rs/s/ernwha","comments_url":"https://lobste.rs/s/ernwha/supply_chains_watering_holes"},{"short_id":"wlyzqn","created_at":"2025-09-09T13:29:51.000-05:00","title":"Memory Integrity Enforcement: A complete vision for memory safety in Apple devices","url":"https://security.apple.com/blog/memory-integrity-enforcement/","score":8,"flags":0,"comment_count":7,"description":"","description_plain":"","submitter_user":"calvin","user_is_author":false,"tags":["hardware","security"],"short_id_url":"https://lobste.rs/s/wlyzqn","comments_url":"https://lobste.rs/s/wlyzqn/memory_integrity_enforcement_complete"},{"short_id":"dbvnjh","created_at":"2025-09-09T13:28:09.000-05:00","title":"btrfs on a Raspberry Pi","url":"https://changelog.complete.org/archives/10852-btrfs-on-a-raspberry-pi","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"raymii","user_is_author":false,"tags":["linux"],"short_id_url":"https://lobste.rs/s/dbvnjh","comments_url":"https://lobste.rs/s/dbvnjh/btrfs_on_raspberry_pi"},{"short_id":"tub7ez","created_at":"2025-09-09T13:01:04.000-05:00","title":"GNU/Linux Sandboxing - A Brief Review","url":"https://hardenedlinux.org/blog/2024-08-20-gnu/linux-sandboxing-a-brief-review/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"Kratacoa","user_is_author":false,"tags":["linux","security"],"short_id_url":"https://lobste.rs/s/tub7ez","comments_url":"https://lobste.rs/s/tub7ez/gnu_linux_sandboxing_brief_review"},{"short_id":"nut4i6","created_at":"2025-09-09T12:42:09.000-05:00","title":"Testing the compiler optimizations your code relies on","url":"https://pythonspeed.com/articles/testing-compiler-optimizations/","score":12,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"itamarst","user_is_author":true,"tags":["performance"],"short_id_url":"https://lobste.rs/s/nut4i6","comments_url":"https://lobste.rs/s/nut4i6/testing_compiler_optimizations_your"},{"short_id":"wgbheg","created_at":"2025-09-09T12:34:56.000-05:00","title":"Should we revisit Extreme Programming in the age of AI?","url":"https://www.hyperact.co.uk/blog/should-we-revisit-xp-in-the-age-of-ai","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"MatheusRich","user_is_author":false,"tags":["practices","vibecoding"],"short_id_url":"https://lobste.rs/s/wgbheg","comments_url":"https://lobste.rs/s/wgbheg/should_we_revisit_extreme_programming"},{"short_id":"yt7ogc","created_at":"2025-09-09T12:15:39.000-05:00","title":"Tag proposal: hacks","url":"","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eYou know them when you see them. Sometimes they get inaptly tagged with \u003ccode\u003esatire\u003c/code\u003e for lack of obvious alternatives.\u003c/p\u003e\n\u003cp\u003eExamples:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://lobste.rs/s/qkborx/building_doom_like_multiplayer_shooter\" rel=\"ugc\"\u003ehttps://lobste.rs/s/qkborx/building_doom_like_multiplayer_shooter\u003c/a\u003e\n\u003ca href=\"https://lobste.rs/s/ttklux/shebanger_convert_shell_script_into\" rel=\"ugc\"\u003ehttps://lobste.rs/s/ttklux/shebanger_convert_shell_script_into\u003c/a\u003e\n\u003ca href=\"https://lobste.rs/s/i6wzug/html_programming_language\" rel=\"ugc\"\u003ehttps://lobste.rs/s/i6wzug/html_programming_language\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eOthers?\u003c/p\u003e\n","description_plain":"You know them when you see them. Sometimes they get inaptly tagged with `satire` for lack of obvious alternatives.\r\n\r\nExamples:\r\n\r\nhttps://lobste.rs/s/qkborx/building_doom_like_multiplayer_shooter\r\nhttps://lobste.rs/s/ttklux/shebanger_convert_shell_script_into\r\nhttps://lobste.rs/s/i6wzug/html_programming_language\r\n\r\nOthers?","submitter_user":"silby","user_is_author":true,"tags":["meta"],"short_id_url":"https://lobste.rs/s/yt7ogc","comments_url":"https://lobste.rs/s/yt7ogc/tag_proposal_hacks"},{"short_id":"toup6v","created_at":"2025-09-09T11:37:04.000-05:00","title":"Lost Computation","url":"https://aartaka.me/lost-compute.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"Kratacoa","user_is_author":false,"tags":["programming"],"short_id_url":"https://lobste.rs/s/toup6v","comments_url":"https://lobste.rs/s/toup6v/lost_computation"},{"short_id":"h4j1vk","created_at":"2025-09-09T11:27:25.000-05:00","title":"Formatting code should be unnecessary","url":"https://maxleiter.com/blog/formatting","score":38,"flags":0,"comment_count":25,"description":"","description_plain":"","submitter_user":"runxiyu","user_is_author":false,"tags":["practices"],"short_id_url":"https://lobste.rs/s/h4j1vk","comments_url":"https://lobste.rs/s/h4j1vk/formatting_code_should_be_unnecessary"}]