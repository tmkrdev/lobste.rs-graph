[{"short_id":"ctkvpa","short_id_url":"https://lobste.rs/s/ctkvpa","created_at":"2025-02-16T23:47:28.000-06:00","title":"Popping the bubble of nonsense research","url":"https://www.youtube.com/watch?v=shFUDPqVmTg","score":1,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ctkvpa/popping_bubble_nonsense_research","submitter_user":"amoffat","user_is_author":false,"tags":["science","video"]},{"short_id":"j9uxe8","short_id_url":"https://lobste.rs/s/j9uxe8","created_at":"2025-02-16T23:00:59.000-06:00","title":"On word embeddings - Part 3: The secret ingredients of word2vec","url":"https://www.ruder.io/secret-word2vec/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j9uxe8/on_word_embeddings_part_3_secret","submitter_user":"MiraWelner","user_is_author":false,"tags":["ai"]},{"short_id":"sag0p3","short_id_url":"https://lobste.rs/s/sag0p3","created_at":"2025-02-16T20:05:28.000-06:00","title":"Making the Web More Readable With Stylus","url":"https://www.wezm.net/v2/posts/2025/stylus/","score":11,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sag0p3/making_web_more_readable_with_stylus","submitter_user":"wezm","user_is_author":true,"tags":["css"]},{"short_id":"itjuhu","short_id_url":"https://lobste.rs/s/itjuhu","created_at":"2025-02-16T20:03:52.000-06:00","title":"Gitingest: Prompt-friendly codebase","url":"https://gitingest.com","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/itjuhu/gitingest_prompt_friendly_codebase","submitter_user":"telemachus","user_is_author":false,"tags":["ai"]},{"short_id":"yyju3z","short_id_url":"https://lobste.rs/s/yyju3z","created_at":"2025-02-16T18:14:47.000-06:00","title":"When is OOP a More Useful Modelling Approach than Other Paradigms?","url":"","score":8,"flags":0,"comment_count":13,"description":"\u003cp\u003eThrowing out all of OOP’s baggage, without the boiler plate and corporate bureaucratizing, done right, what does it have to offer?\u003c/p\u003e\n\u003cp\u003eI’d like to give OOP a fair shake. I began coding exposed to anti-big4-pattern narrative from the beginning: “Patterns are just missing language features” etc. Go’s community also opposes this Java/late 90s style OOP, offering a rather distinct primitive set (lacking inheritance and classes, offering closures… (some argue whether its object-oriented or not.)\u003c/p\u003e\n\u003cp\u003eI’ve mostly written in Lisps, then Go, Elixir, SQL, Factor and APL, exploring all paradigms besides OOP. But Common Lisp’s CLOS, Racket’s GUI or SICP showing object and functional equivalence imply that modeling with objects can be better in such cases (or why else would e.g. Racket’s designers not offer a functional GUI?) Dabbling with Pharo didn’t help.\u003c/p\u003e\n\u003cp\u003eWhat domains or situations lend themselves to organizing code via objects? When is storing functions as methods (i.e. in object namespaces instead of e.g. files) a better approach (to polymorphism?) (worth losing referential transparency)? What are the pros and cons of Go OOP vs. Rust vs. Java vs. Ruby vs. ObjectPascal OOP?\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eOn page 5 of this PDF, we can see Van Roy’s programming language paradigms: \u003ca href=\"http://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf\" rel=\"ugc\"\u003ehttp://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf\u003c/a\u003e of different modelling approaches.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOOP to me means only messaging, local retention and protection and hiding of state-process, and extreme late-binding of all things. – Alan Kay\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eHow do these tools/concepts help us model our domains and problem spaces? When are they more suitable than other approaches?\u003c/p\u003e\n","description_plain":"Throwing out all of OOP's baggage, without the boiler plate and corporate bureaucratizing, done right, what does it have to offer?\r\n\r\nI’d like to give OOP a fair shake. I began coding exposed to anti-big4-pattern narrative from the beginning: \"Patterns are just missing language features\" etc. Go's community also opposes this Java/late 90s style OOP, offering a rather distinct primitive set (lacking inheritance and classes, offering closures... (some argue whether its object-oriented or not.)\r\n\r\nI've mostly written in Lisps, then Go, Elixir, SQL, Factor and APL, exploring all paradigms besides OOP. But Common Lisp's CLOS, Racket's GUI or SICP showing object and functional equivalence imply that modeling with objects can be better in such cases (or why else would e.g. Racket's designers not offer a functional GUI?) Dabbling with Pharo didn't help.\r\n\r\n\r\nWhat domains or situations lend themselves to organizing code via objects? When is storing functions as methods (i.e. in object namespaces instead of e.g. files) a better approach (to polymorphism?) (worth losing referential transparency)? What are the pros and cons of Go OOP vs. Rust vs. Java vs. Ruby vs. ObjectPascal OOP?\r\n\r\n---\r\n\r\nOn page 5 of this PDF, we can see Van Roy's programming language paradigms: http://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf of different modelling approaches.\r\n\r\n\u003e OOP to me means only messaging, local retention and protection and hiding of state-process, and extreme late-binding of all things. -- Alan Kay\r\n\r\nHow do these tools/concepts help us model our domains and problem spaces? When are they more suitable than other approaches?","comments_url":"https://lobste.rs/s/yyju3z/when_is_oop_more_useful_modelling","submitter_user":"veqq","user_is_author":true,"tags":["ask","programming"]},{"short_id":"tkgkfd","short_id_url":"https://lobste.rs/s/tkgkfd","created_at":"2025-02-16T18:06:09.000-06:00","title":"This ESP32 antenna array can see WiFi","url":"https://www.youtube.com/watch?v=sXwDrcd1t-E","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003e\u003ca href=\"https://espargos.net/\" rel=\"ugc\"\u003eThe ESPARGOS web site\u003c/a\u003e has links to documentation, source code, and demo applications\u003c/p\u003e\n","description_plain":"[The ESPARGOS web site](https://espargos.net/) has links to documentation, source code, and demo applications","comments_url":"https://lobste.rs/s/tkgkfd/this_esp32_antenna_array_can_see_wifi","submitter_user":"fanf","user_is_author":false,"tags":["hardware","video"]},{"short_id":"uinlbi","short_id_url":"https://lobste.rs/s/uinlbi","created_at":"2025-02-16T16:05:20.000-06:00","title":"The seven pillars of wisdom","url":"https://interoperable-europe.ec.europa.eu/sites/default/files/discussion/attachment/2024-01/How%20could%20open%20licensing%20protect%20democracy.pdf","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uinlbi/seven_pillars_wisdom","submitter_user":"kuijsten","user_is_author":false,"tags":["law","pdf"]},{"short_id":"yapvon","short_id_url":"https://lobste.rs/s/yapvon","created_at":"2025-02-16T15:05:53.000-06:00","title":"What to do about SQLITE_BUSY errors despite setting a timeout","url":"https://berthub.eu/articles/posts/a-brief-post-on-sqlite3-database-locked-despite-timeout/","score":7,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yapvon/what_do_about_sqlite_busy_errors_despite","submitter_user":"fanf","user_is_author":false,"tags":["databases"]},{"short_id":"jpdtyb","short_id_url":"https://lobste.rs/s/jpdtyb","created_at":"2025-02-16T15:01:52.000-06:00","title":"A Simple Github Report Generator","url":"https://github.com/siddharth1729/github_report_generator","score":3,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jpdtyb/simple_github_report_generator","submitter_user":"siddharthsabron1729","user_is_author":true,"tags":["python"]},{"short_id":"rc1hkq","short_id_url":"https://lobste.rs/s/rc1hkq","created_at":"2025-02-16T13:02:58.000-06:00","title":"Dela: a task runner that delegates the work to other tools","url":"https://github.com/aleyan/dela","score":7,"flags":1,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rc1hkq/dela_task_runner_delegates_work_other","submitter_user":"aleyan","user_is_author":true,"tags":["programming","show"]},{"short_id":"mk577n","short_id_url":"https://lobste.rs/s/mk577n","created_at":"2025-02-16T11:29:01.000-06:00","title":"Civic Tech's Third Wave","url":"https://www.jpt.sh/posts/third-wave-civic-tech/","score":23,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mk577n/civic_tech_s_third_wave","submitter_user":"jptsh","user_is_author":true,"tags":["culture"]},{"short_id":"xjrlj2","short_id_url":"https://lobste.rs/s/xjrlj2","created_at":"2025-02-16T11:14:25.000-06:00","title":"How Android's calculator works with real numbers","url":"https://chadnauseam.com/coding/random/calculator-app","score":63,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xjrlj2/how_android_s_calculator_works_with_real","submitter_user":"yoshi","user_is_author":false,"tags":["android","math"]},{"short_id":"n6xa0s","short_id_url":"https://lobste.rs/s/n6xa0s","created_at":"2025-02-16T11:03:52.000-06:00","title":"Unexpected uses of the GF2P8AFFINEQB bit matrix multiply instruction","url":"https://gist.github.com/animetosho/d3ca95da2131b5813e16b5bb1b137ca0","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n6xa0s/unexpected_uses_gf2p8affineqb_bit","submitter_user":"fanf","user_is_author":false,"tags":["assembly"]},{"short_id":"wxqmyd","short_id_url":"https://lobste.rs/s/wxqmyd","created_at":"2025-02-16T09:13:50.000-06:00","title":"logis - an automatic scientific log in your git commit history","url":"https://github.com/flywhl/logis","score":9,"flags":0,"comment_count":2,"description":"\u003cp\u003eA local-first experiment tracker that makes a git commit with metadata every time you run an experiment. Plus a CLI that lets you search for commits based on the metadata, e.g. \u003ccode\u003emetrics.accuracy \u0026gt; 0.9\u003c/code\u003e.\u003c/p\u003e\n","description_plain":"A local-first experiment tracker that makes a git commit with metadata every time you run an experiment. Plus a CLI that lets you search for commits based on the metadata, e.g. `metrics.accuracy \u003e 0.9`.","comments_url":"https://lobste.rs/s/wxqmyd/logis_automatic_scientific_log_your_git","submitter_user":"ryro","user_is_author":true,"tags":["python","science","show"]},{"short_id":"ykpcqs","short_id_url":"https://lobste.rs/s/ykpcqs","created_at":"2025-02-16T05:36:46.000-06:00","title":"Can atproto scale down?","url":"https://bsky.bad-example.com/can-atproto-scale-down/","score":23,"flags":0,"comment_count":11,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ykpcqs/can_atproto_scale_down","submitter_user":"icy","user_is_author":false,"tags":["distributed","web"]},{"short_id":"6obzpw","short_id_url":"https://lobste.rs/s/6obzpw","created_at":"2025-02-16T04:46:14.000-06:00","title":"remco is a lightweight configuration management tool (2023)","url":"https://github.com/HeavyHorst/remco","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6obzpw/remco_is_lightweight_configuration","submitter_user":"bitfield","user_is_author":false,"tags":["devops"]},{"short_id":"vu3fsc","short_id_url":"https://lobste.rs/s/vu3fsc","created_at":"2025-02-16T03:53:04.000-06:00","title":"Notes: AI Copilot Code Quality","url":"https://kracekumar.com/post/ai_copilot_code_quality_paper/","score":11,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vu3fsc/notes_ai_copilot_code_quality","submitter_user":"kracekumar","user_is_author":true,"tags":["ai"]},{"short_id":"pibsom","short_id_url":"https://lobste.rs/s/pibsom","created_at":"2025-02-16T02:06:42.000-06:00","title":"DSLs for Safe iOS/watchOS Communication","url":"https://defn.io/2025/02/16/type-safe-watchos-communication/","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/pibsom/dsls_for_safe_ios_watchos_communication","submitter_user":"bogdan","user_is_author":true,"tags":["lisp","swift"]},{"short_id":"w7qf9o","short_id_url":"https://lobste.rs/s/w7qf9o","created_at":"2025-02-16T01:20:14.000-06:00","title":"How I implement SSA form","url":"https://gist.github.com/pizlonator/cf1e72b8600b1437dda8153ea3fdb963","score":22,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/w7qf9o/how_i_implement_ssa_form","submitter_user":"asb","user_is_author":false,"tags":["compilers"]},{"short_id":"yusi8g","short_id_url":"https://lobste.rs/s/yusi8g","created_at":"2025-02-15T23:01:49.000-06:00","title":"Modding the Gulf of Mexico Back (in Google Maps)","url":"https://www.youtube.com/watch?v=F5m2JxplnXk","score":15,"flags":1,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yusi8g/modding_gulf_mexico_back_google_maps","submitter_user":"jcs","user_is_author":false,"tags":["javascript","reversing","video"]},{"short_id":"7pzdgj","short_id_url":"https://lobste.rs/s/7pzdgj","created_at":"2025-02-15T19:19:11.000-06:00","title":"GulfOfMexico: perfect programming language","url":"https://github.com/TodePond/GulfOfMexico","score":26,"flags":4,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/7pzdgj/gulfofmexico_perfect_programming","submitter_user":"proctrap","user_is_author":false,"tags":["satire"]},{"short_id":"cxpiaj","short_id_url":"https://lobste.rs/s/cxpiaj","created_at":"2025-02-15T15:37:58.000-06:00","title":"Taichi: High-performance Parallel Programming in Python","url":"https://www.taichi-lang.org/","score":9,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cxpiaj/taichi_high_performance_parallel","submitter_user":"fanf","user_is_author":false,"tags":["python"]},{"short_id":"undbaa","short_id_url":"https://lobste.rs/s/undbaa","created_at":"2025-02-15T14:54:02.000-06:00","title":"NASA has a list of 10 rules for software development","url":"https://www.cs.otago.ac.nz/cosc345/resources/nasa-10-rules.htm","score":27,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/undbaa/nasa_has_list_10_rules_for_software","submitter_user":"susam","user_is_author":false,"tags":["practices"]},{"short_id":"oxtari","short_id_url":"https://lobste.rs/s/oxtari","created_at":"2025-02-15T14:36:51.000-06:00","title":"fixi.js - minimal general hypermedia controls","url":"https://github.com/bigskysoftware/fixi","score":38,"flags":0,"comment_count":10,"description":"\u003cp\u003ehey lobsters, i wanted to show you all fixi.js, a minimal take on generalized hypermedia controls.  I am the creator of htmx[0] and the author of “Hypermedia Controls: Feral to Formal”[1], and, inspired by Niklaus Wirth’s paper “A Plea for Lean Software”[2] I wanted to create an implementation of generalized hypermedia controls that was as lean as possible while still being useful.\u003c/p\u003e\n\u003cp\u003eHere are some more details on the project’s minimalism.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/bigskysoftware/fixi#minimalism\" rel=\"ugc\"\u003ehttps://github.com/bigskysoftware/fixi#minimalism\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eOne example of this minimalism is that the project consists of a total of three files: a README that serves as the docs, the js file and then an html file that serves as the tests.\u003c/p\u003e\n\u003cp\u003eAnyway, hope people find it interesting.\u003c/p\u003e\n\u003cp\u003e–\u003c/p\u003e\n\u003cp\u003e[0] - \u003ca href=\"https://htmx.org\" rel=\"ugc\"\u003ehttps://htmx.org\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[1] - \u003ca href=\"https://dl.acm.org/doi/pdf/10.1145/3648188.3675127\" rel=\"ugc\"\u003ehttps://dl.acm.org/doi/pdf/10.1145/3648188.3675127\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e[2] - \u003ca href=\"https://github.com/lproven/plea_for_lean_software/blob/master/Niklaus%20Wirth%20-%20A%20Plea%20for%20Lean%20Software.pdf\" rel=\"ugc\"\u003ehttps://github.com/lproven/plea_for_lean_software/blob/master/Niklaus%20Wirth%20-%20A%20Plea%20for%20Lean%20Software.pdf\u003c/a\u003e\u003c/p\u003e\n","description_plain":"hey lobsters, i wanted to show you all fixi.js, a minimal take on generalized hypermedia controls.  I am the creator of htmx[0] and the author of \"Hypermedia Controls: Feral to Formal\"[1], and, inspired by Niklaus Wirth's paper \"A Plea for Lean Software\"[2] I wanted to create an implementation of generalized hypermedia controls that was as lean as possible while still being useful.\r\n\r\nHere are some more details on the project's minimalism.\r\n\r\nhttps://github.com/bigskysoftware/fixi#minimalism\r\n\r\nOne example of this minimalism is that the project consists of a total of three files: a README that serves as the docs, the js file and then an html file that serves as the tests.\r\n\r\nAnyway, hope people find it interesting.\r\n\r\n--\r\n\r\n[0] - https://htmx.org\r\n\r\n[1] - https://dl.acm.org/doi/pdf/10.1145/3648188.3675127\r\n\r\n[2] - https://github.com/lproven/plea_for_lean_software/blob/master/Niklaus%20Wirth%20-%20A%20Plea%20for%20Lean%20Software.pdf","comments_url":"https://lobste.rs/s/oxtari/fixi_js_minimal_general_hypermedia","submitter_user":"1cg","user_is_author":true,"tags":["javascript","web"]},{"short_id":"1reyhf","short_id_url":"https://lobste.rs/s/1reyhf","created_at":"2025-02-15T13:19:12.000-06:00","title":"Run LLMs on macOS using llm-mlx and Apple’s MLX framework","url":"https://simonwillison.net/2025/Feb/15/llm-mlx/","score":24,"flags":1,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1reyhf/run_llms_on_macos_using_llm_mlx_apple_s_mlx","submitter_user":"simonw","user_is_author":true,"tags":["ai","mac","python"]}]