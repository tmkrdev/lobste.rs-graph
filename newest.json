[{"short_id":"580mjo","created_at":"2025-09-29T13:01:46.000-05:00","title":"Introducing tdom: HTML templating with t‑strings","url":"https://davepeck.org/2025/09/22/introducing-tdom-html-templating-with-python-t-strings/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"ubernostrum","user_is_author":false,"tags":["python"],"short_id_url":"https://lobste.rs/s/580mjo","comments_url":"https://lobste.rs/s/580mjo/introducing_tdom_html_templating_with_t"},{"short_id":"ljvnlu","created_at":"2025-09-29T12:57:55.000-05:00","title":"We built our coding agent for Slack instead of the terminal","url":"https://www.mintlify.com/blog/we-built-our-coding-agent-for-slack","score":2,"flags":1,"comment_count":1,"description":"","description_plain":"","submitter_user":"skeptrune","user_is_author":true,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/ljvnlu","comments_url":"https://lobste.rs/s/ljvnlu/we_built_our_coding_agent_for_slack"},{"short_id":"eayslm","created_at":"2025-09-29T12:37:52.000-05:00","title":"Adding a new instruction to RISC-V backend in LLVM","url":"https://blog.gustavoleite.me/llvm-riscv-instruction","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"leiteg","user_is_author":true,"tags":["compilers"],"short_id_url":"https://lobste.rs/s/eayslm","comments_url":"https://lobste.rs/s/eayslm/adding_new_instruction_risc_v_backend"},{"short_id":"2ofre3","created_at":"2025-09-29T12:35:26.000-05:00","title":"Can LIGO Detect Daylight Savings Time?","url":"https://arxiv.org/abs/2509.11849","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eYes, it can.\u003c/p\u003e\n\u003cp\u003eCatalogs produced by networks of Gravitational-wave interferometers are subject to complicated selection effects, and the gold-standard remains direct measurements of the detection probability through large injection campaigns. I leverage public data products from the LIGO-Virgo-KAGRA Collaborations’ 3rd and 4th observing runs to show that there are non-trivial temporal variations within the detection probability that are well-described by a weekly cycle. There are clear differences between weekends and weekdays, between day and night (at the sites), and even between daylight-savings and standard time. I discuss possible causes for this behavior and implications.\u003c/p\u003e\n","description_plain":"Yes, it can.\r\n\r\nCatalogs produced by networks of Gravitational-wave interferometers are subject to complicated selection effects, and the gold-standard remains direct measurements of the detection probability through large injection campaigns. I leverage public data products from the LIGO-Virgo-KAGRA Collaborations' 3rd and 4th observing runs to show that there are non-trivial temporal variations within the detection probability that are well-described by a weekly cycle. There are clear differences between weekends and weekdays, between day and night (at the sites), and even between daylight-savings and standard time. I discuss possible causes for this behavior and implications.","submitter_user":"fanf","user_is_author":false,"tags":["pdf","science"],"short_id_url":"https://lobste.rs/s/2ofre3","comments_url":"https://lobste.rs/s/2ofre3/can_ligo_detect_daylight_savings_time"},{"short_id":"o17pw0","created_at":"2025-09-29T12:24:43.000-05:00","title":"Tag proposal: quantum","url":"","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eCurrently the closest tags depending on the situation are usually “math” or “science” which in my opinion are too vague as to be useful when describing quantum information (although they are useful as supplementary tags, e.g. “hardware” for a talk on heterogeneous compute or “math” for a blog post about quantum complexity theory).\nAs this is a computing-focused forum, posting a Physical Review Letters paper about quantum sensing would likely \u003cstrong\u003enot\u003c/strong\u003e be a valid use of this tag (even though it is quantum related), but I believe quantum cryptography, algorithms, hardware, etc should all be fair game.\u003c/p\u003e\n\u003cp\u003eQuantum information science stories are quite niche for lobste.rs, and I do not intend to needlessly pollute the tag list or have the existence of a tag encourage posting of QIS related things if that does not benefit the community at large.\nI personally would like to post/see more articles related to quantum computing, but I do not want to pollute the feeds of those who are uninterested in this topic.\u003c/p\u003e\n","description_plain":"Currently the closest tags depending on the situation are usually \"math\" or \"science\" which in my opinion are too vague as to be useful when describing quantum information (although they are useful as supplementary tags, e.g. \"hardware\" for a talk on heterogeneous compute or \"math\" for a blog post about quantum complexity theory).\r\nAs this is a computing-focused forum, posting a Physical Review Letters paper about quantum sensing would likely **not** be a valid use of this tag (even though it is quantum related), but I believe quantum cryptography, algorithms, hardware, etc should all be fair game.\r\n\r\nQuantum information science stories are quite niche for lobste.rs, and I do not intend to needlessly pollute the tag list or have the existence of a tag encourage posting of QIS related things if that does not benefit the community at large.\r\nI personally would like to post/see more articles related to quantum computing, but I do not want to pollute the feeds of those who are uninterested in this topic.","submitter_user":"Shorden","user_is_author":true,"tags":["meta"],"short_id_url":"https://lobste.rs/s/o17pw0","comments_url":"https://lobste.rs/s/o17pw0/tag_proposal_quantum"},{"short_id":"gtnuao","created_at":"2025-09-29T12:03:28.000-05:00","title":"Introducing Claude Sonnet 4.5","url":"https://www.anthropic.com/news/claude-sonnet-4-5","score":0,"flags":1,"comment_count":0,"description":"","description_plain":"","submitter_user":"aleyan","user_is_author":false,"tags":["ai"],"short_id_url":"https://lobste.rs/s/gtnuao","comments_url":"https://lobste.rs/s/gtnuao/introducing_claude_sonnet_4_5"},{"short_id":"7kspja","created_at":"2025-09-29T11:07:52.000-05:00","title":"Subtleties of SQLite Indexes","url":"https://emschwartz.me/subtleties-of-sqlite-indexes/","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"emschwartz","user_is_author":true,"tags":["databases","performance"],"short_id_url":"https://lobste.rs/s/7kspja","comments_url":"https://lobste.rs/s/7kspja/subtleties_sqlite_indexes"},{"short_id":"hxkkl5","created_at":"2025-09-29T10:55:04.000-05:00","title":"Upgrading Our Way Through OpenGL 1.x","url":"https://bumbershootsoft.wordpress.com/2025/09/27/upgrading-our-way-through-opengl-1-x/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"asb","user_is_author":false,"tags":["graphics"],"short_id_url":"https://lobste.rs/s/hxkkl5","comments_url":"https://lobste.rs/s/hxkkl5/upgrading_our_way_through_opengl_1_x"},{"short_id":"zu4gvi","created_at":"2025-09-29T10:53:43.000-05:00","title":"Skia Canvas 3.0 Released","url":"https://skia-canvas.org","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eSee the \u003ca href=\"https://github.com/samizdatco/skia-canvas/discussions/255\" rel=\"ugc\"\u003erelease announcement\u003c/a\u003e for detailed changes.\u003c/p\u003e\n","description_plain":"See the [release announcement](https://github.com/samizdatco/skia-canvas/discussions/255) for detailed changes.","submitter_user":"nsfmc","user_is_author":false,"tags":["graphics","nodejs","release"],"short_id_url":"https://lobste.rs/s/zu4gvi","comments_url":"https://lobste.rs/s/zu4gvi/skia_canvas_3_0_released"},{"short_id":"adqhqf","created_at":"2025-09-29T10:50:13.000-05:00","title":"UNIX99: UNIX for the TI-99/4A","url":"https://www.osnews.com/story/143436/unix99-unix-for-the-ti-99-4a/","score":9,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"lorddimwit","user_is_author":false,"tags":["osdev","unix"],"short_id_url":"https://lobste.rs/s/adqhqf","comments_url":"https://lobste.rs/s/adqhqf/unix99_unix_for_ti_99_4a"},{"short_id":"rrwwar","created_at":"2025-09-29T10:25:26.000-05:00","title":"Announcing Software You Can Love 2026","url":"https://mattnite.net/blog/sycl-2026-announcement/","score":13,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"mattnite","user_is_author":true,"tags":["event"],"short_id_url":"https://lobste.rs/s/rrwwar","comments_url":"https://lobste.rs/s/rrwwar/announcing_software_you_can_love_2026"},{"short_id":"cay1iq","created_at":"2025-09-29T09:09:13.000-05:00","title":"LLM Inference Economics from First Principles","url":"https://www.tensoreconomics.com/p/llm-inference-economics-from-first","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"samber","user_is_author":false,"tags":["ai","vibecoding"],"short_id_url":"https://lobste.rs/s/cay1iq","comments_url":"https://lobste.rs/s/cay1iq/llm_inference_economics_from_first"},{"short_id":"qzcqyx","created_at":"2025-09-29T08:34:43.000-05:00","title":"Code golfing a tiny demo using maths and a pinch of insanity","url":"https://blog.pkh.me/p/45-code-golfing-a-tiny-demo-using-maths-and-a-pinch-of-insanity.html","score":7,"flags":1,"comment_count":1,"description":"","description_plain":"","submitter_user":"ubitux","user_is_author":true,"tags":["graphics","math"],"short_id_url":"https://lobste.rs/s/qzcqyx","comments_url":"https://lobste.rs/s/qzcqyx/code_golfing_tiny_demo_using_maths_pinch"},{"short_id":"vvlwde","created_at":"2025-09-29T08:09:53.000-05:00","title":"My (concurrency) Wishlist for Xcode 27","url":"https://iamkonstantin.eu/blog/my-concurrency-wishlist-for-xcode-27/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"iamkonstantin","user_is_author":true,"tags":["swift"],"short_id_url":"https://lobste.rs/s/vvlwde","comments_url":"https://lobste.rs/s/vvlwde/my_concurrency_wishlist_for_xcode_27"},{"short_id":"wf4bnp","created_at":"2025-09-29T07:38:40.000-05:00","title":"What's New in PostgreSQL 18 - a Developer's Perspective","url":"https://www.bytebase.com/blog/what-is-new-in-postgres-18-for-developer/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"samber","user_is_author":false,"tags":["databases"],"short_id_url":"https://lobste.rs/s/wf4bnp","comments_url":"https://lobste.rs/s/wf4bnp/what_s_new_postgresql_18_developer_s"},{"short_id":"oiiocr","created_at":"2025-09-29T07:36:02.000-05:00","title":"Go Proposal: architecture-specific SIMD intrinsics","url":"https://github.com/golang/go/issues/73787","score":11,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"samber","user_is_author":false,"tags":["go"],"short_id_url":"https://lobste.rs/s/oiiocr","comments_url":"https://lobste.rs/s/oiiocr/go_proposal_architecture_specific_simd"},{"short_id":"x7fe8h","created_at":"2025-09-29T07:33:44.000-05:00","title":"dbos: Durable Workflow Orchestration with Go and Postgresql","url":"https://github.com/dbos-inc/dbos-transact-golang","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"samber","user_is_author":false,"tags":["databases","go"],"short_id_url":"https://lobste.rs/s/x7fe8h","comments_url":"https://lobste.rs/s/x7fe8h/dbos_durable_workflow_orchestration"},{"short_id":"ayncvk","created_at":"2025-09-29T06:35:01.000-05:00","title":"AI is writing 90% of the code","url":"https://lucumr.pocoo.org/2025/9/29/90-percent/","score":14,"flags":1,"comment_count":49,"description":"","description_plain":"","submitter_user":"thor77","user_is_author":false,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/ayncvk","comments_url":"https://lobste.rs/s/ayncvk/ai_is_writing_90_code"},{"short_id":"sieihh","created_at":"2025-09-29T06:30:32.000-05:00","title":"Spent an hour or so working with claude to write a minimal static web server in COBOL","url":"https://github.com/jmsdnns/webbol","score":2,"flags":1,"comment_count":2,"description":"","description_plain":"","submitter_user":"jmsdnns","user_is_author":true,"tags":["vibecoding","web"],"short_id_url":"https://lobste.rs/s/sieihh","comments_url":"https://lobste.rs/s/sieihh/spent_hour_so_working_with_claude_write"},{"short_id":"6tquvj","created_at":"2025-09-29T05:57:02.000-05:00","title":"Tell Me a Story","url":"https://content.subvisual.com/talk-roundtable/sasa-juric-tell-me-a-story/","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"munksgaard","user_is_author":false,"tags":["culture","programming","vcs"],"short_id_url":"https://lobste.rs/s/6tquvj","comments_url":"https://lobste.rs/s/6tquvj/tell_me_story"},{"short_id":"f5xxtl","created_at":"2025-09-29T05:43:45.000-05:00","title":"Does AI Get Bored?","url":"https://timkellogg.me/blog/2025/09/27/boredom","score":3,"flags":2,"comment_count":0,"description":"","description_plain":"","submitter_user":"kellogh","user_is_author":true,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/f5xxtl","comments_url":"https://lobste.rs/s/f5xxtl/does_ai_get_bored"},{"short_id":"pvyfsg","created_at":"2025-09-29T04:46:08.000-05:00","title":"What are you doing this week?","url":"","score":5,"flags":0,"comment_count":28,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"],"short_id_url":"https://lobste.rs/s/pvyfsg","comments_url":"https://lobste.rs/s/pvyfsg/what_are_you_doing_this_week"},{"short_id":"n0gngp","created_at":"2025-09-29T02:50:08.000-05:00","title":"Data on AI Models","url":"https://epoch.ai/data/ai-models","score":0,"flags":1,"comment_count":0,"description":"","description_plain":"","submitter_user":"atharva","user_is_author":false,"tags":["ai"],"short_id_url":"https://lobste.rs/s/n0gngp","comments_url":"https://lobste.rs/s/n0gngp/data_on_ai_models"},{"short_id":"29vcxz","created_at":"2025-09-29T01:54:16.000-05:00","title":"Perhaps AI-based autocomplete optimizes for the wrong problem","url":"","score":1,"flags":0,"comment_count":1,"description":"\u003cp\u003eI’m in my first month of a paid GitHub Copilot Pro subscription. I had great success using GPT 4.1 to translate a Haskell project into OCaml; GPT 4 saved a couple days of effort on a week-long task. (In reality, I routinely underestimate how long projects take, so I probably saved a much larger amount of time). From there it was easy to pay for the first month of Copilot ($10 USD/mo). But I quickly realized that asking Copilot to do anything was very disruptive. I don’t do well with interrupt-driven development; I have a productive mental zone that takes several minutes to enter, and asking questions to an LLM breaks that zone. So my first month of LLMs has been trimmed down to just autocomplete in VS Code.\u003c/p\u003e\n\u003cp\u003eOne of my current tasks is to test a home-brewed, JSON build system. And one of my tests is to download, extract and normalize uutils (Rust-ified versions of \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003efind\u003c/code\u003e, etc.) for multiple architectures. And no surprise, I quickly found my build scripts were repeating mostly the same thing with slight variations. I start typing the first item in a JSON array:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\"get-asset-file CommonsBase_Std.Coreutils.Assets@0.2.2\n   -p coreutils-0.2.2-aarch64-apple-darwin.tar.gz\n   -f coreutils.File.Darwin_arm64.tar.gz\",\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand Copilot fills out the other JSON items:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\"get-asset-file CommonsBase_Std.Coreutils.Assets@0.2.2\n   -p coreutils-0.2.2-x86_64-apple-darwin.tar.gz\n   -f coreutils.File.Darwin_x86_64.tar.gz\",\n\"get-asset-file CommonsBase_Std.Coreutils.Assets@0.2.2\n   -p coreutils-0.2.2-aarch64-unknown-linux-gnu.tar.gz\n   -f coreutils.File.Linux_arm64_gnu.tar.gz\",\n... 6 more ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe auto-complete was accurate; in fact, it was more accurate than I would be. It also saved me lots of typing, and as an unapologetically lazy programmer I \u003cem\u003emight\u003c/em\u003e call that a win.\u003c/p\u003e\n\u003cp\u003eBut it was not a win. The repetition was the direct result of the structural deficiency with overly simple build systems: they lack looping constructs. The proper thing to do is to use a loop over a map/table/dictionary, and in my case in particular that means I must do the grunt work of integrating some small language like Lua that can do loops. Does Copilot suggest the right thing? Of course not, at least without me prompting it first.\u003c/p\u003e\n\u003cp\u003eDeeper thought: Conventional next-token prediction trains LLMs to \u003cem\u003eproduce\u003c/em\u003e words, not remove words. In our childhood training to become effective communicators, we learn when producing words is necessary; we also learn brevity. And as software engineers, we learn brevity is a good thing as we reduce repetitive lines of code into a loop.\u003c/p\u003e\n\u003cp\u003eMy first month: I have never seen the LLM autocomplete a repetitive block of code into a simpler loop. So, I’d love to see an explicit counter-bias during training to simplify and remove words. I \u003cem\u003ecould\u003c/em\u003e ask the LLM to simplify code. That might work (though not because the model is structurally aware of how to simplify code). Regardless, if I’m going to pay for a tool to suggest things to me, I shouldn’t have to suggest code simplification to the code suggestor.\u003c/p\u003e\n\u003cp\u003eI’m going to keep paying the $10 even if I don’t find auto-complete that useful. Copilot has already paid for itself. But I’m left thinking that today’s LLMs have over-indexed on the wrong objective.\u003c/p\u003e\n\u003cp\u003eThoughts?\u003c/p\u003e\n","description_plain":"I'm in my first month of a paid GitHub Copilot Pro subscription. I had great success using GPT 4.1 to translate a Haskell project into OCaml; GPT 4 saved a couple days of effort on a week-long task. (In reality, I routinely underestimate how long projects take, so I probably saved a much larger amount of time). From there it was easy to pay for the first month of Copilot ($10 USD/mo). But I quickly realized that asking Copilot to do anything was very disruptive. I don't do well with interrupt-driven development; I have a productive mental zone that takes several minutes to enter, and asking questions to an LLM breaks that zone. So my first month of LLMs has been trimmed down to just autocomplete in VS Code.\r\n\r\nOne of my current tasks is to test a home-brewed, JSON build system. And one of my tests is to download, extract and normalize uutils (Rust-ified versions of `ls`, `find`, etc.) for multiple architectures. And no surprise, I quickly found my build scripts were repeating mostly the same thing with slight variations. I start typing the first item in a JSON array:\r\n\r\n    \"get-asset-file CommonsBase_Std.Coreutils.Assets@0.2.2\r\n       -p coreutils-0.2.2-aarch64-apple-darwin.tar.gz\r\n       -f coreutils.File.Darwin_arm64.tar.gz\",\r\n\r\nand Copilot fills out the other JSON items:\r\n\r\n    \"get-asset-file CommonsBase_Std.Coreutils.Assets@0.2.2\r\n       -p coreutils-0.2.2-x86_64-apple-darwin.tar.gz\r\n       -f coreutils.File.Darwin_x86_64.tar.gz\",\r\n    \"get-asset-file CommonsBase_Std.Coreutils.Assets@0.2.2\r\n       -p coreutils-0.2.2-aarch64-unknown-linux-gnu.tar.gz\r\n       -f coreutils.File.Linux_arm64_gnu.tar.gz\",\r\n    ... 6 more ...\r\n\r\nThe auto-complete was accurate; in fact, it was more accurate than I would be. It also saved me lots of typing, and as an unapologetically lazy programmer I *might* call that a win.\r\n\r\nBut it was not a win. The repetition was the direct result of the structural deficiency with overly simple build systems: they lack looping constructs. The proper thing to do is to use a loop over a map/table/dictionary, and in my case in particular that means I must do the grunt work of integrating some small language like Lua that can do loops. Does Copilot suggest the right thing? Of course not, at least without me prompting it first.\r\n\r\nDeeper thought: Conventional next-token prediction trains LLMs to *produce* words, not remove words. In our childhood training to become effective communicators, we learn when producing words is necessary; we also learn brevity. And as software engineers, we learn brevity is a good thing as we reduce repetitive lines of code into a loop.\r\n\r\nMy first month: I have never seen the LLM autocomplete a repetitive block of code into a simpler loop. So, I'd love to see an explicit counter-bias during training to simplify and remove words. I *could* ask the LLM to simplify code. That might work (though not because the model is structurally aware of how to simplify code). Regardless, if I'm going to pay for a tool to suggest things to me, I shouldn't have to suggest code simplification to the code suggestor.\r\n\r\nI'm going to keep paying the $10 even if I don't find auto-complete that useful. Copilot has already paid for itself. But I'm left thinking that today's LLMs have over-indexed on the wrong objective.\r\n\r\nThoughts?","submitter_user":"jbeckford","user_is_author":true,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/29vcxz","comments_url":"https://lobste.rs/s/29vcxz/perhaps_ai_based_autocomplete_optimizes"},{"short_id":"x1sdu5","created_at":"2025-09-29T01:42:58.000-05:00","title":"F-Droid and Google's Developer Registration Decree","url":"https://f-droid.org/2025/09/29/google-developer-registration-decree.html","score":94,"flags":0,"comment_count":17,"description":"","description_plain":"","submitter_user":"laktak","user_is_author":false,"tags":["android"],"short_id_url":"https://lobste.rs/s/x1sdu5","comments_url":"https://lobste.rs/s/x1sdu5/f_droid_google_s_developer_registration"}]